describes natural language based expert system public system available com web server since beginning system bilingual relying internal language independent logic representation
using examples mt system czech russian mt system morphological disambiguation czech argue really close languages possible obtain better translation quality means methods problem translation group similar languages using language also discussed
major construction tic translation model lack large parallel cor first describe parallel text mining system finds parallel texts automatically web generated corpus used train probabilistic translation model translates queries crosslanguage information retrieval discuss problems translation model training show preliminary results
describes system provides customer service allowing users retrieve identification numbers parts systems using spoken natural language dialogue also presents evaluation system shows system successfully identification numbers approximately
proposes way improve trans lation quality using information dialogue participants easily obtained side translation component information participants roles transfer rules dictionary entries experiment unseen dia demonstrated recall sion results showed method effective key technology enabling con dialogue translation system
report method corpora natural based rewriting natural dialogues type dialogue would occur one dialogue computer instead human method complement means natural dialogues present method guidelines also illustrate method corpus dialogues discuss three approaches different dia systems development
describe implemented framework developing monolingual multilingual natural language generation applications machine translation mt applications framework demonstrates uniform approach generation transfer based declarative transformations dependency structures syntactic conceptual levels uniform processing describe framework used practical mt applications report learned
describe spoken dialogue language system making air travel plans telephone fully conversational system allows user specify constraints travel plan arbitrary order ask questions etc general spoken english system operates according agenda mechanism rather finite state network attempts user constraints
reports largescale end relation event extraction system present system extracts total types relations events represents much wider coverage typical extraction systems system consists three specialized tagging modules co reference resolution module template generation module report quantitative evaluation results analyze results detail discuss future
abstract explores problem identifying sen tence boundaries transcriptions produced automatic speech recognition systems ment determines level human perform task described well memory based computational approach problem problem addresses problem identifying sen tence boundaries transcriptions produced automatic speech recognition asr systems unusual field text processing generally text commonly used texts nlp machine versions highly documents articles however many types text example concentrate output asr systems differ sort texts normally used nlp number ways text generally single case usually upper may contain tion figure compares short text format would produced asr system fully version includes case information remainder error free texts articles shall referred standard text output speech recognition system asr text many possible situations nlp system may required process asr text obvious examples nlp
describes survey questions incorrect make difficult answer question correctly since difficult detect useful tool performs well using local characteristics reports survey determine whether
abstract javox provides mechanism development spokenlanguage systems existing desktop applications present architecture al existing programs modification use automatic modification ap compiled code grammars used javox based speech grammar mat javox grammars additional semantic component based javox ing language javox successfully demonstrated realworld applications overview javox implemented set tools allows software developers existing process requires changes programs source code speech existing code modifying compiled program javox intended provide similar functionality usually associated mouse actions graphical user interfaces completely develop provide speech interface whatever javox successfully demonstrated several applications previous systems development spokenlanguage systems focused building applications et al et al goal javox traditional desktop applications similar goals project et al intended speed develop ment code
describes mixed tive spoken dialogue system provides show time information improves upon previous dialogue systems two first employs strategy adaptation automatically adapt response generation strategies based effect information extracted user utterances dialogue second dialogue management architecture tive module goal response strategy tion processes providing general framework devel spoken dialogue systems different adaptation behavior
describe architecture spoken dialogue interfaces systems trans forms speech successive tions linguistic dialogue domain knowledge step produces output describing transformation program simple language fi result per treatment tasks resolving pronouns correcting user
past lot work computational linguistics directed finding ways exploit ever increasing volume electronic bilingual corpora efforts allowed substantial expansion computational describe system makes use new tools order detect potential translation errors preliminary
describe system rank sus answers natural language questions process corpus query using new technique annotation ments phrases texts labels certain kinds questions given natural language question ir sys tem returns set matching passages rank using linear function seven variables provide evaluation techniques based results trec qa evaluation system
discusses information extraction ie system textract natural language nl question answering qa role ie qa application shows named entity tagging important component qa ii nl shallow parser provides structural basis questions iii highlevel domain independent ie result qa
discusses information extraction ie system textract natural language nl question answering qa role ie qa application shows named entity tagging important component qa ii nl shallow parser provides structural basis questions iii highlevel domain independent ie result qa
describe evaluate implemented system question answering sys tem combines techniques standard adhoc retrieval ir text summa shallow syntactic semantic sen tence analysis series experiments examine role statistical linguistic knowledge source questionanswering system con previous results find first knowledge word computed ir vector space methods used quickly accurately relevant documents question use text summarization techniques however provides small increases performance limits recall levels text summarization component allows linguistic filters focus relevant passages find even linguistic knowledge offer substantial improvements purely ir based techniques question answering especially integrated statistical computed ir
compound noun analysis one crucial prob korean language processing series nouns korean may appear without space real texts makes difficult identify morphological constituents presents effective method korean compound noun tation based lexical data extracted corpus segmentation done two steps first based manually constructed dictionary segmentation whose data extracted million word corpus second segmentation algo rithm using statistical data proposed nouns frequencies also extracted corpus analysis based tabular parsing operation accuracy turns effective
sentence parser specialized grammar time parser original grammar time time original figure representation twostage architecture first sentence passed original grammar whenever pruned grammar return parse see figure simulated architecture measure original gram mar takes account contribution sentences difficult sen tences experimental results results experiments described tion summarized table figure upper part table refers experiments french grammar lower part english grammar lan guage first line presents data gathered original grammar comparison pruned grammars figures second line pruning grammar based whole corpus testing corpus grammars obtained way contain disjuncts corresponding purely rules french english respectively parse coverage course relevant case statistics parsing time one maximum parsing time crossvalidation ment maximum parsing time retained
present algorithm tool automatically grammars natural language processing nlp systems specifically identified sentences sets sentences also outline approach automatically attribute value grammars using developing grammars nlp systems general enough accept sentences domain constrained enough sentences approach grammars automatically using greatly development tightly constrained grammars successfully used tool constrain grammars speech understanding systems obtained higher recognition accuracy
proposes framework language morphological analysis mainly tokenization first process analysis although tokenization usually difficult task lan english number prob achieving precise treatment lexical entries first introduce concept intermediate units characters lexical entries describe approach resolve problems tokenization language independent morphological analyzer
presents hybrid approach named entity ne tagging combines maximum entropy model hidden markov model hmm grammatical rules strengths weaknesses combination results high precision tagger includes external system generation also
reports work carried de spelling grammar addressing particular issue form shallow parsing combined er detection correction treatment contextdependent spelling errors grammar used system developed aim dealing frequent error types found parallel corpus texts collected projects end users certain grammatical constructions certain error types possible exploit linguistic intelligence provided syntactic parsing yet keep system robust efficient system described thus superior existing spelling ability deal context dependent errors
describes results experiments using new approach information access combines techniques natural language process ing knowledge representation based technique relevance passage retrieval unlike many attempts combine natural language processing information retrieval results show substantial benefit using linguistic knowledge
largescale controlled vocabulary indexing system described system currently almost named entity topics applies documents news topic definitions built substantially automated knowledge engineering
information extraction systems com based pattern matching adapting ie system new scenario entails construction new pattern time expensive process implemented system finding patterns au text starting small initial set patterns proposed user system applies incremental procedure identify new patterns present experiments evaluations show resulting patterns high precision recall
describes experiments establish performance named entity recognition system categorized lists names annotated training data names text identified using lists approach perform well stateoftheart named en recognition systems however show using simple filtering techniques ing automatically acquired lists substantial per benefits achieved resulting measure scores standard test set results provide baseline con sophisticated supervised learning techniques ne recognition measured
information retrieval systems typically retrieving set documents users query describes sys tem attempts retrieve much smaller section text namely direct answer users question smart ir system used extract ranked set passages relevant query en extracted passages potential answers question ranked according well type matches query according frequency position passages system evaluated question answering track give results error analysis queries
abstract present evaluation domain independent natural language tools use identification significant concepts documents using evaluation compare three shallow processing methods extracting index terms ie terms used model content documents focus two criteria quality coverage terms quality alone results show technical term extraction highest rating ever terms combined quality cover age metric head method described outperforms methods keyword
abstract present novel sentence reduction system automatically removing extraneous phrases sentences extracted document summarization purpose system uses multiple sources knowledge decide phrases extracted sentence removed including knowledge context information statistics computed corpus consists examples written human reduction improve automatic sum motivation current automatic usually rely sen tence extraction produce summaries human pro also often reuse input documents generate summaries however rather simply extracting sentences together current humans often edit extracted sentences way summary coherent set articles identified six major tions used editing extracted sen tences including removing extraneous phrases extracted sentence combining reduced sentence sentences syntactic transformation sub phrases extracted sentence phrases general specific descriptions extracted sentences call operation removing extraneous phrases extracted sentence sentence tion one effective operations used edit extracted sentences tion material word prepositional phrase
analyze performance name finding context variety automatic speech recognition asr systems context one character recognition system explore effects word error rate asr performance function amount training data speech effect outofvocabulary errors loss punctuation mixed case
explores usefulness technique software engineering namely code tation development largescale natural language grammars information usage grammar rules test sentences used detect rules redundant test sentences likely causes overgeneration results show less half grammar german actually tested two large testing time redundant methodology applied seen reuse grammar writing knowledge
describes implementation key aspects theory dialogue processing whose main concerns provide models ground ing role discourse processes system uses dialogue move engine assumes model dialogue ts knowledge terms informa tion states subject various kinds updating mechanisms
many corpusbased machine translation systems require parallel corpora present algorithm requires source language corpus word first identify similar words occurred context large corpus determine similarity set similar words different translations word bilingual thesaurus
abstract part speech tagging english seems reached human levels error full tagging rich languages czech still open problem results far satisfactory presents results obtained using exponential model five languages focuses data sparseness issue especially languages extensive annotated data languages conclusion argue strongly use independent morphological dictionary preferred choice annotated data circumstances full morphological tagging english part speech pos tagging widely described recent past starting followed others using various methods neural networks hmm tagging decision trees learning maximum entropy select however different methods english tests unfortunately english im language complicated agreement relations word order variation morphological categories either ex simple plural nouns example almost cases expressed tion example many exceptions therefore number tags se english
impact constraint dependency grammars cdg accuracy integrated speech recognition cdg ing system compare conventional cdg annotated sentences sentences grammars evaluated parsing speed improvement word sentence accuracy integrated system improve recognition accuracy con cdg less general expanding sentences templates provides us increasing coverage grammar minor recognition accuracy background question integrate language models speech recognition systems importance recognition tasks investigated speech community become increasingly speech recognizers used interfaces dialog systems et al zue et al many sys tightly integrate ngram stochastic language models power limited regular grammar recognizer et al et al et al build ac speech recognizers however order act based spoken interaction user speech signal must mapped internal repre obtaining syntactic representation spoken utterance high degree utility mapping semantic representation without structural analysis input difficult correctness mapping sentence interpretation eg expressions internal believe significant additional improvement accuracy gained specific domains using complex lan research supported research national science guage model combines syntactic semantic domain knowledge language processing module regular grammar mod tightly integrated spoken lan guage system advantages dis advantages associated choice harper et al tightly integrate language model power contextfree grammar acoustic module requires power two modules matched making integrated system fairly difficult train ing language model acoustic model becomes possible use powerful language model without increasing computational amount acoustic training data required rec furthermore language model developed independently speech recognition component clearly acoustic language mod also adds flexibility wide variety language models tried single acoustic model systems language model operates speech recognizer include zue et al goal research construct ex evaluate prototype spoken lan guage system integrates speech component nlp component uses syntactic semantic domainspecific knowledge accurately select sentence speaker first describe system built describe mechanism used rapidly de domainspecific grammar improves ac speech recognizer system developed prototype spoken language system figure integrates speech recognition component based grammar model based constraint grammar cdg speech recognizer implemented hmm simple integrated word gram mar et al coefficients first second order differences used feature vector speech frame model training done using standard parameter mixture model feature distributions speech recognizer em version viterbi algo rithm et al pruning produce pruned recognition lattice pruned lattice contains likely alternative sentences account sounds present utterance well probabilities without loss formation lattice compressed word graph harper et al harper acts interface rec cdg parser word graph algo rithm begins recognition lattice identical combining word nodes exactly preceding following nodes well edge probabilities probability adjacent nodes ever possible resulting word graph represents possible paths without eliminating adding paths modifying probabilities word graphs increase useful tic information passed hmm cdg parser compared current speech recognition systems cdg parser parses word graph identify best sentence consistent acoustics utterance additional knowledge parser hmm allows us construct powerful combined system without increasing amount training data hmm computational complex ity either component modules nlp component implemented using cdg parser harper power ity particular supports use syntactic semantic domainspecific knowledge uniform frame work cdg parser supports efficient parsing alternative sentence hypotheses word graph harper harper cdg dependency grammar better model languages hence cdg used processing wider variety human languages grammar capable representing using context dependent information unlike traditional gram mar approaches thus providing degree control syntactic analysis sentence cdg extracted directly sentences annotated dependency information ie syntactic relationships accuracy combined system benefit ability create grammar domain pre possible consider sen tences would make sense given domain corpusbased grammar likely degree control next section describe construct cdg corpora top hypothesis selection figure language system learning cdg rules section introduce cdg describe cdg constraints learned sentences annotated grammatical information
present unsupervised method grammatical errors negative evidence textual corpora system developed tested using responses test english foreign language error recognition system performs precision
describes method ing conditional probability distributions parses unificationbased grammars auxiliary distributions estimated means show used incorporate information lexical selectional gathered sources stochastic unification based grammars ap stochastic lexical functional grammar method general applicable stochastic versions categorial grammars grammars
abstract describe novel approach local parsing hpsg gram mar provide empirical assessment various parsing present bidirectional tion test typed feature structures demonstrate subsumption applicable large hpsg grammars average parse complexity greatly reduced bottomup chart parsing hpsg implementations background ambiguity inherent natural language means parsing segments input string may end analysed type linguistic object several different ways different ways must recorded parsing steps must treat set analyses single entity otherwise computation becomes theoretically algorithm example parse items maintaining pointers alternative tions association item process termed local ambiguity structure built parser parse context free cf grammars represent linguistic objects terms atomic category symbols test parse thus able sub analyses associated symbols final parse every differ combination nodes distinct valid parse tree existing unificationbased parsing systems either
present based text summa uses operations derived human written abstracts extracted sentences using reduction phrases combination phrases together coherent sentences work includes statistically based sentence position program identifies phrases summary original document pro aligned corpus summaries articles used develop
automatic generation text summaries spoken language problem containing incorrect words passages due speech recognition er describes comparative experiments passages higher speech recognizer scores ranking process show relative word error rate reduction achieved time accuracy summary improves
automatic generation text summaries spoken language problem containing incorrect words passages due speech recognition er describes comparative experiments passages higher speech recognizer scores ranking process show relative word error rate reduction achieved time accuracy summary improves
describe empirical evaluation mixed initiative spoken dialogue system conducted two sets experiments evaluate mixed initiative automatic adaptation aspects system analyzed resulting dialogues along three performance factors discourse features distribution results show mixed initiative automatic adaptation aspects led better system performance terms user tion dialogue efficiency systems tation behavior better matched user efficiently resolved dialogue resulted higher overall dialogue quality
current spoken dialogue systems strategies identifying problems arise reports results learning automatically identify predict problematic dialogues corpus dialogues collected may help spoken dialogue system ability predict prob dialogues allow systems dialogue manager modify behavior problems even perhaps train problematic dialogue classifier using automatically features identify problematic dialogues significantly better base line classifier trained automatic first exchange dialogue predict problematic dialogues accurately baseline one trained automatic features first two perform better baseline
spoken dialogue systems important system know likely speech recognition correct input cases many errors occurred change interaction strategy human prosodic features accurately predict recognition hypothesis contains word error acoustic confidence score used automatic speech recognition present results indicating prosodic differences correctly incorrectly recognized turns train formation corpus present machine learn ing results showing use prosodic features automatically predict correct versus incorrectly recognized turns improves use acoustic confidence scores alone
since statistical parsing algorithms demonstrated parsing accuracy measured treebank standard report adapting lexicalized probabilistic contextfree parser information extraction evaluate new technique template elements template relations
issue regarding algorithms contextfree grammars cfgs top lefttoright fashion left recursion lead algorithm known transforms cfg equivalent non cfg resulting grammars often large practical use present new method removing left recursion cfgs theoretically superior standard algo rithm produces compact cfgs practice
sentence boundary partofspeech pos tagging framework describe necessary changes text tokenization implementation pos tag provide results evaluation sys tem two corpora also describe sion traditional pos tagging combining approach proper name identification handling made resulting system robust domain topic
compare time complexity lefttoright bidirectional parsing techniques contextfree grammars grammar formal language models used several stateoftheart realworld parsers pro evidence lefttoright parsing cannot within acceptable called property based complexity results repre regular languages
relatively human computer interaction people use human machine due way guage interfaces designed found given simple spokenlanguage interface pro half subjects used least nearly used extensively interaction
central instance prosodic particularly computational morphology since involves copying part phonological string finitestate method com lexical representations via tion implement copying proposal variant automata benefit existence algorithms finally implementation complex case presented
proposes approach semantic annotation combines notions robust parsing grammars present overview preliminary research aimed results recent project tion speech information systems techniques based notions successfully applied goal article give development environment linguists
developed word sense disambiguation algorithm following disambiguate among wordnet synsets algorithm used crosslanguage information retrieval system queries documents concept representation based wordnet synsets goal improve retrieval precision word sense disambiguation evaluation human disambiguation judgements suggests promise approach
constructing natural language interfaces computer systems often requires ad reasoning expert capabilities addition basic natural language understanding pa per issues frame actual application concerning design language interface access online formation retrieval systems short sion application requires natural language understanding reasoning capabilities general architecture fundamental design criteria system developed university presented system named aimed al users directly access natural language services online ta bases attention later focused basic functions namely understanding dia strategy generation reasoning knowledge methods adopted also short example interaction presented directions future research also discussed
abstract major problem automatically analyzing text military messages order data base ments fact ie identifying statements versus degree belief confidence parameters particular event comparative evaluations events future events describes model accounts range information message discusses means representing information context experimental system automated data base generation background several years research development effort process operating systems company operating systems inc aimed automated creation data elements text electronically military et al et al objective research provide automated capability largely manual task maintaining data bases derive information elements text messages although effort devoted primarily interactive approaches problem messages highly summary formats majority research development work concentrated difficult task analyzing
ii categories errors task understanding naval messages implemented presence large database domain specific knowledge program uses internal syntactic semantic analyze texts correct errors arise understanding syntactic errors missing punctuation errors spelling usage output system english translation message describes knowledge mechanisms implemented system
age increased attention problems database organization retrieval problems query languages one major economic problems many potential databases remains entry original information database specialized information extraction systems therefore potential entry information already available certain restricted types natural language text contains discussion problems engineering systems description particular system designed extract information regarding tions experimental sections papers literature produce data containing relevant information
describe parallel implementation chart parser obtained parser measured number small naturallanguage grammars part operational questionanswering system parser ran times faster serial version
information retrieval systems support searching large textual databases typically accessed trained search provide assistance end users gap languages authors building thesaurus form large semantic network support interactive query sion search end users lexicon built analyzing merging data several large english dic testing value retrieval smart systems
abstract introduce multivoc realworld product french language starting ordinary french text generates realtime high quality speech using method process ing divided main transformations automatic prosody generation frames provides full description multivoc including technical view also applications product within real world presentation multivoc multivoc system result technology transfer research developed basis system industrial company made system commercial product generating linear coding frames ordinary text written french goal multivoc give standard applications ability produce real time speech output multivoc complete software system aims provide enabling applications directly french spoken text software package consists set dic used several tools package allow advanced user tailor specific usage static configuration facility multivoc also provides several features specific requests application change following parameters frequency generated
system computer program designed occurring texts constrained extract information answer questions information system currently stories domain language analysis strategy used combines full syntactic bottom parsing conceptual top parsing four knowledge sources ing syntactic semantic information domain knowledge interact flexible manner produces robust semantic analyzer designed deal lexical syntactic knowledge easily new facilitates extraction information
describes exploration implicit relationship expressed lists online thesaurus series automatic steps taken properly con relationship resulting semantically related word senses believed constitute useful tool natural language processing work
presents practical machine translation system based sentence types economic news stories conventional machine translation mt systems rulebased approaches translate certain types associated ap service news stories topics include many fixed expressions compound words difficult processed conventional syntactic analysis andor word selection methods proposed mt system stories machine translation system translate news sentences fixed expressions system consists three processes handle different types sentences fixed type type general type focuses mainly translation method sentences kind examplebased approach translation method fixed sentence trans lation data plays key role data set bilingual templates built automatically fixed english sentences japanese transla tion equivalents fixed english sentences extracted automatically ap corpus series experiments evaluate using news ap news stories showed translation accuracy higher rulebased mt method
propose semiautomatic tool might helps professional translators identify technical terms translations tool makes use partofspeech tagging word alignment programs extract candidate terms translations although extraction programs far hard user filter extraction algorithms emphasize completeness native likely miss reduce burden user filtering phase candidates presented convenient order along useful evidence interface designed might currently used trans business translation language line terminology application natural language technology statistical corpusbased linguistics produced number technologies including partofspeech tag bilingual word alignment unfortunately technologies still widely practical applications might speech taggers used applications speech synthesis et al tion answering word alignment found places brown et al et al used ibm parameters statistical machine translation prototype brown et authors current address dept computer science bar university al suggest part speech tagging word alignment could important role construction translation extremely important transla tion would want term character menu translated manuals technical terms difficult translators generally subject domain either author source text reader target text many cases may num ber acceptable translations important consistency single one would manual use variety particular menu translation make extensive ensure consistency cor technical terminology large list terms translations task constructing two generating list terms finding translation equivalents first task referred monolingual task second bilingual task constructed transla tion read much background material possible source target languages extremely process
authors propose model ing english sentences including coordinate conjunctions equivalent words syntactic analysis english coordinate sentences one difficult problems machine translation mt systems problem selecting possible candidates correct syntactic structure formed individual coordinate conjunction ie determining constituents conjunction typically many possible structures produced mt systems cannot select correct one even grammars allow write rules simple pa per presents english coordinate analysis model provides top scope information correct structure taking advantage symmetric patterns model based balance matching two lists feature sets provides four effects reduction cost improvement word dis interpretation robust analysis model implemented incorporated mt system pro accuracy practical translation use
discuss combining knowledgebased rulebased statistical partofspeech taggers use two taggers xerox tagger tag text combine results produce fully text word test sample taken previously unseen corpus achieve accuracy presents data detail describe problems encountered course combining two taggers discuss problem evaluating taggers
part speech tagging hidden markov model statistical model used assign grammatical categories words text early work field corpus tagged human train model recently et al training achieved minimal lexicon limited amount priori information probabilities using automatically model report two experiments designed determine much manual training information needed first suggests initial ei lexical transition probabilities achieve good accuracy second experiment three distinct patterns two patterns ultimately reduces tagging rather improving pattern applicable quality model similarity tagged training corpus cor pus tagged heuristics ing use tive manner given conclusions agreement give greater detail different parts model background partofspeech tagging process assigning grammatical categories individual words cor pus one widely used approach makes use statistical technique called hidden markov model hmm model defined two collections parameters transition probabilities ex probability tag follows preceding one two second order model lexical probabilities giving probability word given tag without regard words either side tag text tags probability word probable sequence tags given sequence words de probabilities two algorithms commonly used known fb viterbi algorithms fb assigns ity every tag every word viterbi tags cannot chosen lower ones competing corresponding computational
reports techniques used successfully translate help computer english even techniques simple case seems method useful cases well good motivation research done possible method
current mt systems whatever translation method output free text part due inherent problems particular method instance ity mt account achieving ex coverage knowledgebased mt sys mt systems syntactic structures source target languages hypothesis mt environment use best results variety mt systems text overall quality improve using novel approach mt version mt project input text machine translation systems results chart data structure select overall best translation using set simple heuristics output experiment used three mt knowledgebased mt system engine et al examplebased mt system see et al et al original due lexical transfer system analysis synthesis modules relying number databases abstract machine translation mt systems currently achieve quality trans lation
proposes model using realtime spoken language translation spoken language translation translation real time response already proposed model machine trans lation translates sentence ex performs disambiguation target word selection concentrate second er ie retrieving examples similar part total processing time implement er ex including frequent word ex results show er com demonstrates ability vocabulary thus model spoken language translation
information retrieval large parsing require text identify lexical textual databases order linguistic computational efficiency unificationbased parser large textual grammatical databases grammar term rules obtained tagging term lists line dictionary large data text processing handling term basic terms semantically close quality extraction computational efficiency evaluated experiment industrial processing two large technical corpora shows application industrial data term results increase recall although automatic indexing application compound
project technical product multiple languages prob particularly amount translation work done ing technical response project aims creation technical tation knowledgebased multilingual generation build knowledge base model product question produce multiple languages present system produces english german french application domain manuals one realworld texts domain practical instead world time language used manuals relatively simple one finds written produce text ex structure manual sections largely uniform system architecture system based knowledge technical domain text structure typical manual section first describes object lists possible next described
abstract currently produces bilingual public several system good professional found human ever tion output needed sub language engineering issues include coverage handling tion lexical language model able new text types support spoken output background system overview developed ing et al et al tests environment regular use first recently operational half text produced using using facility supports graph analysis providing based concept formation needed text generation applications concentrate analysis give less still taken much time effort text generation work environment new operational linguistic first pro design users compared
abstract spokenlanguage allows use ordinary spoken english control assign modify ing control sys tem functions combines number integrated use open including speech recognition system natural language parsing interpretation sys tem module field graph com number including air ground currently provide control simulated us overview spokenlanguage interface goal com interact simulated manner similar possible way way would actual currently interfaces allows use ordinary english com create control assign modify control system functions example following sequence com used simple
describe evaluate efficient method automatically de small boundaries speech method applies neural network information part speech words find limited amount data less words training set small context two hidden units neural performs extremely well task less error rate com precision recall unseen data results better using different approaches
two projects spoken natural language interaction graphical user interfaces existing military systems approach rather developing new fully systems de nl applied tools well explore relative strengths weaknesses graphical nl interfaces two used combination powerful interaction natural language processing capability two systems described technical et al detail issues graphical interfaces first interface devel spoken natural language interface integrated graphical user test tool naval air control system objective functionality nl interface parallel allowing com graphical approaches reference also two interact number ways reference combined ing nl interaction graphical dialog guidelines following guidelines ap developing spoken
developed system called provides spoken language interface information system use natural ask different types information control system information tabular form interface user use either mouse interface however use often allows user many mouse single query speaker independent completely software developed de advanced research projects demonstrate advanced speech recognition language understanding technology data base tasks enabling users specify information database english supports applications military processes formal experiment conducted major general users could perform tasks time using speech compared using mouse users also speech would reduce training time use used integrated
linguistic knowledge ac model making use data types finite memory mechanism new information known data model compared standard tic methods applied data tested task
grammars languages greatly multilingual engineering related languages much wider range linguistic typically standard multilingual grammar taking grammatical particularly grammatical languages used applied computational linguistics order language grammar design consider relations units linguistic even relations allow various basis data show domain syntactic building basis grammar
research effects word order segmentation translation retrieval experimental trans lation memory system implement num ber word similarity test character based indexing translation retrieval performance system configuration evaluated word edit translation model translation results indexing indexing tation given domain word approaches demonstrated generally methods source language edit effective similarity metric
present approach incremental ac lexical information words constraint based standard unificationbased grammars although applied kinds domain german show morphological information especially successfully acquired using type based analysis furthermore alternative strategy makes use finite state
describes hybrid proposal combine stochastic contextfree grammars language ngram model used local relations words tic grammatical model repre relations structures order grammatical model used complex tasks probabilistic model word distribution categories proposed methods learning stochastic models complex tasks described algorithms com word transition probabilities also presented finally experiments using treebank corpus test set regard models
stochastic grammars sentence show stochastic grammars use trees instead contextfree rules stochastic grammars used parsing models grammars metric based outperforms probabilistic metric corpora results corpus also contains first experiments
explores usefulness technique software engineering code development largescale natural language grammars information usage gram mar rules test corpus sentences used improve grammar well adapting grammar specific results show less half grammar german actually tested two large testing time redundant method applied seen reuse grammar writing knowledge construction grammars results performance four
previous work adding examples corpus examplebased machine translation system reduce required amount pre translated example text much order french english using word au example corpus provide majority improvement manual work required large bilingual dic tagged parts speech manual creation grammar rules small manually information even better performance achieved describes method bilingual word per formed using standard monolingual document techniques example corpus required
table presentation papers table extraction text data mining focuses mining largescale texts table filtering recognition interpretation presentation discussed rules identify table recognition also propose algorithm relationships among table finally data extracted
lexical wordnet whose parameters estimated list object found corpus property networks helps model deal natural fashion word sense ambiguity training data word sense disambiguation test model better state systems unsupervised learning selectional computational complexity problems ways improving approach methods graphical discussed selectional sense ambiguity semantic subject object object called selectional information object likely kind subjects human subjects focus relation although techniques describe applied would brown linguistic information processing provided us training test data help networks used experiments research supported entity
report results use linear hidden markov model task extracting technical terminology abstracts texts domain first system extract event information automatically updating databases trained based lexical character features relatively small corpus abstracts domain term using crossvalidation methods achieved examine contribution made part model data sparseness
presents learning system identifying syntactic structures system use background knowledge order build initial grammar use theory order improve grammar combination provides good machine learning framework natural language learning illustrate presentation learning system generates regular grammar phrases corpora
abstract simple largescale approach lexical recognition presented rules addition four features set words results significant precision recall overview recognition important issue several information retrieval text understanding merging sentences improves summarization et al term variant recall information retrieval documents contain linguistic query terms et al technique proposed morphological syntactic features partofspeech category number agreement morphological relationships phrase structure analysis results shows approach correct incorrect cannot purely basis additional lexical must taken propose simple largescale approach lexical variant recognition addition two syntactic features two features nouns results significant precision recall new approach efficient simple linguistic features
propose model semantic conceptual dependency structures abstract interpretation generate semantic minimal dependency rules whose categories derive conceptual interpretation semantic interpretation structures descriptions dependency graphs increase linguistic interpretation lexical conceptual reduces amount complexity semantic
abstract describes several knowledgebased natural language processing techniques question answering system capable mining textual answers large collections texts quality achieved several knowledgebased nlp techniques complement shallow approaches background information extraction ie realworld texts systems extracting information messages templates information events situations typically templates model queries regarding recently new information processing texts textual question answering qa aims identifying answer question large collections online documents instead extracting events related qa system short text answer questions expressed natural language constrained specific domain limited six question types ie systems ie qa systems finitestate technology domain knowledge made ie systems combination knowledgebased question processing new forms text indexing queries generally systems combine
feature important text processing applications information extraction information retrieval effects semantically simple classifier establish novel method statistically combines two presented evaluated existing techniques assigning labels
proposes new unsupervised learning method obtaining english disambiguation rules would improve accuracy pus tagger method implemented experimental system automatic pos system extracts pus disambiguation rules text corpora different types linguistic knowledge ie pus tagging rules syntactic parsing rules already fully implemented mt system experiment obtained rules applied sentences corpus group sentences changes made tagging results improvement also improvement tagging parsing speed increase
describes use techniques lot automatic extraction knowledge rules extracted knowledge allows adaptation speech processing systems language case approach variant spoken part based respectively compare two techniques learning evaluate extracted knowledge accuracy linguistic relevance rules transformation rules learned easily
probabilistic contextfree grammars grammars simple parsing techniques used unfortunately grammars produced standard usually much original described produces grammar recognition set original recognition others combined two produces grammars much original
describe constructed automatic function machine translation quality function makes use many natural language processing software designed process english language text functions available software constructing functions based upon software output able achieve preliminary results english english suggest function may used mt system
automatic problem foreign words ones machine generated useful various applications indexing information retrieval system synthesis system present model statistical english generates candidates probability model designed various information sources conventional markov also efficient method alignment units described experimental results show recall trained words words best candidates
presents method generating association thesaurus text corpus demonstrates ap information retrieval generation method consists ex terms data corpus analyzing terms statistically new method dis structure compound nouns key component term extraction also proposed generated thesaurus used tool information novel functions term thesaurus overview proposed
present method korean technical documents many english words korean words various forms ways english words korean usually technical terms proper nouns hard find dictionary therefore automatic system needed find english words without manual use combine different information method three steps first make network shows possible given word second step extracted training data possible obtain probable given english word
generation problem certain relevant gram main result set grammar particular contextfree language result ex contextfree based grammatical also contextfree extracted per tive given particular context free grammar whose set many existing generation strategies bottomup alternative ways creation contextfree result general gram scope present
texts different languages korean english structural features word phrase give useful information pa per present method selecting structural features two languages construct model assigns conditional probabilities corresponding tag bilingual english korean corpora tag sequence mapping two languages first structural feature function represents statistical empirical distribution set training system based maximum entropy concept se features produce high increases training mapped features knowledge statistical machine translation english korean also information help reduce parameter space statistical alignment ing
goal text documents certain number pre defined categories previous used large number training documents supervised learning one problem difficult create training documents documents manually training documents propose unsupervised learning method proposed method documents sentences sentence using keyword lists category sentence similarity measure uses categorized sentences training proposed method shows similar degree performance compared traditional supervised learning methods therefore method used text needed also used training
present method flexible mixed initiative dialogue system make effective us ing concept level confidence derived speech output order handle speech recognition errors two content words using speech recognizer parsing grammars useful selecting less given con process strategy interpretation accuracy used users generates even interpretation obtained
since previous tagging consider partofspeech information models cannot lexical information crucial resolving morphological ambiguity introduce lexicalized partofspeech tagging english korean lexicalized models use technique data sparseness experiments lexicalized models achieve higher accuracy models method data sparseness better simple methods
order produce good summary one identify relevant given text describe method au training topic sets related words associated head topics illustrate trec texts se topics describe possible topic automated text summarization system
dialogue strategy spoken dialogue system involves many pa per presents learning approach automatically dialogue strategy addresses technical learning dialogue system human users show approach improves performance system
hybrid system tagging part speech described consists tagger rulebased tagger uses different based context information obtained information rulebased construct set transformation rules make tagger com experiments show almost errors made tagger correct transformation rules hybrid system accuracy words words small corpus words used train ing accuracy far higher using also higher using rulebased model
describes incremental algorithm learning translation rules existing bilingual corpora notions bilingual information source target sentences corresponding results learning phase translation patterns network proposed framework evaluated small training corpus providing results improve system performance
machine translation systems procedure set transfer rules generating target language transla tion given source language sentence mt system many competing transfer rules best set transfer rules translation may evaluation ex number competing sets propose problem based current best first chart parsing algorithms
due grammatical even mapping korean japanese words usually result high quality machine translation however translation units compound words etc mapping component words often appear resulting translation one lexical item rather phrase types propose representation recognition method characteristics mt system experimental evaluation proposed method effective handling showing average recognition accuracy recognition time
processing syntactic parsing useful tools proposed field natural language many nlp tools ap thus tools often efficient texts written texts contain many domainspecific terms lack vocabulary propose simple method obtain domainspecific texts using statistical information method experiments sequence extraction texts japanese extracting significant semantic test corpus tried morphological parsing test corpus japanese morphological parser ex systems efficiency extraction semantic recognized system words correctly
interaction grammars new linguistic based descriptions trees framework logic syntactic ex linear logic controlled system features way parsing generating models tree descriptions implemented constraint
present integrated system tagging texts certain language approach based stochastic finitestate models automatically includes models finitestate automata using grammatical techniques models system automatically flexible system order show approach present results tagging using gram models corpus achieved accuracy rate tagging precision rate recall rate
propose algorithm similarity two segments words language similarity vector whose levels analysis segments algorithm extremely efficient retrieving best example translation memory systems also words two segments allows translation memory systems examplebased machine
article present statistical approach machine translation based parsing translation use source sentence certain probability consists two trees one source language one target lan guage formed create translation since typically many sentence source language many different translations probability translation total probability form translation give aspects model show con probable translation com means disambiguation fi discuss experiments corpus
presents use probabilistic disambiguation target word selection method employs minimal precise information information provided information probabilistic con used done unsupervised manner techniques method shows results evaluation realworld translations
describes hybrid approach speech parsing implemented parser uses probabilistic parsing model rich context output processed tree transformation errors parser parser trained three different languages successfully integrated translation system parser utterances german english input cannot
present novel machine learning techniques identification informa tion czech compare three different statistical techniques applied problem show learning algorithm used dis cover previously frames czech dependency treebank algorithm used czech treebank either using techniques able achieve precision unseen text
describes approach using se representations learning information extraction ie rules tive logic system nlp machine translation system used automatically generate semantic repre text corpus given system results show high precision recall learned rules
focuses issue named entity japanese named entity recognition supervised decision list learn ing method japanese named entity tion also incorporate noun phrase evaluate com performance addition propose method information well patterns within named entity previous research show proposed method outperforms previous approaches
one problems machine trans lation mt mapping problem german present english problem seems particularly requires well events time speech present algorithm makes use establish order phrases described algorithm implemented system follows sections present problem discuss linguistic factors disambiguation sections devoted abstract discussion effects scope resolution tion actual disambiguation algorithm presented section describes test data summary present future english german present commonly used describe present future one task translation german english therefore tion german present present time future time present future time present time work science framework
describes experiments automatic construction would useful searching large document collections text ments address specific information answer question
present noun german based probabilistic context free grammar manually developed grammar rules order allow parsing text model parameters learned training data probabilistic contextfree parser extracting noun parser generates possible noun analyses scores novel algorithm best sequence probable sequence evaluation noun call precision
state transition grammars intermediate grammars parsing algorithms intended description parsing strategy grammar allows de general parsing algorithms grammars including grammars number order de may fixed various grammar terms parsing valid parse items also discuss ity parsing direct parsing sets tree constraints
one way ex however expressions occur variety forms information important resolution presents work real expressions natural language dialogues
describes method retrieving patterns words expressions used specific domain building machine method uses text corpus retrieving word partofspeech tem identifying syntactic categories presents experimental results ap words expressions pattern based machine translation system
within machine translation system translation four independent translation modules four competing translations combined selection module form single output input utterance se module confidence together native translations since confidence computed four independent mod different one directly order comparative describe learning method using human determine confidence describe sources information used select ing competing translations de way selection process quality service
describe search procedure machine translation mt based starting tion problem present novel technique possible word source target language achieve efficient search algorithm search especially useful translation german english presented experimental tests carried task vocabulary spokenlanguage task
results presented strongly support well differences language systems investigated linguistic patterns speech real speech data total german speech analysed regard internal structures particular focus syntactic morphological characteristics computational models form finite state automata also illustrate german speech formal
developed summarization method summary process information retrieval results unlike conventional methods extract important sen tences method short phrases reduce burden sentences developed prototype summarization system japanese rather largescale task based experiment summary system effective ir results summarization method also applicable languages
summarization multiple documents ing multiple topics discussed consists articles include lot top method proposed based documents semantically annotated document annotation tags method extracts important documents im parts network important relations among also identifies expressions ones method provide format transformation andor generation summarization pro among natural language processing tasks
propose new lexicalized grammar called lexicalized tree grammar tree instead trees discuss grammar present chart parsing algorithm implemented translation module conversational texts using applied experimental automatic interpretation system speech translation system
describes method find phrase level translation patterns parallel corpora dependency structure analysis use statistical dependency parsers determine dependency relations base phrases sentence method tested business corpus containing english japanese sentence achieved accuracy extracting bilingual result shows use dependency relation helps ing translation patterns
developing information extraction ie system new events relations one major tasks identifying many ways events relations may ex text generally manual analysis cases tation large text events presents alternative ap based automatic pro identifies set documents set event patterns text starting small set patterns evaluate com performance patterns manually constructed systems actual extraction tasks
analysis korean text processing applications information extraction efficient syntactic analysis complicated problem since expressions often ambiguity syntactic roles discusses two problems representing identifying sion syntactic function case tic role expressions context disambiguation called local context using lexical data extracted corpus finite state ex turns method effective analysis particular approach shows corpusbased work could make result problem restricted domain deal large lexical data
new type grammar learning algorithm string edit dis algo rithm takes corpus sentences input returns corpus sen tences method sentences one words two sentences divided parts sentences parts different information used find parts parts taken possible constituents type alignment learning step selection learning step prob able constituents possible constituents method used structure corpus et al corpus et al results obtained precision approach suggest possible
present summarization system dialogues consists novel architecture specifically aimed addressing issues related texts spoken written system graph user interface developed tested recorded telephone english
research devel machine translation allows translation capabilities used develop several machine translation systems including english system demonstrated present architecture systems well development methodology
describes tagging designed russian treebank presents tools used corpus creation present describes project aimed developing first annotated corpus russian texts large text corpora used computational linguistics community enough present large corpora main languages available containing words language far however annotated corpora russian developed best knowledge present project first gap different tasks require different annotation levels different amount additional information text structure corpus framework present project consists several differ level annotation following three levels texts every word form part speech tagged texts every word full set morphological along part speech tagged texts full morphological word level every sentence structure russian texts dependency structures languages relatively free word order structure contains information words sentence also one several syntactic types present use syntactic relations complete representation annotated corpus major since majority annotated corpora already available construction represent syntactic structure means constituents work czech annotated corpus collected university see corpus syntactic data also expressed dependency although set syntactic functional relations much smaller relations follows describe types texts used create corpus section format section annotation tools section types linguistic data section source text selection university corpus russian words chosen source work corpus well smaller science texts corpus includes russian well recent coverage written russian use conversational examples appear dialogues texts format design follows several annotation levels extracted processed independently higher annotation levels convenient parsing annotated text means standard software natural criteria language tried make format text see guidelines new elements situations provide means describe text structure dependency grammar framework types information text structure must relative used text sentences available used sentence boundaries may attribute sentence within text may used information relations text may also attribute used linguists particular syntactic encountered sentence sentences lexical items words words sentences words may attribute used reference word within sentence morphological features words morphological information word means two tag word form morphological features information structure information syntactic use two word syntactic function also auxiliary information eg multiple morphological analyses trees final version corpus annotation tools procedure corpus data automatic initial version generated computer using general purpose morphological analyzer parser engine results automatic processing human analysis engine morphology parsing based upon machine translation engine see et al support creation annotated data set tools designed implemented tools applications written tools available program sentence boundaries called building editing annotated texts structure amount manual work required build complexity input data different building structures sentences processed without human case processing result structure contains errors edit using graphical interface see errors many structure could produced may use includes manual pre input phrase structure every must manually produced every single structure encountered syntactic construction correct structure may whole sentence single words whose functions completely information sentence one editing presents main dialog editing sentence edit directly edit single using graphical source text analysis written edit top although written information single words written list eg first word although form feature list consists single feature partofspeech conjunction word word relation type au item word list dialog editing single words convenient way editing structure consists tree sentence previous tree interface simple natural words source sentence written left morphological features written syntactic relations directed types text source sentence one word means word new word single sentence fi structure word al ii er figure sentence dialog sentence part er er figure tree dialog word dialog types linguistic information level morphology information morphological analyzer features every word feature set russian includes part speech number case degree comparison short form representation information already result parsing tree single words rather syntactic every syntactic group one word head chosen represent syntactic units group become head typical case number nodes syntactic tree number word however several situations occur number nodes may less even greater number word case especially description following cases sentences present auxiliary eg syntactic representation expressions type sentences discussed detail constructions known one problems natural language corpus elements syntactic trees feature example sentence words new exactly morphological features present sentence certain cases feature set may differ prototype eg phrase required agreement subject second way syntactic relationship types generated system enough present different syntactic function types relationships divided major quantitative auxiliary give equivalent english examples relationships word examples translate english russian relationships often noun expressed noun etc relative quantitative relationships noun word two words one quantitative five five relationships word various relationships conjunctions auxiliary relationships typically two elements form single syntactic list syntactic relations process data variety syntactic constructions traditional grammars cases led
present system wide linguistic allows system major work transfer formal grammar analysis construction
model corpusbased machine translation along representations used transla tion system representations rich shows different required de whether better translation quality coverage preferred according coverage quality
work texts english describing particular event type multiple news sources described system developed extracts events texts english russian japanese extraction currently carried using information results set combined produce table event original documents original documents summarized translated system using techniques information retrieval information extraction summarization machine translation multilingual environment new documents produced provide access news events multiple sources discussion key developed accuracy coverage techniques used experiment
describes machine translation architecture integrates use examples flexible translations use linguistic rules coverage grammatical accuracy implemented prototype translation evaluation shows system good translation quality requires computational
describes issues development grammar multiple languages focus design selecting error identification rules evaluation determining product
implemented interactive machine translation system speech recognition synthesis local correction speech recognition machine translation output online learning architecture implemented provides computation translation speech describe user interfaces easily produce different useful
implemented interactive machine translation system speech recognition synthesis local correction speech recognition machine translation output online learning architecture implemented provides computation translation speech describe user interfaces easily produce different useful
proposes method extracting bilingual text cor pus basic method ap existing corpus based crosslanguage information retrieval approach conducted tests english japanese corpora method led much better results task ex translation compared corpusbased method without extracted translation could useful training data improving results corpusbased method
first investigated factors make extracts hard read human subjects extracts produce ones factors five related rules implemented system extracts
framework statistical machine transla tion words source target language learned bilingual corpora basis alignment models many systems use linguistic know structure models argue training data typical large enough represent range different natural advantage ex
present compare various ment models statistical machine translation propose measure quality alignment model using quality viterbi alignment compared alignment de annotation produce able reference also compare im different alignment models translation quality statistical machine translation system
large annotated corpora important role natural language processing annotated corpus requires high accuracy consistency build consistent corpus often use manual tagging method manual tagging expensive furthermore consistent results human present efficient tool building large consistent corpora minimal human proposed tool supports automatic tagging using disambiguation rules acquired human human manual tagging steps
report one two tasks information retrieval extraction project project information retrieval information ex japanese project many participants total us named entity ne task task extract names time expressions expressions news articles first task well data results second analyses results described include analysis task ne types sys tem types analysis domain dependency comparison human performance
speech occur often dialogues ability detect cor necessary spoken language system present framework detect correct speech levels information ie acoustics integrated basic reduce search space possible filters features first acoustic module generates hypotheses existence second stochastic model suggests correction every hypothesis well new paths word lattice finally lattice parser
translation automatic translation main however coverage unseen text use transla tion memory finite state proposed number applied sentence bilingual corpus translation used translation preliminary results german english corpus given
recently project uniform independent interface multiple dic lexical via lexical data dic project formats order data convenient standard format high level transformation language devel language simple use yet power enough perform complex transformations possible similar transformation tools provides tions similar used natural language translation tool written standard available general public
generation module speech speech dialogue translation system presented input generation module semantic representation design strongly realtime robust processing design efficient generation system general module performs lexical syntactic choice makes input domain knowledge output fully input fashion whole generation procedure also combines template method generation technology preliminary results also presented
present novel approach bilingual sounds words bilingual corpora method models similar models developed statistical machine translation experiments show method able determine bilingual less method identify higher accuracy previously algorithms
proposes new term method documents ir system unlike summarization method information query similarity information among original documents similarity structure word information probabilistic distribution word term
presents maximum named entity recognizer previous machine uses information whole document word one classifier previous work involves information whole document often uses classifier sentence based classifier show maximum entropy framework able make use information directly performance best previous machine test data
describe using dictionary wordnet web search performance automated question answering system answering questions results dictionary answer together increase performance set questions rank score finding answers top
order answer questions qa system employs range knowledge include qa answer patterns wordnet information typical answer semantic relations identified robust parser filter candidate answers describes knowledge impact system performance
bilingual help construction wordnet strategies discussed proper translations noun synsets synsets automatically precision shows corresponding matching provide phrases processed correct due senses
presents framework information retrieval systems feature proposed method documents terms related elements textual information small implementation method together experimental results
methodology proposed taking queries requests expressed natural language input answering interaction dialogue well languages important especially used people analyze amount data order find characteristics resolve questions problem situations correctness context proposes framework resolve framework form includes proper treatment form handling utterance framework implemented
describes method translates input string generating addition presented bidirectional method advantages lefttoright method generating output ways merging two directions experimental results japanese english translation showed better translation lefttoright translation also bidirectional method better translation
extracting sentences contain important information document form text summarization technique key automatic generation summaries similar written humans achieve extraction important able integrate information one approach parameter machine learning lot attention proposes method sentence extraction based support vector performance experiments compare method three existing methods results text summarization corpus show method highest accuracy different features effective extracting different document
named entity ne recognition task proper nouns information extracted documents categories organization key technology information extraction question answering first show ne recognizer based support vector better scores conventional systems however task therefore present method makes system substantially faster approach also applied similar tasks partofspeech tagging also present feature selection method efficient training method
one key issues spoken language translation deal expressions utterances research development automatically utterances transfer spoken language translation approach proposed morphological analysis required addition pattern construction method described patterns efficiently learned corpus human using implemented obtained patterns experiment conducted results evaluated
help developing system automatic machine translation evaluation method implemented edit criteria experiment shows evaluation method well translations ones method consistent human evaluation mt systems compared analysis made experimental results tests level made ensure results linear automatic results human
speech dialog systems deal various kinds speech appear natural dialog particularly problematic although many ways dealing correction proposed correcting propose method problems japanese speech dialog evaluate proposed method using speech dialog corpus discuss work remains done
addresses problem automatically selecting best among multiple machine translation mt systems existing approaches select output highest score according model cases existing approaches work well proposes two methods improve performance first method based multiple comparison test whether score language translation models significantly higher others second method based probability translation others scores experimental results show proposed methods achieve improvement performance
ne named entity recognition difficult problem word segmentation flexibility language structure proposes use model framework problem strategy use ne model evaluate detect possible text treat process selecting best possible problem resulting system robust able handle different types ne test test corpus system able achieve high ne types
abstract language users individual linguistic spoken dialogue system may benefit adapting linguistic user input analysis output generation automatically according linguistic three corpora spoken dialogues analyzed several parameters computed every speaker parameters reduced means component analysis analysis unseen input trained neural networks error corpus type first using language models speaker carried motivation within spoken dialogues participants make individual use linguistics language one linguistic important et al quantitative analysis linguistic used linguistics literature time determine written texts describe system written natural language queries adapt grammar starting simple basic grammar user provides input found significant differences among linguistic patterns generated different users user fairly consistent several spoken dialogue systems important
describes dialog based qa system dialog answer questions based large text knowledge base real world qa systems questions problem system users answers using following methods users dialog description extraction text feature system relevant texts using question types dictionary relations japanese sentences
summarization documents collected time subject document changes time focuses subject presents method extracting key documents discuss event extraction method uses results event sample documents finds documents discuss event method tested corpus result shows method
presents method resolve using incremental crosslanguage information retrieval framework propose query korean first translated english dictionary documents based vector space retrieval translated query terms documents document document using experiment test method achieved performance improvement translated queries without ambiguity resolution queries monolingual performance original queries combine method query ambiguity resolution method even outperforms monolingual retrieval
proposes unsupervised learning model named model uses training set built automatically means named entity dictionary corpus us named without cost building large training corpus lot rules model uses three different learning methods learning new training examples generated learning various learning methods better result individual learning method experimental result shows precision recall korean news articles
method unification grammars speech recognition presented particular rules transfer unification grammars speech recognition grammars resulting contextfree unification grammar redundant grammar rules method tested unification grammar english using speech recognition software corpus utterances different results showed significant computational speech recognition speech recognition grammar compared grammars without
abstract increasing recently previous direct methods english korean main research topic present model using rules unlike previous method uses information context also use word formation information english words method shows significant performance increase word accuracy korean many technical terms domain specific text especially science engineering foreign written original forms korean words various forms makes difficult handle natural language processing especially information retrieval words different ones different forms one possible dictionary contains english words possible forms however practical technical terms mainly problem usually rich automatic automatic english languages english japanese et al et al english korean et al et al et al et al direct methods english korean
automatic text problem automatically assigning text documents categories order text documents must extract good features previous research text document commonly term frequency document frequency feature since important sentences sentences document features important sentences features measure importance sentences using text summarization techniques document vector features different according importance sentence new method conducted experiments two language data sets one written english written korean four kinds used experiments new method made significant improvement data
presents answer selection method based support vector question answering qa selecting ranking answers large number candidates documents one parts qa systems extremely difficult find good evaluation functions rules answer selection issue answer selection evaluate performance measured rank correct answer ranked first results show proposed method statistically significant increase performance compared machine learning methods decision tree learning decision tree learning maximum entropy method
describes unsupervised learning method relationships phrases important developing qa systems consider user query much qa system text given system includes description description good find answer query largescale database provides relationship aim develop unsupervised learning method obtain relationship call scenario consistency method currently uses em based algorithm evaluated method using japanese phrases
software engineering system document written natural language nl translated one formal languages system translation automated resolution ambiguity document implicit domain knowledge necessary approach natural language processing used ambiguity domain knowledge expressed language result formal representation nl even implementation
terminology ta methods knowledge problem information access systems information extraction systems restricted application ta seen way large text collections extracting domain knowledge argue major term obtained term propose decision tree learning approach model human ta incremental model proposed term ta process particular implicit domain model experimental based robust text processing tools support large good results suggest proposed automatic ta model support development conceptual domain required knowledgebased information systems
named entity extraction useful many natural language applications categories ne work complex applications question answering generation examine one category named describe method automatically present supervised learning method local context entity well semantic information derived topic wordnet method algorithm takes advantage presence multiple
document two roles give compact summary lead reader read document conventional generation focuses finding key expressions document give compact summary attention make second role properly content effective target article first identify typical content aimed general comparative technical papers next describe results survey effects content survey general shows different
one issues training statistical translation models bilingual data propose techniques bilingual data translations monolingual data provided several translation alignment using alignment algorithm used sequence alignment present application technique bilingual data general domain train statistical translation models bilingual data show resulting statistical translation model outperforms individual translation system
describes features dependency structures japanese spoken language spoken dialogue corpus proposes stochastic approach dependency parsing method head syntactic dependency constraints method probabilities spoken dialogue corpus tagged dependency structures provides dependency structure utterance basis probabilities experiment dependency parsing utterances spoken dialogue corpus made experimental result method effective robust parsing spoken language
generation complex task natural language understanding natural language synthesis propose new probabilistic model generation different previous statistical models generation treat generation generation process information directly information model hidden state called generation two steps namely step document step generating estimated experiment new probabilistic model outperforms previous model generation terms automatic evaluations human
order correctly free form question given large texts one question level allows determining constraints question possible answer constraints may include semantic answer may even suggest using different strategies candidate answer presents machine learning approach question learn classifier semantic answer types questions show results large questions used trec
discuss grammar development process used generate trees lexicalized tree grammar english project result simple yet application approach generate large set trees grammar small initial set trees
lexical techniques known much work field result extremely lack attention statistical semantic models satisfactory semantic model found concept semantic number semantic support lexicon semantic possible time vocabulary language lexical process lexical item lexical item exponential lexical model directly consistency requires process process shows form test used correctly formed show must processes statistical treatment questions possible time much research
discuss sets grammars whose power set contextfree grammars set context grammars sets developed grammars abstract versions users natural languages unlike natural languages might subject formal grammar first provide formal models techniques used natural languages linguists later formal grammars used models capabilities users natural languages see language users differ language subject amount available amount time perform operations available least theoretically amount material intermediate results probable internal organization natural language user may use therefore one uses formal grammar model language user one may consider effects grammars abstract versions certain types one model natural language user capable dealing contextfree languages subjects however natural language users may available contextfree grammars according current additional required construct grammars among one might include ability order elements string ability elements ability effect elements property context grammars however grammars additional models capabilities users natural languages generation phrase whether resulting rewriting systems generate sets suggest one thus system see contextfree grammar systems capable generating sets might want enough produce features grammar systems one way grammars might consider generating languages abstract versions types users natural language users might users natural languages information processing systems manner computer processing one way roles parts parts handling natural language described semantic syntactic language description respectively since largely syntactic component consider effects processing processing rewriting rules grammar application done state present computer sequence symbols applied change results memory output given fixed number finds formal formal grammar appear either side rewriting either side contain symbols however much also way multiple precision string side contain symbols set grammars contain two symbols either side rewriting rules power set grammars set grammars contain three symbols rewriting power set contextfree grammars first part used rules grammar new
system proposed assigning derived given sentence obtaining corresponding base time rules grammar system associated information analysis sentence obtained set grammar rules used analysis contains information necessary direct mapping derived corresponding system also used given complex sentence sentences purpose structure matching query sentence document sentences information retrieval experimental program proposed system written currently tested small sample grammar see procedure obtaining phrase structure grammar proposed type given grammar system analysis
various improvement phrase structure grammars recently particular model described described even may contain power produce com sentences generated grammars eg type handling multiple con well use rules improvements allow grammar generate sentences language trans grammar improvements obtained cost much power level cases de ie generate
abstract automatic syntactic analysis grammatical rules means parsing logic computer case logic five simple parameters finds structures grammar thus testing rules without rules far logic system however operating grammar rules constructions must made complex multiple analyses expressions rules system provided additional capability order although additional parameter system grammar additional parameter lefttoright constructions together decision grammatical decision related language operation parsing logic assistance general due first called attention problem elements
machine translation project national aim translation computer russian texts english order test far aim provide evidence giving machine translation service carried evaluation experiment translations far possible translations service results experiment presented together summary translation methods used whole thus give independent presentation methods produced results account translation techniques see reference evaluation translations translation russian texts might evaluate results work context use translations two main constraints thus majority translations subject material translated ie would translations main professional may inherent background knowledge ensure high translations help syntactic would also small would russian items translation read typical normally whole information units article abstract sections units use sentence context even help sections specifically particular sentence may translated reader see important sentence context sentences sentence may whole constraints evaluation experiment expert field material evaluating also information whole individual sentences short passage one evaluated translations full translation version however full translation available presentation full translation reference evaluation experiment order first constraint russian papers professional general engineering papers resulted direct others resulted open machine translations papers return useful results also obtained second subjects therefore far possible mt service particular subject usually knowledge russian papers response translated seven various evaluation papers two three one group one experiment produced papers follows subject since already translated three papers customer translated part reached computer subjects translated version programs translated give free usefulness translations quality could us recently reference adopted since space given range following adopted fully even expressed good sentences may normally enough takes good deal time extract even confidence resulting understanding could useful hard even would often although may appear would finding derived basis useful since four us independently good agreement four individual reduced single rating normally discussion range scores score due real variation quality translations combined scores thus professional translators dealing text highest ones perhaps dealing text real translations quality result provides evaluation wider range potential translations possible make possible assessment usefulness mt output total usefulness ii usefulness decide machine translation service based system general usefulness translation many particular discussion able position done development work short full implementation techniques designed particular translation full work given reference reference given three concerning respectively english equivalents ii syntactic resolution iii word order frequent missing equivalents addition fully kind also cases proposed preferred reader dictionary result choice made completeness alternative including possible equivalents would course particular often difficult achieved satisfactory degree obvious problem high frequency word example words resolved together either word complement example increase words specific syntactic cases see reference two selection among two three equivalents seems us reader additional carried far even already used recognition include words see summary methods semantic analysis achieved multiple equivalents minor attention multiple equivalents followed understanding increased example results actual often results real problem could perhaps using space sets multiple equivalents output concerning translations eg work instead would work list items would figure syntactic analysis would reduced full implementation syntactic described reference one minor resolved theoretically implemented order frequent subject course according english usage complete analysis made among treatment units dictionary entries others led complete difficult case instance produced one see general made difficult identify word standard dictionary may certain word much translation may many exceptions however may choice without syntactic clearly knowledge russian eg objects automatically recognized also inherent word may part identical applies particular short example general way dealing words best seems however include output original possible equivalent words rather one translation read used unusual found instance human translation intended version means way finally several machine translations would show advantages cost speed human translations order acceptable criteria would without cost speed within evaluation experiment data translation service could however machine equivalent human ie input machine translation output human show advantage would component overall translation system translation short passage machine translation english russian text completely lists two three words read alternative english russian word position original russian text summary translation methods text dictionary dictionary used machine translation system developed early version computer dictionary contains entries additional entries engineering dictionary english translation en ts co al al fi co co ts co co co co pa ad co al co co ts co co co co ts act co ts ts ts russian original text ii tem new fb basis entry contains russian together list combine far entries would found full form dictionary words entry contains grammatical data english equivalents russian create system russian words fully described made maximum number together form russian string maximum technique causes many part words made early word words provided dictionary entry search entry full information word dictionary recorded two entries order time full dictionary number entries text translation first characters cannot read russian symbols punctuation characters one per character made indicating space left text group symbols translation boundaries means relatively small number text computer first process serial number text word word text words process order speed dictionary next translation sequence dictionary text dictionary entries corresponding text words allows correct handling entries output call following text consists text words relevant dictionary entries obtained set text entries translation sequence text order using text serial number text word result series operations text original order dictionary entries items symbols punctuation course corresponding dictionary entries may words text computer given treatment syntactic translation output made dictionary representation using method used ordinary dictionary key word chosen normally least occurring word entry key word representation includes list component words using presence text word sequence syntactic operations text dictionary entry including contains preferred english equivalent dictionary includes coding words dictionary given treatment text words one set russian without form occur dictionary form found entry form text english russian text words dictionary made determine part speech case number etc grammatical translation output word far possible original word given english equivalent output also given english text produced would simple process achieve word translation application relatively simple rules grammar greatly product russian analysis algorithm first designed implemented system noun simple analysis results obtained means syntactic processes first functions russian analysis english synthesis syntactic cover features functions analysis synthesis order make possible linguistic model described developed model analysis russian far necessary facilitates transformation corresponding english sentence structure analysis sentence defined major punctuation boundaries full question functions successive follows preliminary text sentences punctuation elements preceding following sentence items according set formal rules whose structures ie nouns words adjacent elements include prepositional group potential conjunctions structures conjunctions coordinate simple structures searching words role adjacent structures whose function examine role difficult words forms pronouns full description analysis given reference present shall russian sentence effect analysis russian sentence first analysis particular present context system reference addresses set sentence structure state state sentence second one noun group formed coordinate group coordinate group assumes analysis function prepositional sample prepositional following nouns prepositional would also second analysis conjunctions occur within simple noun ie single noun head however existing noun nouns conjunctions pa addition together coordinate similar words conjunctions whatever part speech punctuation formation coordinate coordinate group formed given grammatical component parts analysis effect sample sentence plural short form single et adjacent prepositional would group role also negative conditional structures function resolve roles certain difficult words occur sentence example one pronouns encountered made see whether following sentence forms five also analysis russian sentence sentence structure analysis complete since made set structure however order task synthesis procedure group structures elements together one higher whole synthesis analysis applied reference example see reference sample sentence would appear analysis would additional translation sequence english synthesis process determines english equivalents finally format output produced computer process described also includes account model work described carried national
new method automatic keyword extracting role proposed based japanese sentence structure analysis analysis takes account following features japanese sentences ie structure sentence dependency indicating words important role case structure noun restricted semantic processing becomes possible automatic indexing system interactive function developed evaluation system news information retrieval results evaluation show system practical use
directed grammars kind translation grammars defined tree directed grammar equivalent tree fact follows given arbitrary contextfree language input tree directed grammar produces output language
aim present lexical selection semantic capability built representation language model semantic descriptions process knowledgebased sentence generation particular lexical selection structure generation addition model dependent target languages
describes approach translation internal expressions similar used recent approach translation attention focused construction internal expressions japanese sentences based case structures also japanese expressions english ones generating good english sentences conventional use finally associated translation extraction translated information japanese sentences described case structures parsing every japanese sentence main end sentence takes part preceding follows term case auxiliary words japanese language term syntactic role term sentence main set syntactic case labels determines syntactic function main sentence called pattern pattern plays important role identify syntactic structures sentences japanese patterns english semantic view japanese
proposes new model machine translation model obtained syntactic semantic analysis source language sentence target language generating function target language sentence obtained result evaluating functional application model provides powerful way human knowledge languages prototype constructed system performance tested four sample texts taken existing technical reports computer
machine translation must view rather purely linguistic method translation system named based parsing model developed experiment shows generating phase multiple resolution future grammatical parsing process tree grammatical data representation translation results also described
application machine translation systems computer technical translation well possible ways development operation computer interaction linguists commercial machine translation system described application machine translation systems computer translation technical literature importance information service various science technology volume translations done translation translation traditional means translation main tools information translation machine translation systems mt computer become technical translation one problem mt systems time differ structure aims methods application information service mt systems intended full translation texts one language aimed human computer either automatic interactive human present commercial mt systems number features important following mt systems bilingual
describes new knowledge representation called frame knowledge experimental machine translation system named uses purpose information required machine translation processing possible make translation system possible
method automatic answering questions natural language based input texts set rules described first experimental system including analysis input texts questions procedure search answers individual questions synthesis answers implemented mainly language output representations utterances input text base knowledge representation rules mapping dependency trees dependency trees important automatic understanding natural language different kinds experimental systems sophisticated systems machine translation various kinds dialogue data bases etc question linguistic main consists transfer burden humans able way user input texts native language without human data messages also data bases removed one central tasks linguistics description main features language system necessary must based
answering database query one often providing answer part research natural language databases three ways system could initiative constructing response incorrect users query information additional relevant information system providing systems response ie following responses illustrate correction respectively describes research refers user system taking four three shall know three linguistics database systems complex domain models reasoning capabilities many important systems able user responses regard whose role role rather give basis either systems response reasoning least three issues
present stateoftheart field machine translation seems greatly due fundamental lack formal translation models needed natural language processing view difficult translation theory linguistics model full natural language understanding systems developed intelligence research seems translation theory unfortunately problems discussed detail linguistics differences scope appear since may well present target language seems full understanding necessary many cases standard syntactic may specifically regard pro disambiguation lexical items source language resolution crucial problem machine translation preliminary manner set formal translation models according ing disambiguation power certain types texts complexity power translation system measured amount needed lexical component might call andor data built
system automatic construction semantic networks experimental question answering system natural language interface based single sentence figure structure system developed project automatic construction semantic networks applied computer science technical university project supported science technology systems structure automatic semantic translation language understanding semantic representation knowledge base management component performs semantic tation natural language correctness understanding answer translates systems natural language semantic representation language representation language therefore whole system defined following languages basic finite set two describe objects world include term variables describe relations objects objects list well formed important concept concept set
purpose attempts demonstrate usefulness machine translation description syntactic semantic behavior prepositional constructions aim modify existing prepositional phrases order efficient use machine translation furthermore case information interface structure machine translation system parsing parsing sentences translation differ significant ways parsing natural language tasks number natural language analysis particular discussion issues following cases cases conceptual cases much issue al case system natural language understanding programs preceding however become machine translation one could better make use various case systems increasing three types cases consider dependency relations constituents ii cases provide information participants iii conceptual cases give
objective contribution describe two question answering method answering overall outline given procedure input sentence recognized question however would search whole data base thus small part data base set representations sentences relevant given question consists sentences contain least one term semantically equivalent actually occurring ie question set data base rules us set thus set statements relevant answer set would limits necessary strategy whole process two different strategies discussed first experiments represent sentence dependency tree using rules conditional rewriting trees formal view set rules set trees
french russian automatic translation system developed translation part information processing system sense able use approaches methods proper information processing field indexing making etc system translation building text information representation ir task requires two types analysis linguistic analysis information analysis interaction particular able automatic thesaurus aim building sentence semantic representation important individual sentence con function ir whole text version system whole text limited sentence less context linguistic analysis morphological structure words syntactic semantic structures sentences structures language still higher levels analysis built individual sentence without regard sentences normally incorrect etc units construction text ir requires operations comparison different units well comparison thesaurus units proper
fully data model lexical databases proposed lexical databases multiple formats lexical propose model based feature structures problems inherent database models particular merging information multiple ways use representation linguistic information feature structures lexical databases seems natural although knowledge yet implemented use feature structures lexical databases also computational
describe controlled english analysis several existing grammars development grammar variant basis nlp applications use program use controlled english grammar within desktop environment
discusses implementation sentence generation component machine translation system since task therefore almost algorithm method based constraint present preliminary evidence likely offer greater efficiency previous algorithms approach multilingual machine translation process sentence generation beginning lexical rather conventional form structure translation sets lexical symbols means monolingual grammars implemented work described improve correct algorithm provided problem describing new algorithms generation since linear order source language business monolingual grammar ensure target language business algorithm ensure efficiently possible example grammar index variables
task machine translation system difficult first must knowledge linguistic languages second must able incorporate knowledge system provides several types among english german describes approach syntactic level level approach described implemented system called machine translation system translates english german
machine translation presented method translation processes according input transfer knowledge central knowledge translation various kinds levels knowledge applied input sentences examplebased framework transfer analysis knowledge consistent framework examples makes transfer analysis effective efficient translation achieved prototype system translates japanese spoken english promise
problem natural language analysis systems one major system new domain development set semantic patterns patterns typically needed syntactic analysis selectional constraints control translation representation systems complex domains set patterns task manually becomes therefore increasing patterns automatically sample text domain analysis word patterns either text word text work later article specifically using techniques manual develop selectional patterns new domains experiments therefore particularly evaluation automatically generated patterns terms completeness accuracy terms selection parsing patterns word semantic patterns could terms individual words occur subject etc practice however would produce number patterns even small domain therefore semantic word domain state patterns terms
proposes examplebased machine translation methodology translation templates examples translates using template matching method improves translation quality facilitates machine translation systems focuses automatic learning translation templates translation template bilingual sentences corresponding units words phrases variables units using bilingual dictionary analyzing syntactic structure sentences syntactic ambiguity ambiguity units resolved translation templates generated bilingual corpus source language part resolve among templates whose source language parts whose target language parts different using proposed method transfer rules also knowledge lexical selection extracted bilingual corpus one key issues automatic learning corresponding units words phrases bilingual texts far know research done work degree procedure automated however made independently developed algorithm corresponding units bilingual texts deal sentence problem bilingual although important automatic learning translation examples rather discusses algorithm learning translation templates assumes technique parallel sentence alignment available section present two phase examplebased machine translation system sections describe algorithm learning translation templates translation examples finally section discuss features proposed system examplebased machine translation figure examplebased machine
describes syntactic rules applied japanese speech recognition module translation system japanese free order language since syntactic rules applied constraints reduce search space speech recognition rules account possible phrase almost effect using constraints instead recognition weaknesses certain syntactic categories treat minimal number rules work first examine syntactic categories easily second dialogue corpus order provide rules based rules finally speech recognition experiments
present limits speech recognition understanding context free spoken language although limited vocabulary effects dialogue system typically non robust dialogue manager limits often presents structural approach handling dialogues several types presented must dialogue manager robust system strategies handling based structural approach implemented system first recall aspects model describe strategies system
machine translation system using translation templates users represent bilingual knowledge needed complex translation evaluate analyzed bilingual text improvement result shows sentences translated model translations combining proposed framework conventional functions
translation examples important issue examplebased transfer systems systems use general translation examples describes mechanism dealing translation examples examplebased transfer system proposes method identifying examples translation
proposal made use information machine translation japanese english describes use context information features semantic network simple approach taken best processing information semantic information shallow level
methodology presented machine translation mt evaluation error analysis complement existing evaluation methods methodology particularly knowledgebased machine translation systems discussion mt evaluation criteria particular evaluation proposed methodology largescale application machine translation system present sample results
addresses important problem examplebased machine translation namely measure similarity sentence set examples new method proposed similarity according structure content second contribution use make retrieval best matching example database efficient results large number test cases database presented
proposes effective parsing method examplebased machine translation method input string application linguistic patterns variables boundaries boundary expressed either functional word partofspeech structural ambiguity structure using total examplebased framework machine translation efficient robust translation within examplebased framework parsing method using bidirectional translation japanese english method also
find sequence translation candidates cover input string possible translation many source text elements possible use best available candidates quality output variety possible ways input text processing similarity chart approach find best candidates three heuristics used internal quality produced static relative quality assessment particular used translation better quality heuristics generally finding sophisticated ways combining individual important improvement system algorithm final result et system used heuristics uses cover cover best score correct component quality scores described detail approach approach module used input text segments assign one available mt among possible translation whether
theory lexical entries based lexical theory accounts lexical transfer syntactic first language also accounts lexical grammar grammatical variation use lexical item theory tool robust parsing lexical transfer errors
lexicalized grammar lexicalized grammar lexical item associated least one structure syntactic semantic thus parser lexicalized grammar must search large set ones combine parse sentence present techniques using local lexical local lexical similarity dependency grammars dependency model disambiguation performance results various models disambiguation models presented
abstract russian part experimental system japanese russian automatic translation although also applications based primarily model russian functions rely dependency data input information implemented ibm general information system russian morphological synthesis developed part experimental system japanese russian automatic translation described operation however completely independent system could used system source language system also used translation eg reference russian morphology syntactic agreement russian part system etc two major operation query task query operation input query represents processed morphological characteristics obtained processing output primarily input necessary
present novel method input sentence words assigning parts speech words consists statistical language model efficient search algorithm algorithm require words thus written japanese proposed japanese morphological analyzer achieved recall precision open text trained tested corpus
language sentences whose words space using statistical information grammatical information often used describe method experimental result japanese sentences seen result shows system efficient sentences
approach approach appear first methods described space become less expensive first step build complete list forms language using morphological specialized languages linguistic programs etc large generally used applications word desktop presentation etc main advantage cover complete language since forms found initial list also allow efficient retrieval words however limits systems process give good languages english mechanism give full list technologies still powerful languages russian example list russian words reduced languages high find technologies give practical results instance full list words current methods morphological knowledge methods text language efficiency techniques may using specific language ii first approach adapting existing method using existing method first step efficient method used french spelling first step work consists building full list forms using morphological forms existing corpus final large word dictionary process compressed format process table results process languages see efficiency method language word forms german table result small must find techniques produce smaller dictionary method method initial applied morphological system fully forms words built adding propose words one form beginning code represents code represents purpose program processes full list forms using existing already give reduced lexicon many forms one representation set reduced lexicon represents initial list without missing words incorrect words compressed words reduced list figure example words example obtained result process next crucial problem resolve find best provide best reduced lexicon method must automatic must process large word dictionary regarding initial list must give output best reduced dictionary implementation algorithm see much space could technique starting manual manual method starting different full lists category words nouns different processed full list tool best category maximum forms method many candidate category word best one account frequency dictionary entries method tested different word lists results described information see consider following sets ta er ei set built ei tool reduced list french russian list complete dictionary number forms logic russian experiments done two ways first using logic alone conjunction methods reduced lexicon list compressed words text format obtained method input existing methods three methods tested following using commercial process method used used build combines morphological taking account language without also contains features finitestate machine using finite state lexicon allows list forms results described table improvement obtained combine method previous one results show existing methods first step important results space others aspects systems retrieval would results given table followed results showing improvements retrieval words proposed architecture spelling figure shows architecture proposed spelling method previous methods presents new original aspects allow multilingual summary system following features method multilingual constraint using different tools specific language create list forms space logic process able reduced lexicon whatever language use one task still remains improve logic making task finding best problem must algorithms algorithm stochastic algorithm case find reduced lexicon starting large morphological knowledge list even results first experiments show process words faster existing methods furthermore paths introduce functions similarity key final obtained lexicon make words conclusion approach previous methods taking account new parameter exceptions dictionary corpus reduced lexicon format abstract provide practical spelling good algorithms current techniques used languages provide efficient spelling methods languages different morphological system results better results mechanisms based structure language experiments multilingual show significant reduction rate logic alone even better results using method conjunction existing methods key words spelling dictionary finitestate
example important grammar one generating language construction grammars recall contextfree procedure finite used analysis handle grammars based parsing algorithm grammars derived results grammars result resolving decision using symbols grammars grammars defined sets sets elements sets correctly sets important role theory formal languages contextfree languages using consider arbitrary finite order defined follows set finite set set elements called fixed summarized word set first
consistent text contains rich information resolving within sentences even simple syntactic information word patterns extracted text without discourse analysis improves accuracy sentence analysis resolution typical information use information along information syntactic position candidate resolved correctly experiment computer manuals
previous dialogue systems dialogues two many applications however require several participants speech act definitions handle based model belief approach advantage number way motivation spoken language applications led increased issues real time processing online error dialogue online process linguistic et al et content simply making utterance makes full participants signal exchange seven seven term goal show one plans acts environment even even may large enough model participants example consider exchange view next group
discourse strategy strategy effective dialogue systems requires among discourse strategies design effective strategies must factors account propose new method testing factors present experimental results effective strategy proposed method computational dialogue provides new empirical basis computational linguistics
type sentences may application general important make two users states name concept attribute concept example user following name question system user name know give precise language sentences language form content one pre content term logic object field atomic attribute object function example field users knowledge attribute five sentences content representing attribute one five labels sentences pre user attribute dialogue user know instance pre means user already interaction means user know systems sentences users current knowledge used exploit user model dialogue system instance means user sentences evidence gained users utterance systems instance means user name means system name case form object used terms relative object instead form object used sentences representing objects pre sentence representing object eg pre user object object sentence representing field eg pre means user expert field objects related field constructing networks network represent direct variables representing order represent knowledge terms network must relation sentences language directed combination case network two one represents users knowledge dialog used users model utterances sentences nodes part either pre call part nodes either used deal systems utterances call part important make system concept proper user related concepts example user also close system relations part network categorized four types follows relations objects field relations objects relations object relations attribute object evidence user relations field objects field related field introduce field object nodes field example compact name level controlled conditional probabilities object nodes field thus framework introduce arbitrary numbers level relations domain knowledge domain relations based user close relations symmetric single directed networks represent symmetric relation order represent symmetric relation introduce evidence two two nodes figure figure sentence system adds evidence network made showing relation makes probability represents evidence obtained next utterance user user know input system evidence obtaining evidence belief probability lot causes probability pre next may using evidence system two users understanding also evidence probability evaluation results dialogue table conclusion proposed approach user dialogue systems knowledge representation terms networks discussed reasoning would automatically directly evaluating network followed stochastic problems intelligence known computational complexity thus method approach networks evaluated stochastic probabilistic reasoning cost however still expensive present parallel implementation good performance results user models mechanism use utterance generation required done utterance generation achieve systems goals probabilities user model measure plan iii natural language processing approaches adopted field plan recognition lexical disambiguation adopted networks user user one dialogue systems whose behavior strongly parts system construct experimental dialogue system users speech starting user ex model seems rulebased approaches potential dealing approach deal reasoning propose probabilistic approach user dialog systems networks used represent users knowledge provide problems previously potential advantage approach attempts user advantages approach rulebased approach follows first rules updating user models necessary four main sources information used user model user system user level user relationships concepts domain incorporated representation networks used user model evaluating networks second network provides information users knowledge case knowledge either use know concept model therefore usually degree belief concepts model degree belief means however approach provides degree belief probability remainder four sections section devoted outline networks section knowledge representation terms networks discussed model updating model taken evaluation network section given along experiment show advantage approach section networks reasoning based probability theory requires probabilistic general complete probabilistic model probabilities variables domain problem complete probabilities requires numbers example consider case variables value complete probabilistic model probabilities variables distribution sum one automatically gained practice difficult specify probability concerning purpose users knowledge concept whose value users knowledge concept almost specify probabilities thus involves users knowledge patterns networks far probabilities provide complete probabilistic models information gap obtained domain network quantitative characteristics therefore represent knowledge probability networks directed graphs nodes representing directed representing direct dependent relation variables one distribution network nodes probability set nodes nodes without probabilities necessary probabilistic model reasoning networks evaluating probability nodes given evidence providing certain certain nodes networks instance nodes evaluation network done general stochastic updating user models directly evaluating network knowledge domain correctly network next section discuss knowledge representation networks knowledge representation networks language nodes network variables range order represent knowledge terms network must design language sentences nodes network first variables two possible sentences crucial may assign known probabilities utterance table result evaluation approaches system approaches must effective lead system whose interact basis probability theory pre figure symmetric relation conditional probabilities high value two nodes value relations general knowledge object well know ing order represent kind relations introduce object nodes corresponding relation attribute object evidence evidence content different labels pre part network representing relations nodes evidence nodes addition may one attribute made actually domain system new using user already instance nodes system using system shows relations users understanding becomes evidence approach evidence one represent example dealing spoken might user either power evidence nodes pre pre figure finally introduce two attribute three kinds nodes pre two pre means user attribute either already current dialogue system example resulting network figure figure evidence examples user system show way named figure system uses network figure dialogue users user input analysis component needed obtain network users utterances process scope analyzing input system information user name certain know input ie evidence network degree belief concept using probability resulting user model result directly obtained evaluating network reasoning actual process nodes network needed evaluation user name represents high level probability pre also nodes pre pre pre probability pre close user ie pre next system generates using resulting user model task done utterance generation system may decide use system abstract user important dialog systems previous approaches rulebased methods propose represent user models networks advantages approach rulebased approach follows first rules updating user models necessary updating directly evaluation network based probability theory provides us formal way dealing second network provides information users knowledge degree belief concept provided terms probability advantages preliminary experiment
abstract generation words speech involves number processing first conceptual followed lexical selection phonological addition speaker output necessary major parts theory computer experimental time evidence support theory central ability select words retrieve syntactic phonological words context utterance whole theory word first conceptual involves lexical concept given instance object object referred different terms process called taking output lexical concept ie concept word lexicon computational model lexical concepts figure semantic network lexical concept input process called lexical selection lexical concepts information lexicon syntactic words probability within minimal time relative
mt new concept dialogue based mt currently project system text translated one several languages would accept system order document many aspects design system presents architecture language hybrid detail structure dialogue speech synthesis machine translation machine translation dialogue ambiguity resolution speech synthesis first mat machine translation systems user mat systems concept mat mt purpose provide translations large texts end user mt aims translations good enough way system specialized certain system generally least must eg least years mt small texts several developed mat systems translators form tools eg integrated eg concept mt author recently building previous interactive mt text dialog structures aim provide high quality services end users knowledge target languages linguistics second mat systems types knowledge central linguistic based mt uses knowledge language specific knowledge corpus domain term cover information natural language refers interpretation semantic features relations static knowledge describing domains text eg terms rules describing situations context knowledgebased mt uses knowledge top linguistic knowledge finally mt extracting knowledge human author however example using linguistic knowledge dialogue machine interpretation project dialogues task organization may also extraneous events problems feature ambiguity inherent speech input likely systems well knowledgebased mt may rely knowledge base domains types text hence must primarily mat systems internal organization use specialized languages level detail relevant project mt goals large documents authors aims issues approach first building small prototype generally concept within mt community develop architecture would large applications later industrial results enough example incorporate words although develop robust indexing implement lexical data base way would allow order languages grammars even prototype however structure dialogue author must clearly allowed write decide part document kind interaction changes text controlled changes would system interaction linguistic view extremely see experiment andor importance translation almost automatically tests often expressed terms possible transformations given discourse context may ask author outline prototype system constrained follows translation french russian german english previous systems target languages small corpus user interface containing online form computer architecture se mt server language approach free text controlled language linguistic architecture hybrid choice fact supports technical also dialogue tool using interactive use text finally linguistic advantages first textual parts clearly etc translated generate messages must taken directly generated linguistic may lead better second textual parts may typed thus greatly analysis example given field may contain menu items sentences without initial subject often field etc distinct types short textual less collections textual architecture use architecture practical basis first want use system mt systems developed many years although support system second parts sophisticated natural language processing real time small without linguistic parts quality rather possible perform parts still way ibm done system course could implemented single machine operating system system available provided linguistic language language approach free controlled text key quality mt al domain acceptable way controlled language natural language restricted way approach system text completely one technique well restricted domain texts technical abstracts case seems uses general public seems possible one translation one hybrid interface structures produced analysis structures source language sense see also parts relations semantic features abstract time discourse type others number lexical elements syntactic functions lexical one step word senses languages system making independent objects lexical data base ii structure dialogue concerning terminology hence first interaction concerns given system first construct textual field ask small texts others corresponding case texts example subject first sentence taken field containing names ask construct complete text translation corresponding second level interaction concerns spelling however would best use relying lexical database system user must allowed new words coherent behavior system level three concerns terminology lexical database contain thesaurus relations indicating among preferred term among eg term preferred often local change particular without course thesaurus lexical database contain variety terms even incorrect databases usually restricted terms want author use non standard term allowed level four concerns simply quantitative way average sentences frequency complex forms specific words french relative frequency etc seems methods work real time may useful first step text types concerning system directly text written author types interaction work well intermediate forms processing associated original textual field author change level two level five concerns fixed forms especially technical words fixed certain specific translations example menu item translated french would correct uses menu item group functions proper noun phrase whether given group fixed first case generated example certain elements menu items automatically proposed list level six concerns lexical first example word french however french english given non degree source language specific target languages want treat uniform way maintaining lexical database word senses really concepts languages supported system lexical also level problem particularly mt text space containing system complete form often one although disambiguate correctly corresponding forms automatic known given may even difficult candidate complete form text level seven translation content field first step automatic analysis returns structure showing scope questions linguistic terms input text present ways using speech synthesis see instance reference syntactic functions subject might may left next step actually general strategy view would best done template resolution level structure analysis phase returns structure tree several levels linguistic interpretation well language specific may appear phase structure semantic relations cases time discourse type french sentence may order example template resolution used disambiguate text often eg transfer view taken rather possible automatically later much example word sense disambiguation takes early may give disambiguation free flexible would ask word senses early one system could analysis reduces almost variation would disambiguate word senses analysis done prototype allow various strategies iii quality speech synthesis mt speech synthesis translation spoken dialogues also translation written texts actually
abstract traditional framework ambiguity resolution employs static knowledge expressed generally selectional domain specific constraints makes use specific knowledge mechanisms simple ability related words suggests theory lexical making use knowledge representation framework vocabulary lexical information particular specialized ways aspects knowledge structures words context relevant lexical words phrases view presented lexical ambiguity resolution part procedure semantic interpretation sentence lexical ambiguity lexical lexical organization knowledge representation lexicon theory lexical making use knowledge representation framework vocabulary lexical information ultimately goal research use language role lexicon current static lexicon design side effect theory basis semantic interpretation difficult problems ambiguity particular lexical resolved different implementation proposed lexical ambiguity
abstract current research ibm aimed construction substantial containing lexical semantic information capable use automated natural language processing nlp applications work previous research semiautomatic extraction lexical information versions conventional see eg papers et al motivation previous research using manual development practical nlp applications given eg likely nlp future particular approach lexical demonstrate computational explore extracting lexical information approach requires textual corpora lexical theory lexical provide efficient representation lexical semantic information capable semantic account starting research work eg others eg lexical theory eg within unificationbased seen contribution use unificationbased linguistic description specifically minimal lexical semantic
propose framework information based case grammar grammatical entails lexical entry word contain semantic syntactic feature structures feature structure head syntactic semantic constraints grammatical patterns terms structures relations terms structures feature structures information set phrases also provide information identify roles parsing analysis achieved due flexibility case grammar context dependent relations control easily expressed kind unificationbased therefore advantages unificationbased feature structure head syntactic semantic constraints grammatical patterns terms structures relations terms structures feature structure potential head information set phrases also provides enough information identify roles words parsing analysis achieved without additional operation generation structure done identical target thus features account however abstract design limited representation since lexicon necessary fully semantic syntactic information purpose parsing generation furthermore relationship constituents defined roles seems lexical mapping theory represents major approaches
chart data structure efficient word lattice parsing speech recognition applications proposed chart associated parsing algorithm represent parse efficiently lattice word hypotheses produced speech recognition high degree lexical ambiguity without fundamental chart parsing every word lattice mapped chart relation among word hypotheses well chart edge defined representing word hypotheses possible preliminary experimental results show chart parsing possible constituents input word lattice constructed built reduce computation complexity significantly especially lexical ambiguity input word lattice many speech recognition problems chart parsing thus useful efficient approach language processing problems speech recognition applications
abstract syntactic constraints relations within theory lexical functional grammar use functional following general characteristics syntactic constraints next describe variation functional called functional show used model finally discuss constraints natural language mechanism attention elements also discussion relations general characteristics syntactic constraints relation semantic simple cases attention two semantic relation subject syntactic constraints however constraints focus approach constraints proposed et al structure rather two kinds syntactic course case two cases semantic relation complicated summary et al see
algorithms system german algorithm sentence theory syntactic patterns developed extensively implemented system one presented describe end system dependency structure sentence string manner structures generation means process full syntactic tree structure syntactic features changes original algorithms demonstrated tested domain expert system helps electronic utterances test domain show significant improvements forms speech produced systems making use information
describe linguistic problems encountered writing french grammar grammar primarily intended one machine translation system built using unification grammar linguistic environment based system described also part general fully grammars linguistic grammar since allowed must time provide large coverage analysis grammars fully must completely declarative since reference made grammar rules process analyzer use unification makes possible write grammar statements due unification operation result feature structures independent order writing grammars however presents problems arise traditional grammars used either analysis generation addition recently building unification grammars already problems unification based et al even grammar rules generation process generation
problem discussed ie generate feature used target language source language related development mt system russian english german translation russian languages must russian either articles proposed implemented program based functional called grammar rules implemented grammar used analysis synthesis result parsing called functional representation containing descriptions constituents information syntactic functions simple sentence entity called description head noun used respectively possible relative given program generate target equivalent input string according rules certain value required target language english source language russian information may
abstract describe use lexical categories instead simple set categories flexible precise language description dependency structures use structures present application detect correct errors written text outline use improves words work presented part general project aims complete system detection correction errors written text creation module dependency structures lists mechanism show contribution lexical categories construction structures construction dependency structures dependency structures trees give description structure sentence direct words lexical items symbols according grammars structure phrase particular word head words produce tree complex information eg syntactic functions semantic relationships easily trees
approaches speech act interpretation require speech act approaches thus describing acts propose alternative view speech acts actually approach aims similar problems
bottomup generation algorithm grammars proposed bottomup generation high degree process forms produced grammar rules semantic problem describes problems implementation issues algorithm using constraint logic language
designed implemented text processing system extract important information per within new domain system performs efficiently determines level processing required text method identifies relations input text likely interpretation domain approach previous techniques uses conceptual information part bottomup linguistic processing thus using linguistic knowledge fully grammatical complexity
background increasing translations consider translation recent years seen increased research machine translation public potential much evidence devoted work evaluation techniques would know well system developers would know well compared potential able proposed evaluation translation natural language processing whole attempts retrieval large information include evaluation particular field machine translation two first topic second containing much discussion one sub topic within large general based work carried association aimed evaluation strategy translation service translation system commercial internal system perhaps able content dictionary entries type test discussed one several proposed evaluation initial updating dictionary cover vocabulary test corpora least one system tests particular type test construction use test natural language processing community whole evaluation strategy although space account whole proposal evaluation strategy discussion basic help set concerns fundamental two potential machine translation system ever constraints thus preliminary evaluation analysis actually needed constraints less obvious one best translation system fixed general evaluation methodology determine best system however possible different factors may relevant making evaluation suggest ways data basis systems factors may particular case evaluation account relative importance individual factors either data collected making final concentrate one method data relevant coverage source language translations produced specific test cases treatment specific problems system full proposal factors operational dictionary updating time user etc factors whose interaction determines judgements speed efficiency particular retained important particular context evaluation require construction test used obtaining relevant data assumes least knowledge languages linguistics machine translation actual practice demonstrated reports evaluations already carried chosen sense must shall follows also shall questions systems relying controlled input interactive systems standard evaluation weaknesses three kinds past evaluations machine translation systems first technique obtain aspects quality second approach number errors typically simply number made errors important others led attempts errors according set inherent weaknesses shall discussion found inherent weaknesses however two major resulting data whatever provide kind information necessary assessment actual translation quality users machine output provide system factors acquired increasing importance along developing machine translation systems problem natural propose series test test least syntactic coverage system along test set testing english language interfaces data bases major problem test kind interaction different linguistic standard reduce linguistic complexity items item direct thus sentence would used test correct treatment rather sentence complex noun phrases group even test designed test coverage syntactic structures single language construction task much linguistic adding even testing semantic would increase complexity task system tested translation system yet arise even testing limited testing syntactic coverage already construction test fact correct treatment test input intended least acceptable translation target language constraints especially vocabulary used test testing source language also sense introduce problem tested example test input designed test treatment complement english test input corresponding french sentence simple decide de english french equivalent completely different structure output translation incorrect may difficult determine whether generally treatment english whether specific thus test designed primarily systems treatment specific source language
one problems partofspeech tagging texts lexicon words technique fully unsupervised statistical rules possible speech words proposed one learning technique morphological rules simple main word pa per technique non cases performance
spoken language machine trans lation project tic language discourse representation structures used describes num ber allows dealing translation ing problems treatment multiple discourse relation tions level discussed japanese problem possible state semantic constraint resolution multiple discourse relations seems syntactic constraint
given complexity tasks spoken dialogue systems handle learning increasingly used way automatically learning best system make work focused generating better dialogue manager work done using construct better dialogue state presents approach determining dialogue features important spoken dialogue system experiments show dialogue factors dialogue acts concepts performance significant role taken account dialogue systems
present compare two approaches task first sentence extraction based approach second language approach evaluate approaches user find perform well however find perform well different effective method must two approaches
lexical syntactic flexibility expressions develop linguistic demonstrate statistical corpusbased successfully used ones also propose means automatically determining syntactic forms particular appear hence lexical representation
describe implementation data selection conversational dialogue system corpus sentences domain target dialogue system recorded used speaker annotated data used range models generating model making use different amount context within context models evaluated two ways crossvalidation corpus users rate output crossvalidation actual user crossvalidation highest scores models making majority choice within context user showed significant models produced variation especially among subjects
questions associated answer type unlike previous approaches require set question types present method constructing answer type model different question model potential answer probability question evaluation manual semiautomatic methods using fixed set answer labels results show approach superior questions answer type
propose approach extracting relations literature based shallow linguistic information use combination functions integrate two different information sources whole sentence relation ii local experiments extracting two different data sets results show approach outperforms previous methods based syntactic semantic information
describes multilingual statistical machine translation system means web user issue translation requests english statistical technology three supported new easily interface allows use translation system computer
abstract demonstrate new development state dialogue systems allows developers produce complete spoken dialogue systems based business process model describing application eg information environment includes automatic generation grammatical framework grammars robust interpretation speech uses application databases generate lexical entries grammar rules grammar compiled language model speech recognition system allows users create modify spoken dialogue systems starting business process model system describes environment main research issues development business process many use process specify many actions must order complete various tasks eg customer see example representations specify states processes tasks states see eg example figure typically human telephone using presentation step states customer telephone interaction eg order complete business process however representations research supported
demonstrate dialogue system using learning developed university university project prototype first state dialogue system learning dialogue strategies also feature describes main functionality system well future use system research issues construction evaluation system ie baseline system dialogue show
general domain question answering system advantage amount information world wide web since one used languages web web source information kind techniques
term translation probabilities effective method semantic language approach information retrieval tasks use semantic analysis semantically term document similarity term used term translation probability language framework experiments demonstrate term translation probabilities semantic relations terms improve performance document
describe initial generating textual summaries data help prototype natural language generation system produces
problem extracting texts project applies rulebased method recognition task compares results different machine learning algorithms task method proposed based approach set patterns applied identification task supervised machine learning applied performance rulebased method using memory based learning rulebased algorithm evaluated tagged corpus performance measured using standard recall precision score results show performance could improve increasing training set modifying input machine learning algorithms analysis errors produced improvement based method requires use syntactic information textual
question answering qa information retrieval ir systems different also existence multiple complex answers introduce qa ir hybrid system based dialogue interface user model question answering information retrieval user dialogue interfaces
current project aim developing approach automatically answering data research development evaluation method automatically answering resulting question source document one two answers available data set resulting data set importance research research field developed question analysis method based syntactic answer type quality output module future development method
addresses problem automatically retrieving answers questions procedure achieving specific goal questions typical information retrieval methods based key word matching better content goal eg general information ie series steps achieving goal suggest process retrieving answers questions two one question compare twostage approach two alternative approaches baseline approach uses content goal retrieve relevant documents approach explores potential automatic query expansion result experiment shows twostage approach significantly outperforms baseline similar result systems using automatic query expansion techniques analyze also present future work
abstract present detail aspects question answering system using starting structure sentences approaches identified level form first criteria described used identify units structure operations complex units main types units operations resulting empirical basis criteria finally rules relevant aspects relationship linguistic structures system natural language understanding may advantage using structure approaches identified level form one starting instead word specific roles presented include following two main natural language ie structure makes possible number questions etc finite means known possible use ad output language natural language analysis thus without effort side user ensure automatic question
computer program automatic translation text speech presented program phonological hence prosodic structures phonological rules structural information provided prosodic constituents phonological word group structures phonological rules applied rules automatic word rules indicating rules phonological focus rules focus rules also model process aspects related discussed computational model present focus rules computational model work still implemented recorded automatically produced speech presented illustrate rules
approaches mt language followed report mt research early major occurred linguistic currently mt seems language rapidly linguistics argue terms reference empirical research particular translation problem view processes sophisticated alternative lead mt goals certain techniques achieve goals since second world three human people understanding language early approach recently eg view name set external responses sentence effect internal model view ground times view responses via complex mechanism fixed operation independent given response internal event initial state together sentence must terms unseen responses might form successive internal model could described satisfactory account human however part view increasingly many empirical support instance first language given utterance processes given processing language seems typically work fashion within linguistics eg widely view version account algorithm state used test typically novel sense could even basis complete knowledge state version commonly support although may intelligence makes logic domain linguistic age improve knowledge different identical grammars understanding individual utterance process degree improve understanding particular sample language natural returns effort likely less linguistic either terms mixture terms practical performance fully abstract speaker require algorithms would lead correct results since languages independent correct problem language understanding individual sentence framework linguistic eg making sense linguistics major mt projects early mt research problem translation features languages vocabulary items order recent mt research taken mt must incorporate large component human translation involves understanding source texts rather one set linguistic make use order resolve textual mt systems must therefore processes order produce output furthermore kinds operation human linguistic processing mt research particular linguistic rules processes might probabilistic statistical eg cf rules human might well even eg consistent recent mt projects known make use probabilities evidence suggests mt probabilistic techniques actually rather using purely methods achieve output mt al general version general issue see eg exchange follows first simulated would constitute mt case texts generally different human translators may produce different translations correct others texts differ translation quality accept original view kind use second system actions since machine material object thus instance possible design system uses resolve given texts way human reader texts course system applies transformations derive conclusions given system must restricted fixed perhaps large database world knowledge central view human limited fixed set pre involves frequent new hypotheses related way previous mt system cannot human performance human individual approximately similar detail even kind probabilistic techniques whether processes occurring within individual humans probabilistic predict precise individual mt research exploit techniques offer better acceptable translation whether seems likely human translation techniques likely useful methods often probabilistic mt ultimately natural end process improving quality translation may issue best translation still human translation involves usually analysis question much work needed translate text properly given effort terms achieved improvement translation question mt mt possible category texts level given type error compare value probabilistic techniques tagging system see eg et al tagging system operational since assigns grammatical tags words english text system english terms kind believed linguists make uses local form together relatively provided english morphology output system short complete defined tagging identical done independently human various methods used reduce techniques used however automatic known approaches current system predict system probabilistic methods perform significantly lower level remainder illustrate human involves hypotheses using research problem pronouns approach method humans resolve pronouns however unlike syntactic algorithm semantic algorithm purely able achieve even able existing syntactic algorithm purely given investigated issues set examples corpus standard corpus written english see mt problems translation examples extracted texts category corpus includes similar documents thus matches current largescale mt projects aim translate eliminating cases left following questions cases native speaker intended reference syntactic algorithm result believe kind reasoning algorithm believe correct result semantic algorithm would give result could performance syntactic algorithm alternative semantic algorithm research done article provides example al research since makes relatively begins complex algorithm pronouns grammatical structure sentences occur algorithm highly tested sample texts figure algorithm use simple kind semantic information selection approach problem resolution must semantic algorithm one database world knowledge rather syntactic structure several important syntactic cases human resolution know intended reference even first relatively cases example lower supports upper lower really know least one instance one reached different conclusions case different suggests likely cases resolved ways intended system performs level much task resolving would human language means humans number cases syntactic algorithm give result based general knowledge ever course text question would therefore suggest would occur database available future mt system consider instance however cases local could still whatever give refers local rather seems much would requests would new purpose example certain fact number cases difficult believe
describe chart parser used module speech understanding system allows easily various parsing strategies way discuss features incorporated parser order process speech data particular ability perform independent parsing handle utterance hypothesis general linguistic strategy features analysis input data case speech version implemented used system eg perform experiments test various parsing strategies development linguistic data base purpose interface also implemented interface speech system speech systems architecture similar employs variety knowledge sources among modules phonological syntactic semantic analysis although structure ability perform syntactic analysis morphological part semantic analysis well see similar system role speech system constrained first task ii architecture speech analysis chart parsing developed basic design well formed table used many parsers directed graph makes parsing chart set set beginning end utterance boundaries words lexical information words whenever found parsing process new edge chart represent constituents intermediate state search phrase using data structure means agenda list tasks carried chart tasks processing steps different kinds eg analysis processes input output world analysis process large order achieve currently three main control whenever chart new tasks result agenda selection tasks agenda cases either perform agenda agenda search strategy question strategy parsing strategy independent choice search strategy different parsing strategies bottomup different
computational linguistics grammars several different tasks text machine translation text clearly approach offer computational linguistics parsing text generation potential benefit application within computational linguistics approach cf however approaches much offer others service computational linguistics tasks research supported air research conclusions document authors representing either expressed air research us many various versions much discussion work also english grammar framework errors early number grammatical mechanisms example current alternative approaches presented see
addresses problem generating responses specific knowledge concerning selection case question candidates additional information response present domain discourse case role construction response side effect search necessary answer question containing describes various representation constructions used german language dialog system dealing use generating responses particular outline structure description representation events semantic representation language lexicon representation based system presentation application methods process generating response extensively annotated
presented contains description experimental version natural language information retrieval system dialog system use field main purpose ensure access information conversational manner use system require ability user
representation time machine translation system system usually following four representations source text source representation target representation target text system source target representation system step two usually called transfer step simple possible research described done framework mt project however used mt systems well fact well systems problem time expressed natural languages way difficult find rules translation form propose conceptual language specific expressions way translation achieved via corresponding conceptual representations three parts first time model ie model concepts second establish two types general constraints constraints possible time representations resulting restricted time related
abstract presented treatment framework grammar concept approach taken constructions grammar general terms grammar way goal approach described basic constructions framework theory proposed development standard theory thus treatment relative achieved overview grammar used minor importance one following english frequent types declarative sentences questions direct direct nouns various types relative complete reduced construction including control subject control conjunction complete constituents every syntactic category grammar written compact way making extensively use merging techniques states structure built grammar similar phrase structure trees used grammar level see examples structures type
system uses natural language grammars rules provide semantic interpretation input sentence language language combines features phrase structure grammars syntactic semantic rules grammars create grammar rules similar rules contain semantic component may also left used generate new rules existing rules parsing implementation tested provide semantic sentences containing relative questions
phrase structure grammars appear offer means syntactic natural languages may described main framework allows state variety rules generate new rules ones specify rules wide variety via small number statements unfortunately text terms rules task even small set statements generate large number rules discusses parsing presents fairly bottomup parser parser implemented efficiently space possible rules find analysis text power fact new rules complex existing rules improvement systems performance even mechanism analysis text may used analysis similar text given becomes possible deal even text containing words search phrase structure grammar recently grammatical framework known phrase structure grammar framework power simple context free grammars cfgs number ways complex systems easily statements general rules provides precise descriptions syntactic items purpose shall without discussion enough useful problem parsing algorithms time cfg expanding rules complex finding set rules given input string task aim show time may framework described number places discussion follows et al authors number present discussed people well shall outline enough features make remainder next section taking simple cf rules two information cf whenever may ie set written grammar single cf given would written ie set symbols may set symbols linear application must whether specific rules makes algorithms one way rules case cfg format increased number rules required complicated cases generally number statements needed order specify grammar format allows specify large sets cf rules statements provides two ways sets cf rules grammar first allow elements complex sets rather allowing atomic symbols instance refers items contain category category respectively reference features generally number implicit derived features grammar thus fact whole cf rules namely set possible include category possible include category theory set could would simply lot effort lot space way grammar include ie rules matches given pattern also derived instance may made set items including means possible set items states may made set items type applied close ie whenever applied produces new set see applied new two move see parse using set rules set rules include feature set lexical item list containing names rules item may part lexical items one simple categories noun often referred lexical ie lexical items categories features several items combined make single complex structure two rules head feature feature features divided head features features head features head ie basic category noun complex structure degree type features copying features ie include value feature feature items include different far complete description framework enough give rules within framework enough make parsing parsing parsing grammatical systems given string lexical items find sequence rules grammar combine items string together remains single structure grammar whole original text made parser design parser grammar set rules includes top bottom left building first first parallel yet question parser together far set rules read two could rules form ie rules set generate new rules base set set rules order constituents may appear ii could set cf rules first rules constructing new rules new rules generated generating allowed rules finally expanding feature sets make possible ways since rules adding arbitrary elements means top would even know might without might basic rules bottom would better since would basic rules might case every whether top bottom want may one way way selecting relevant basic rules expanding grammar cf rules ii introduce large numbers rules distinct may parse fully rules feature sets eg num num num plural num plural rather num num num num however complete expansion sort require space one simple item could easily require features fully potential find sets features item sets possible speed parsing cost constructing priori large choice far grammar rules first read must far would rather feature sets collections fully ones question rules result application format sets cf rules order items occur order appear parse top analysis likely cf rules generated basis since otherwise generated every time potential required bottom analysis question rather open least index item descriptions rules items potential initial constituents index clearly pruned ensure potential initial rules cannot discussion parse using follows sets rules grammar read ii may also expanding rules sets rules order significant iii good rules cf rules feature value made also simply treat rules ways describing structure sort chart parser likely mechanism finding rules describe input text however work grammars general purpose parsing algorithms even efficient ones rather lot work way declarative knowledge rules grammar knowledge text approach described involves using two parsing algorithm together standard bottomup chart parser simply grammatical rules best combination text direct uses patterns words previously analysed chart parser suggest analyses directly much chart parser uses rules grammar form applied rules means rules work time one since way allowed rules work using rules time grammar first read index rules possible initial parser completely rules hard see many ways parser general purpose grammar algorithm could yet good enough grammar time applied takes several applications sentence want see clearly deal keep text previously make entry abstract text exactly words present want general description terms lexical categories features eg ing word lexicon keep version structure found ie parse tree constructed represent way analysis produced actual words present time original text clearly compare text string text associated structure found however even particular words present original text likely find many string structure us required would done use basic chart parser original set rules set merging initial sequence eg two noun noun advantage structure noun noun merging network means text find known starting text effort simply network categories features left successive words text direct recognition algorithm provides extremely analyses text matches previously analysed input however complete mechanism recognition previously encountered rules grammar work according grammar system previously encountered chart parser complete sense input string analysis chart parser produce integrate two mechanisms task largely chart parser assumes rules include together even followed use direct since complete structures chart without ever two systems want benefit speed direct without completeness chart parser current direct recognition algorithm text taking adding known analyses chart position following string particular simply make entry chart current word move done number complete chart direct number potential allow chart parsing structures constituents final analysis single word words combination chart parser direct effective use text contains words without work given number words english lexical category chart direct use work first sentence alone lexical ambiguity generally causes problems bottomup parsers interpretation given word presence different type structure often one actually complete consistent parse may time structures words interpretation part final analysis likely appear substantial simple example consider two sentences see use use first interpretation use noun easily wider patterns sort noun noun interpretation second interpretation patterns interpretation noun well patterns effective enough us able et al merging open lexical categories ie noun majority cases final analysis text us various category open particular instance given word must course make use categories system word ing instance must form final analysis usually determine interpretation open category word input combined parser produce final analysis search thus able deal input contains words input disambiguation largely system seen open category word current local configuration words seen context noun advantage enabling us produce syntactic analysis text containing previously words open category particular function current context end analysis construct representation analysis conclusions parser described perform far far better parser complex cases parser may find correct analysis several times quickly using rules would done basic set system
linguistics research university currently developing high quality machine translation system
machine translation project two methods structural transfer direct transfer transfer grammar discuss strengths weaknesses two approaches general project argue many applications combination two either alone
abstract language analysis component text retrieval systems recognition noun phrases type normally identification related terms thesaurus even restricted language analysis problems analysis compound cost constructing word valid large text logic used information retrieval queries capable representing use compound noun phrases well constructions query statements operations logic described evaluation output demonstrate logic compared ordinary text retrieval systems linguistic approaches information retrieval possible various automatic text processing systems type linguistic analysis needed operations sophisticated language understanding believed automatic text transformations text text translation complete language understanding systems also needed automatic questionanswering direct responses user queries automatically generated system relatively less sophisticated language analysis systems may information retrieval direct answers response
university development robust parsing mechanism assign grammatical structure sentences english text techniques used probabilities competing structures based techniques successfully used tagging ie assigning grammatical word corpus first step parsing process involves dictionary successive tagged words give number possible current parse since often able grammatical second step parsing process alternative parses generate trees representing possible constituents probability parse tree probability within tree able select preferred parse parses output probability grammatical derived manually
view speech either computer systems people must large ways speaker information necessary therefore use tool construction models speech understanding task primarily various levels speech described eg lexical syntactic etc ways knowledge bases associated levels final interpretation utterance propose use chart parser general computational framework since flexibility allows various models implemented evaluated within general framework discuss problems information search strategy combining evidence levels description time hypothesis importance computational theory developing particular control strategy could implemented within
al dialog systems developing questionanswering systems systems includes dialog understanding generating wider range speech acts simply information answer user user dialog structure dialog strategy user system generates speech acts choice speech act user dialog strategy
abstract propose model structure context dialogue interaction relationships system three automata representing dialogue environment defined set possible states three automata within model set representing kinds relationships professional etc include particular roles set possible topics related given authors believe system notions presented may used basis component dialogue system advanced dialogue systems requires investigated domain research yet part computational linguistics however developing formal models speech interaction requires account linguistic also necessary naturallanguage systems well complicated system natural dialogue especially important view constructing new generation intended users propose model structure context dialogue interaction relationships system three automata two represent
tool described helps creation updating lexical knowledge bases two levels representation static level knowledge level environment containing linguistic knowledge knowledge level filters defined objects new information new entries using linguistic knowledge filters objects derive new existing ones structure use
abstract automatic speech recognition system language developed ibm able real time natural language sentences words dictionary items speaker short among system speaker dependent using speaker perform training text architecture ibm based signal processing probabilistic approach problem human probabilistic manner sequence words acoustic information extracted speech signal system identify words probability sequence spoken acoustic string produced end signal processing probable sequence word given pa probability sequence words produce acoustic string priori probability word string pa probability acoustic string find word sequence term preceding
abstract automatic speech recognition system language developed ibm able real time natural language sentences words dictionary items speaker short among system speaker dependent using speaker perform training text architecture ibm based signal processing probabilistic approach problem human probabilistic manner sequence words acoustic information extracted speech signal system identify words probability sequence spoken acoustic string produced end signal processing probable sequence word given pa probability sequence words produce acoustic string priori probability word string pa probability acoustic string find word sequence term preceding
speech understanding dialog system developed example model information system information understanding spoken utterances additional problems arise due word recognition process experiments far also analysis produces lot hypotheses instead number word hypotheses combining nearly every group word hypotheses adjacent speech signal correct also domain independent semantic analysis cannot used filtering syntactic sentence hypothesis normally several different ways respectively set syntactic hypotheses constituents combined lot semantically sentences seems introduce domain dependent knowledge early possible also semantic analysis would efficient whole semantic interpretation syntactic hypothesis combination syntactic hypotheses find possible candidates less effort probable ones
abstract organization dictionary system significant questions natural language processing applications concentrate three specific reference machine translation lexical entries information languages level task translation discussed implemented translation project described detail importance machine translation system machine translation system importance least two distinct aspects content organization content must quality vocabulary coverage must extensive cf translation equivalents chosen cf target language output satisfactory even possible organization dictionary system also significant questions translation system design information lexical items must efficiently accessed easily form system user required addition either new lexical entries dictionary new information existing entries discuss way issues design implementation translation system japanese project computational linguistics
abstract complete linguistic theory necessary mt question whether consistent use often dependency including description topic focus cannot base grammar set interface structures shows translation general therefore also automatic translation based technical texts background research character projects carried relatively small recent years project especially two japanese projects concentrated research question whether linguistics able offer basis mt cannot way without based systems approach external report systems certain features well structural linguistics case mt systems also research group mt formal linguistics university devoted much effort starting
abstract system mt system discussed first specific system showing used system machine translation group linguistics university view system machine translation one keep complete text rather sequence sentence segments ever made even problems mt would complete mt system dictionary grammar part also commonly system texts written natural language input provide kind treatment input thus consider first type quality translation user kind translation given second decide system make work present would outline one approach taken experiment machine translation system
system presented produces bilingual passages text original source text one translated versions source text passage includes words word retrieve current text target text equivalent version source text passage basis comparison words passage text decide utility translation proposed target text passage program might become component translators work
project machine translation czech computer manuals russian described first description overall system structure mainly input text parsing algorithm based bottomup parser
abstract grammar set sentences language set trees trees grammar representation interpretation sentences tree related sentence grammar linguistic approach adopted structure associated sentence structure hence may related sentence grammar developed various grammars general phrase structure grammars lexical functional grammar etc designed models human language performance others grammars direct introduce declarative grammar task relation one set terms set structural representations structural representation form processing translation language relevant sense purpose related string grammar also perform analysis given string terms produce structural representation string perform generation given structural representation
french analysed frame unification categorial grammar adjacent basic operation model unification allows constraints produce information rules grammar design structure allows french form within single pattern way two complex questions french thus fairly simple way model unification categorial grammar new grammatical model proposed feature grammar basic hpsg functional application applies categorial grammars allows adjacent unification basic operation allows constraints produce information information together defined aspects information carried finally resulting following format category features index work carried part project construction knowledge bases using natural language text order pre graph form relevant figure figure corresponding labels upper simple categories ii features see iii dialogue pronouns object pronouns pronouns se en se en pronouns respectively see morphological aspects lexical ones plural typical index sort system allows selection semantic features field contains information agreement cor resolution component intended semantic representation resolution corresponding se independent sentences dependent ones algorithm resolution presented semantic representation proposed grammar intended required relevant information pre order handling word order application grammar rules unification process generation information labels variables corresponding value order two following french application two rules functional described categories categories defined simple category category category category rules describes grammar rules based functional application application designed deal lower designed deal case upper case application must follows string category string category resulting string category category resulting unification must given must part final obtained part example example resulting obtained represents whole sentence basic
three main dialogue problem resolution focuses problem dialogue module one side expert problem side natural language several strategies specific aspects dialogues highlevel
problem systems must able results coherent flexible manner one way done method language tasks computational model implemented computer model called shows examples operation compares models language contains four required method knowledge structure mechanism conceptual knowledge structure local provide local elements conceptual translate coherent
abstract discusses allowing constituents syntactic rules resulting standard parser grammar first constituents grammar acceptable semantic view structures given precise makes acceptable syntactic representation ordinary trees however rules generate structures entails problems notions linear concept sequence finally resulting form grammar called grammar algorithm contextfree parsing relatively minor describes chart parser implemented part dialogue system grammar contextfree grammars computational linguistics theory languages technical conceptual efficient linguistics generally believed recently natural language cannot contextfree grammar especially view agreement see eg however early others due rules terms category
currently several grammatical declarative contextfree grammar eg typically processing within framework declarative character makes important decide upon overall control strategy part particular strategy focus processing efficiency one determine best way rules use aim provide survey practical comparison fundamental strategies within contextfree chart parsing background
would address issues major importance lexical particular discuss four topics current research field methodology coverage representation computational usefulness representations addressing issues discuss central problems lexical community suggest ways best issues finally outline theory lexical termed aims semantic lexicon
show lexicalized tags rely extensive phrases show natural language generally morphological patterns free structures structure items thus consider different syntactic categories compound english french lexicalized tags grammar used free sentences assign regular syntactic structures representing semantically one entry syntactic transformations may thus free structures unlike previous approaches becomes general case generally trees made several items one items index tree index lexical items nodes tree trees single head however head value lexical nodes tree operation head item lexical parts called lexical resulting tree lexical items corresponding already work supported second author want also parsing strategy defined lexicalized tag case made several items propose parse two steps two steps parsing strategy defined free sentences first step lexical trees corresponding interpretation however case trees possible candidates require basic building minimal must present input string order constraints necessary course second step performs analysis case second step might thus free sentences selection process require parsing mechanism also able account cases ambiguity recursion tags allows constituents way also show regular transformations taken account parser topics parsing
proposal deal french framework discourse representation theory presented implemented based theory instead using view adopted impact text contribution events sentence event structure text system relevant times provided text sentence processed used system consists one reference times times speech time time proposal establish choice new event system relevant times system correctly problem choice largely literature approach fixed resolution component process syntactic analysis
present declarative morphological relationships lexical rules based traditional word cf version terms subsumption constraints described means string made approach linguistic computational approach others finitestate morphology de finally discuss questions whether system string allows reduction finitestate techniques
substantial formal grammatical lexical various nlp systems form present report experimental results obtained manual semiautomatic automatic computational descriptions reuse design single representation variety choice typed feature structure based rules would target relatively without particular grammatical source descriptions hpsg uses fully typed feature structures uses rules feature structures constraint based negative constraints work supported part project
semantic natural language utterances providing lexical items rules determining units given parts combined via function well structure trees used semantic recently functional structure used provide syntactic information necessary uniform format difficult however approach combination function approaches present approach based reasoning constraints well information functional structure use linear logic also allows coherent treatment modification well completeness
problem bilingual lists expressions methods lists automatically possible discuss experimental results number methods corpora previously translated texts parallel corpora tagging terminology
describe architecture functionality main domain knowledge large text corpora supports incremental process corpus analysis starting automatic extraction organization computer supported analysis extracted data semiautomatic obtained hypotheses employs methods computational linguistics information retrieval knowledge engineering although currently implementation already implemented performance engineering domain
machine translation clearly technology commercial applications used automatic translation web news articles business environment offer software performs automatic translations web translations business documents eg regard research using machine translation language learning tools since early developed recently product called writing uses machine translation business writing native knowledge currently tool uses machine translation currently english language learning services testing service rely automated writing analysis tool capabilities build services using machine translation development new capabilities developed prototype system automatically generating translation translation translation one kind task offer give practice specific grammatical structures english hypothesis could use tool help create prototype
aim automatic generation questions topic application natural language processing particularly language testing useful et al presents novel approach question generation using machine learning aims generate multiple choice questions given text using classifier trained set questions system question database questions instance feature extraction etc machine learning question step learning generation conducted figure system following three facilitates experiment different test english parameters demonstrate method question generation showing result steps data training data answers multiple users different places processes experiment sequence processes system allows user change shows result follows processes described following input questions questions question user modify questions new ones question question automatically
speech recognizer cannot use techniques offer free goal develop algorithms systems purpose past problem linear developed new method general call stochastic method allowed us problem far less time simulated would taken also built first system linear uses one per parallel using facility able time able real data multiple sources currently building current work work future includes much algorithms currently testing two real data first applies technique via techniques second applies stochastic power well source addition new real effects real environment
speech recognition research years research led important systems since speech group techniques recognition various including knowledge engineering approach identify robust speech features independent speaker environment statistical learning system human knowledge speech system demonstrated first recognition system accurately speech large vocabulary speaker without training training use powerful learning algorithm design speech models search machine made realtime recognition system demonstrated uses demonstrates utility dialog semantic knowledge improving recognition accuracy overall goal speech research develop new technologies address major problems currently automatic speech recognition future work include recognition techniques developing vocabulary speaker independent speech spoken english recognition system approximately obtain high accuracy difficult task must improve substantially plan better
goal research develop spoken language system demonstrate usefulness input interactive problem system accept speech handle multiple without speaker combining speech recognition natural language processing achieve speech understanding system demonstrated application domain relevant objective project develop robust speech recognition system using approach recognition recognition system integrated natural language processing achieve spoken language understanding summary developed system combines speech recognition natural language processing achieve speech understanding within task domain assistance system existence first collected spoken language database approximately sentences using system comparative acoustic linguistic analysis read speech conducted preliminary evaluation using speech database achieved word sentence recognition accuracy respectively sentences passed word grammar plans improve speech recognition performance fully integrate order exploit speech natural language increase improve knowledge base correct natural responses generated
objective program develop demonstrate robust speech recognizer techniques systems application spoken language systems techniques based hidden markov model hmm approach previously demonstrated high performance speech speech motivation current stateoftheart systems must performance advanced including due speech focus robust techniques applications development implementation interface natural language nlp allowing developing applications program focus improving speaker environment robust hmm recognition system developed accuracy representing reduction error rate relative baseline hmm system techniques large vocabulary high performance tasks management database recent include development hmm system techniques development system simple complete integrates robust realtime task development proposed interface
basic goal development robust systems extracting information natural language text robust system one able extract least information presence syntactic semantic discourse structures approach two aspects first incorporate rich set syntactic semantic discourse constraints one type constraint us correct analysis even type second provide mechanisms individual constraints alternative analyses analysis constraints therefore best analysis sentence testing approach system analyzing operational messages developed process well messages describing naval developing grammar analyzing highly messages grammar rules allow wide variety analyses full english sentences approach described developed semantic set models types occur noun phrases messages also developed simple discourse model identifies event within analyzed message rules allow
goal test recognition system model human speech processing key hypotheses computational models reasoning knowledge provide useful many aspects human speech understanding even levels highly automatic processes work computational model human processing must used end representation acoustics order variation various phonological representation must prosodic structure pattern well string specific goal build small prototype system uses architecture many processing corresponding different levels knowledge information processing task form coherent hypothesis data presented preceding levels input signal speech processed system representation based score representation prosodic tree string used phonological organization system acoustic features phonological features small vocabulary produced one speaker
natural language understanding research promise use machine interfaces text analysis information retrieval unfortunately approaches natural language processing completely systems general reasoning project several key issues natural language processing exploit systems knowledge representation reasoning particular system specifically aimed wide range language processing general reasoning modules needed process sentence language also developing parser english integrated systems general reasoning processes work tested context understanding context dialog specifically develop knowledge representation representing reasoning content arbitrary english sentences context large base knowledge develop general parser english develop general theory naturallanguage systems systems use theory model content structure recent results developed new logic events found many representations based frames semantic networks within logic general strategies probabilistic
objective project develop speech recognition systems operating line software although possible specifically develop line accurately levels speech line show substantial improvement signal either line using speech recognition systems recent speech based line model sounds different speech analyzed different ways filters input higher times corresponding sounds addition sounds acts level detection analysis work methods line developed
developing software algorithms necessary achieve realtime speech recognition spokenlanguage systems first phase project currently design prototype able words speech using language models prototype based four purpose integrated also improve speech recognition system enabling incorporated architecture speech recognition natural language processing recent designed four integrated basis realtime system designed computer implementation prototype implemented software signal processing real time designed design speech recognition system high accuracy speaker independent dependent speech recognition developing techniques automatically generating networks standard training corpora networks speech recognition accuracy developed search strategies allow efficiently used spokenlanguage system framework plans complete prototype system build three realtime recognition systems systems evaluated application uses statistical language model develop realtime spokenlanguage systems
basic research project whose practical technology consists techniques using machine learning statistical theory well fundamental linguistic theory aim understanding future speech recognition systems developing strategies extracting significant information andor large language data practical research demonstrated processing parameter methods algorithm developed account factors associated variation along variation metric developed finally understanding information extraction language data partofspeech annotation demonstrated recent include developed decision tree algorithm method makes use machine learning statistical techniques data structures representing factors associated variation see et al using methodology developed program create probabilistic models format different sources may differ differ account developed developed
scope goal spoken language natural form whether telephone various interaction currently achieved largely means using highly languages whether greatly two language goal work spoken language systems language building systems provide necessary function various languages thus spoken language natural humans among humans different languages spoken language systems differ widely capabilities three spoken language systems include interactive problem interactive control information retrieval using system would require full speech recognition natural language understanding input may require natural language generation speech synthesis output example applications include database query eg search input control management management support automatic systems ability arbitrary spoken input vocabulary types sentence construction automatic translation
speech natural language designed provide presentation research results discussion technical issues related variety research programs spoken language systems speech recognition natural language processing related also provided discuss goals programs develop strategies databases useful technology community develop evaluated language research also speech group open following spoken language speech recognition systems volume includes papers technical program reports various speech processing military systems one major discussion new spoken language task air travel information system topics descriptions task well reports first evaluations spokenlanguage systems domain
papers issues combining speech recognition natural language systems first three papers use grammars speech recognizers natural language parsers make different language knowledge recognizers efficient methods search space parsers knowledge one problem speech recognizers nl use different language constraints two modules effect means using different grammars parsing recognizer may use grammar simple efficient grammars parser uses complete representation language means recognizer produce acceptable parser case recognition error lead parse utterance one problem use recognizer recognizer produces best hypotheses utterance hypotheses passed parser overall best one rich presented efficient algorithms generating best recognition utterance previous algorithms algorithms require small amount additional computation produce instead single best hypothesis systems use search find best hypothesis generate best information
present two efficient search algorithms realtime spoken language systems first called algorithm algorithm finding top sentence hypotheses new algorithm perform well algorithm presented previously order less computation second algorithm speech recognition called search algorithm directly training algorithm reduce computation search additional search errors
new based search finding best sentence hypotheses speech recognition proposed search consists two parts search time tree search first module well known viterbi algorithm used finding best hypothesis paths scores time second module tree search used paths time tree search rank corresponding full score computed adding score best possible score obtained current best top one word new search different traditional time viterbi search ability finding best paths different word content new search also different algorithm algorithm capability providing full score given ie compared best candidate viterbi search search finding best rather ie computation needed
grammars spoken language systems subject language recognition language analysis sentence interpretation current recognition algorithms directly use finitestate language models however models language interpretation since cannot relevant syntactic semantic phrase structure grammar unification grammars many less language inherent cost state parsers problems might using grammars language language interpretation recognition grammar sentences acceptable interpretation grammar contain much possible constraints built interpretation grammar however two grammars built independently constraints difficult developed method automatically finitestate since purpose filter real parser language language term used sense follows constraints algorithm assigns regular language would clearly required one possible
grammars spoken language systems subject language recognition language analysis sentence interpretation current recognition algorithms directly use finitestate language models however models language interpretation since cannot relevant syntactic semantic phrase structure grammar unification grammars many less language inherent cost state parsers problems might using grammars language language interpretation recognition grammar sentences acceptable interpretation grammar contain much possible constraints built interpretation grammar however two grammars built independently constraints difficult developed method automatically finitestate since purpose filter real parser language language term used sense follows constraints algorithm assigns regular language would clearly required one possible
describe modification grammar advantage prosodic information automatically extracted speech work includes development index representation prosodic phrase boundary information automatic detection prosodic phrase using hidden markov model relative segments prosodic phrase information spoken language system alternative parses otherwise sentences initial experiments using sentences read achieved good results detection parsing automatically phrase greater data models sentences number parses reduced simple grammar
english problem remains large part formal requires mapping english constructions including formal representation representation original text propose simple structure called tree set trees basis constructions time contextdependent way process transforms trees forms simple recursion formal forms rules implemented representations formal logic understanding
past two significant tree grammars tags first development variant tags called tags allows tag used languages intended usage expressions natural languages associated form language tag translates natural language incremental show examples tags applications example generation machine translation second development design parsers tags parsing strategies original work even powerful enough nlp found use natural language processing nlp multiple powerful yet efficient parsers natural language order techniques tags necessary find bottomup exactly equivalent tags achieved bottomup using left parsers tree languages developed using tags role grammars tag present application tags limited instance task semantic interpretation automatic translation natural language variant tags called tags developed used research supported work results university university university also parsing tags role example allowed expressions natural languages associated form language translates natural language work tag applications language interpretation generation done language interpretation generation tags key semantic interpretation form language described tag two tags one natural language one form language work sense certain trees two tags operations carried nodes two tags fact natural language form language described tags direct domain tags compared sample tag given figure tag two trees one source language english one target form nodes one tree may project first second tags english respectively grammars written particular variant tags choice base call free case chosen lexicalized tags bases multiple component tags needed complex operation tag operations base step trees al follows two nodes al ap figure sample tag trees grammar form result operation base using eg tag initial trees grammar steps example tree figure subject tree nodes tree iii al chosen result using tree al allows operations first second trees differ one example use standard tag nodes auxiliary trees nodes occur names form grammar relation function term sentence form written traditional see trees trees way tree modify using generate given figure sentence recursion tags natural language structure tags allows syntactic grammar trees case associated gap using tags construct forms allows semantic forms natural language expressions type function relation symbols even associated methods cannot semantic aspects must passed among features various nodes parse tree otherwise use tag allows even reduction role features tag grammar domain tags role features unification reduced role contextfree based systems features needed possible feature whose value expressions form removing construction forms features therefore system tags applications tags suggest provide framework generation machine translation figure derived tree tag analysis constructions allows well particular syntactic constituents semantically without flexible easily example construction following tree interpretation tree grammars transfer rules nodes trees large domain associated words thus lexical transfer rules approach still benefit lexical approach work done example consider transfer lexicon given figure usage associated tree similar figure order tags defined used base tag see tag particular scope term position generation tags us use semantic interpretation well generation see figure transfer lexicon machine translation transfer two languages french english done directly large units without representation without major changes source target grammars transfer example english french operation derived operates following generated finally operates generated transfer lexicon given figure therefore us translate cases translation input string domain tree grammars allow regular structures without representation mapping trees source target languages using tags makes possible state direct able linguistic units different internal structures furthermore fact grammars lexicalized language transfer rules approach shows lexicalized tags domain well machine translation efficient processing tags second development design parsers tags parsing strategies original work parsers context free grammars finite state control constructed given cfg symbols input left exactly set languages recognized automata parsers cfgs useful well recently natural language processing natural language processing although parsers powerful enough multiple powerful yet efficient parsers natural languages context parsing tags work done set tree languages set context free languages example serial dependency construction generated tag investigated parsing languages however used languages much powerful tree languages far bottom parser proposed context tree grammars since set tree languages set context free languages order parsers tags use powerful configuration finite state design left bottom parsers tags finite state control bottomup investigated corresponding automata exactly set due lack space focus attention bottomup parser complete construction parser tags found automata models tags discuss bottomup used parser similar sequence move see figure allows
describes particular approach parsing recent unificationbased parsing knowledge representation unificationbased grammatical handle descriptions linguistic information many developed knowledge representation systems suggests representation techniques applied unificationbased linguistic descriptions merging supports semantic syntactic information system subject types processes efficient manner result efficient parsing due increased organization knowledge use representation parsing semantic interpretation first system parsing process called incremental description key process description object become increasingly specific additional features learned multiple knowledge sources unificationbased approaches identified four crucial capabilities system order support process incremental description capabilities available recently developed knowledge representation system hence practical development new parsing method object provide information description object ie provides necessary constraints features possible relations eg functional relationships syntactic constituents semantic relationships part grammar concept descriptions ie cannot single individual provides complete previous systems descriptions ie least one applies general description applies provides implemented descriptions parser built using classifier operation first describes process unification unification describes process parsing using classifier example semantic syntactic information system discussed finally efficiency benefits new method constraints unificationbased grammars variety current approaches parsing computational linguistics emphasize declarative representations grammar constraints terms feature category structures approaches become known unificationbased grammars unification commonly used operation building combining feature structures grammatical system state constraints features terms sets must whenever grammatical used systems constraints lexical item many recent also use general representation constraints utility constraints linguistic models including grammar head phrase structure grammar hpsg computational tools functional unification grammar example even use features instead structural rules units grammatical organization interpretation constraints rather natural linguists largescale implementations typically finding balance power computational efficiency task developing system negative feature constraints operations descriptions unification subsumption require exponential time case obvious way deal constraints grammatical description form step eliminating rules actually used parser method well small grammars turns grammars possible exponential expansion practical grammars several unification algorithms feature descriptions developed recent years two algorithms allow general descriptions expansion descriptions produce forms allow compact representation algorithm based form description component contains component contains list must algorithm uses different form detection process expanding might interact information description algorithm first implemented unification algorithm parser developed handle conditional descriptions limited type used construct experimental parser grammars tested large grammar english called part language generation system although methods processing complex feature constraints generally much efficient expansion still several significant sources large amount structure must order correct unification consistency required description features unification cannot determine whether two structures without actually often required sub expressions descriptions results tests sources one method parsing descriptions similar commonly unificationbased systems unification literature contains several techniques amount copying structure techniques appear part problem general approach improving efficiency unification may available methods used systems knowledge representation unfortunately grammar knowledge base complexity becomes increasingly less efficient simply descriptions constituents description grammar unificationbased instead becomes description objects defined grammar known relationships grammatical description since grammar known parsing various relationships subsumption used construct lattice grammatical objects eliminating derive relationships parse time knowledge representation systems based many semantic networks representation systems information objects relations according specific objects general ones example english word would contain word instance lattice based upon definitions objects known systems operation places new object lattice according subsumption order benefit large collections knowledge way many objects yet still efficiently accessed similar used semantic interpretation natural language processing systems usually way grammatical parsing process system recent research may make use framework processing grammatical knowledge well many formal feature descriptions used unificationbased grammars definitions used generally linguistic categories concepts features relations knowledge representation system similarity two types descriptions clearly development logic integrates significant combination capabilities many results also based feature structures subsumption lattice types according information content unificationbased systems lattice constructed system used feature structures grammar lexicon lattice improving space time efficiency framework unificationbased grammars significant differences capabilities usually provided particular knowledge representation systems typically general constraints relations multiple unificationbased systems provide direct representation features set complex constraints extensively developed unificationbased systems systems system developed first general concept language implementation concepts based several strategy developed unification feature descriptions implementation concepts defined still system able handle much range constraints used actual linguistic descriptions feature structures experiment parsing order explore strategy parsing based represent grammar existing unification component parser classifier two goals used knowledge linguistic descriptions efficiently accessed parsing process develop architecture semantic information parsing process way knowledge specific application domains parsing feature constraints grammar set definitions processed concept definitions linguistic feature descriptions already described also perform operation equivalent unification feature structures within object type defined conjunction types corresponding feature structures conjunction types type unification descriptions way also supports merging corresponding unification necessary order feature constraints two resulting instance type conjunction types two original object ie disjuncts important description entails simple possible without disjuncts order object must one disjuncts instead description grammatical description description representation grammar object information constraints associated particular type grammatical classifier determines grammatical constraints associated used give complete grammatical semantic description provides way large de types types lattice efficiently thus provide efficient mechanism large descriptions two benefits lattice representation descriptions grammar time representation complete set grammatical features many type effect used features type descriptions types objects feature structures represent constituents often possible reduce numbers features used multiple parses type features simple example example consider simple grammar may used parsing sentence analyzer following type information word noun noun present also rather simple contextfree grammar used possible constituents annotated assign grammatical functions example using approach theoretically possible parsing completely using however parser would examine input order sentence grammar proposes type following grammatical functions subject process initial description given classifier specific types classifier begins types directly initial type ie states process type process type next classifier process type addition constraint type means object must also form therefore list types act possible one disjuncts disjuncts constraints constraints process type present requires process type types present types finite eliminating specific type types specific types defined simple example type constraints associated constraints require subject roles identical ie two roles goal roles identical constraints following information roles goal thus given initial particular constituents grammatical functions process subject specific type find possible constituents constraints applied early enough parsing process shallow structural parse starting parse one large improvement efficiency even context free grammar provide basic segmentation input sentence major constituents thus simple contextfree parsing component used purpose prototype system previously roles act goal classifier uses lattice representation defined types search types given object consider types type object known types object power using kind may semantic constraints grammatical type addition grammatical constraints semantic information parsing process one advantages method parsing integrated semantic syntactic processing systems developed represent semantic information syntactic information required work described types knowledge system single process advantages processing able access semantic syntactic knowledge process parser resolve traditional model syntactic parsing semantic parsing many structural arise parsing semantic knowledge parsers syntactic semantic parsing phase parsers perform complex semantic syntactic processing increased complex system architecture method parsers single call classifier result information semantic syntactic found possible classifier benefit increased provided knowledge representation used system order achieve greater contains general concepts called upper model concepts various application domains information upper model domain concepts language without ever individual parser exploit upper model information words structures information found efficiency architecture used whole related efficiency problems constructing maintaining lattice particular may provide substantial improvements sources unificationbased parsers structure unificationbased parsers necessary make new feature structures associated lexical items grammatical rules whenever used building description sentence one constituents system structure description contain pointers objects representation space also allows parser make use information already process objects grammar lexicon hence organization descriptions lattice automatically provides amount structure indexing process also track different objects eliminating consistency description features effect index constructed features descriptions contain unification based systems feature structures directed graphs first order terms redundant feature structures unification structures without reference knowledge ie way simple unification use results previous unification subsumption even many objects identical features already representing types objects lattice information objects making possible multiple objects type specific type thus first time component description lattice containing descriptions edge base since lattice represents types objects makes consistency objects known subsumption relationship subsumption consistency tests computed objects types using grammar summary seen providing capability similar provided systems although unificationbased system may provide acceptable results less approach limited system almost applications work part effort provide system full natural language input output capabilities experimental prototype parser using unification feature structure representation part grammar successfully work constructing parser using based architecture functionality unificationbased system operating whole grammar experiment comparison unification mechanisms parsing provide way substantially several general sources current unificationbased parsers however experiments several real grammars applications addition providing efficient engine processing constraints linguistic feature descriptions also type information organization provide basis semantic knowledge knowledge specific particular applications parsing process research part states advanced research projects part states air research expressed authors many help implementation using
describe methods using produce realtime integrated spoken language system describe algorithms greatly reduce computation needed sentence hypotheses grammar coverage problems use statistical grammar algorithm implemented single provides code directly system contains natural language system application end
present speech recognition system operates real time computer system designed large vocabulary natural language tasks makes use hidden markov models hmm acoustic linguistic sources knowledge achieve high recognition performance describe various system also present strategy achieving real time recognition using based recognizer times real time
effort develop new architecture realtime implementation spoken language systems goal develop speech recognition algorithms capable speech vocabulary word
speech research made past using following research problem corpus measure research problem natural language research typically without benefit corpus data test research hypotheses describe air travel information system corpus corpus designed measure spoken language systems include speech natural language component first corpus provides guidelines future
abstract methodology evaluating work speech recognition recently methodology either natural language nl speech understanding evaluating systems developed recently made number spoken language systems program methodology comparative evaluation systems methodology used practice first time overview process followed evaluation mechanism describes current mechanism presents directions future development work people spoken language systems program others aspects natural language processing nl evaluation time devoted issues evaluation evaluation since community formed evaluation develop methodology data training data testing systems development see work automatic evaluation queries air travel information system first evaluation using first version methodology developed
spoken language community first evaluation air travel domain goal find methodology evaluating correct responses user queries end first evaluation constrain problem several ways database application constrain application database query application burden constructing determining correct responses answer constrain answer comparison minimal answer constraints form system response user typed input constrain evaluation typed input constrain test set single utterances taken without context database answers sentences constraints first evaluation however constraints obtain evaluation spoken language systems purpose suggest move evaluation sentences evaluation dialogue including queries analysis training data training data almost sentences approximately could evaluated completely independent context sentences approximately half require context almost many database answer table shows figures four sets training data total adds sentences multiple work supported naval research table sentences context dependent answer sentences changes whether context used total sentences context table training data proposal evaluation sentences automated evaluation techniques sentences would propose methodology sentences automated evaluation context dependent sentences two additional evaluation evaluate data addition evaluate well formed dialogues queries queries propose system query generate evaluation answer query would correct exactly cases query fact use message issue exactly kind error message issue user proposed general answer requires minimal answer order constraints systems answer user must use cases system query response allows system answer actually cases system query determines query cannot database utterance user code dept al utterance would find user code dept al co utterance would information previous user code one way utterance query figure using context queries context major evaluation contextdependent sentences provide context required understanding sentences system able context data collected possible evaluate contextdependent queries context call context consists seen subject data figure shows kind context found corpus examples show information used query would find requires previous query determine starting query would refers entity answer query namely may well include several example three different segments however query context previous focus finally query requires previous query context establish also refers entity associated query building context using information query answer possible queries correctly figure figure show example context properly taken account system processing user query figure current handling context additional evaluating sentences dependent context namely example system original query show one since one set however provided evaluation system information user thus set given answer providing context examples illustrate information needed order queries context next question provide context generated data automated evaluation providing set queries course problem exactly set input data providing answers problem requires system answer data since agreement best way data system original seems far however provide evaluation seen subject data training data contains information form provided convenient form automatic processing representing list lists first list set elements data format figure evaluation query would course input speech data system could speech data therefore much possible propose input provided evaluation speech input user code dept code dept figure format query provide full context system allowing step dialogue system could process query context associated query answer query output would context state query processing context query system context handle next query figure methodology allows processing dialogue even context may directly preceding query queries already demonstrated external answer generated answer currently treat set entity available reference order figure still system query use query context query case providing answer may help query answer user show system answer information correct answer code dept query user show one figure example queries addition handling queries contextdependent queries seems queries allowing several possible answers correct system would described use answer data evaluation format taking context allow systems much possible proposed form test input utterance dialogue input testing speech query output testing responses evaluation system still answer format evaluated reference answer done utterance system processes utterance allowed correct provided part evaluation input data evaluating next utterance one obvious proposal makes extremely user provided database clearly answer input sentences current system us providing correct answer simple however would simple kind required answer would make answer derived compare correctly answer short issue largely system make difficult difficult minor would system obvious input correct answer evaluating whole several queries increased data due data context queries data different data used multiple address problem particularly important results evaluation general systems range sentences means coverage data range system query context figure updating context via query move include queries context dependent queries least data given several already ability process contextdependent material report significantly better overall coverage corpus evaluation criteria addition fully automated evaluation criteria also propose include evaluation criteria specifically user task quality time previous group results using system performance report similar experiment three showed good correct system answers evaluation approach system evaluation evaluation techniques used complement various automated techniques development conclusion proposal address several important issues example clearly useful system would move expert system restricted interface important also answer information focus example difficult issues kind error messages system provide handle queries next type problem system objective actual users
first spoken language system tests conducted air travel information system domain presents description test software used results test material selection process preliminary results seven systems five one system made use speech input generated answers systems made use transcriptions input test test tests past several years management speech recognition tests transcriptions set test utterances data available using used access system training material speech three using responses provided cases return provided key version complete data test material free access data system results preliminary summary test results participants data access data speech data available via speech data made available three corpus corpus effort software reference answers written answer format adaptation developed task group two programs available evaluation automatically matching answers one one developed final whether answer correct human programs ran two answers correct code even answers use answer answers incorrectly matching answers code first formats program cases content answer correct second questions typical case required table code number numbers type comparison used key close enough correct ones ad code change made code used tests least one numbers using two real name number one way would use increase space input software since one answer result particular answers one change made code make string made several answers one correct agreement content several examples test answers illustrate matches without conjunction allowing instance query answer one answers correct although two matched answer value field would correct tabular answers intended human problem would incorporate similar system methods test material selection process time available material training test sense used several test material unusual one extremely frequency queries almost queries without test material queries used strongly results new word word sets new word set queries containing words training material us new word problem test queries conjunction training material initial state language model spelling word related word seen training side constraint testing training statistically independent valid test constraint training set test set make test bottom line attention since words even one previously words limited words test case training set real constraint required order answer test question training material initial language model general knowledge sounds parts time table make time table words since parts new syntactic constructions would also make mapping query new elements found test material including non utterances early part words service time table one five queries new correctly query successfully system perhaps knowledge database several queries new complex words test set correctly primarily ones new words regular morphological words training set language model eg times table showing new results provided end table seems us research topic would constraints detection design better tests preliminary results results total seven systems two systems two one system speech input one input speech systems input transcriptions results three systems input provided answer form answer system provide answer several eg words parse produce valid database query etc made use others eg due format used results made one answer one queries alignment answer response since use answer response also one systems response system handle allowed results answer responses table results systems several specific items test reference material one reference answer three queries effect test set test set valid queries ambiguity one make similar made next would ambiguity present procedure early results given table queries lexical items appear least training data table queries new words table presents complete summary results test set since test queries context dependent queries significant analysis results presented queries rank order increasing queries top parts table resulted answers queries bottom table resulted answers general increasing increased utterance number words table shows number correct answers various systems also system speech data used input queries correctly results similar systems two data numbers correctly recognized queries two better performance lexical items occurred least training data course complicated however fact different systems answer queries perhaps used correct responses would number responses answer provided summary presented results first spoken language system tests conducted air travel information system domain co co co co co co co co co co co co co co co co co co co co co co co co co ii ii iii ei co al co cor al fi er co ne co ei im ii co co ii dia pa co com co ei ei us al al iii al en en en en en en en er et er er co co ii al ta al co co ta fi ta co co ex iii ii ii co co en en en co co al ii ii ii ii ii al ei co ei en co co en en en en co en en en co en ei fi en pa al co ei ei co iii ii en co er co ii iii co co
abstract reports recent development natural language component spoken language system domain comparative evaluation research nl system called cfg based unification grammar unification framework nl component system quickly way build knowledge bases rapidly system commercial nl interface databases based parser grammar advantage extensive knowledge system called previously approach use create lexicon morphological syntactic information domain model semantic information mapping rules domain model database knowledge bases use using configuration domain results using system comparison analysis performance test original score system sentence test sentences correct sentences correct sentences two sentences correct one result
understanding speech presents several problems found processing read speech input speech often contains etc users know lexicon grammar used system therefore difficult speech understanding system achieve good coverage lexicon grammar subjects might use air travel information service task used develop evaluate speech understanding systems database query tasks task users perform task requires information air travel database database contains information etc users questions allowed phrase queries way grammar lexicon given subject developing system called speech implemented initial version system task presents design system current also report results first evaluation set system problems speech divided four categories user user generated environment etc outofvocabulary words subject words system know grammatical coverage subjects often use utterances phrases address problems using models outofvocabulary word model flexible parsing models models sounds speech significantly increase performance recognizers input technique additional models system represent sounds word models represent sounds models trained exactly word models using input thus sounds words allowed also words outofvocabulary word model order deal outofvocabulary words using technique one presented model outofvocabulary words model allows context dependent given course context probability model trained large dictionary english flexible parsing use frame based parser similar parser used et al process text system previously developed semantic information set frames frame contains set representing information order frames use semantic phrase grammar grammar semantic grammar semantic concepts instead parts speech grammar also written phrases alone recognized well sentence phrases form grammatical english sentence still system grammar compiled set finitestate networks networks call networks significantly overall system networks used perform pattern matches word grammar instead one network many small networks type network ways general approach described operation parser phrase possible source number number answer correct speech table results source number number answer correct speech table results interpretation frame finitestate networks perform pattern matches input string phrase recognized current series phrases score interpretation number input words accounts end utterance best interpretation output system structure overall structure system figure use system recognizer module currently system recognizer parser integrated grammar used parser used generate word grammar recognizer uses word grammar speech input recognizer produces single best hypothesis hypothesis passed parser assigns word frame frame mapped form times names etc standard form build database query step resolved using current objects built result previous utterances objects currently constraints set constraints list individual focus resolution relatively simple system greatly fact frames semantic thus know type object needed resolution frame represents information extracted utterance used build database query query database management system results user results current system word vocabulary word grammar use models generated yet outofvocabulary models system technique currently used speech word grammar flexible parser structure spoken language understanding system speech show want see two vector select number travel database figure structure system test data consists total utterances taken five data gathered utterances speech input processed database output format reference database answers table shows results evaluation result errors generating output significant number utterances correctly incorrect three types resulted part generated system generated relative time system instead relative corpus gathered words show want see two list want frame two list list error correcting parser ambiguity frame application error word string table recognition error rather full text description answer test incorrectly applied output situations correct given incorrect used order systems behavior useful scores three fixed fully system output fixed three total time three test data table presents test data changes analysis data showed utterances correctly additional result errors generating database queries also examine word string error recognizer output table string error rate means three utterances errors however utterances correct answers ability parser handle minor recognized string word error rate given high quality basic recognizer relatively word grammar improve addition outofvocabulary models better lexical grammatical
spoken language systems future handle english rather limited domainspecific analysis domainspecific data since spoken language systems currently wide range users since users large applications large potential users data resulting used system development system evaluation application discussed air travel domain using structure effects changes speech language experimental subjects results relevant experimental data design human interface spoken language systems report five experiments effect examples using data system baseline experiment using functional equivalent data effort use specific version scenario used baseline experiment use short simple scenario main scenario addition short scenario use finite vocabulary sentences
presents spoken language system applied air travel domain domain provides rich source interactive dialog chosen application task development evaluation spoken language understanding systems approach developing spoken language system combines speech recognition system language understanding system database air travel information database access database via general interface database server concentrated language understanding database interface dialog manager integrates overall interaction dialog manager user requests form words input database via database interface important function dialog manager discourse context system successfully process dialog first describe architecture detail give short discussion dialog management topic crucial systems users via natural language presentation analysis results evaluation task data gathered using system architecture system level architecture system architecture see figure based dialog manager taken previous application major module providing answers assistance expert system database dialog manager upon input user interpretation work supported naval research input interpretation user otherwise interpretation passed module called query translation interface program attempts create database query corresponding produce code directly instead done via database server developed describe next section database server database server see figure consists database interface server interaction database provides language queries support actual interaction server supports interaction query system provides languages choice language understanding systems selecting databases figure overall system architecture user dialog manager server architecture figure database server architecture server database translates queries query database table output lists lists statistics query query query statistics generation output database interface based interface providing efficient access one databases one database management systems support designed knowledge representation used implement query server database access query language database interface language based restricted head represents target list ie form result relation conjunction database relations operations relations andor eg operations database server supports interaction database queries using translate queries results lists lists server supports interaction database several specific ways server query input returns translated query statistics translates queries database database output produces evaluation output architecture also contains currently results database queries concept also includes provided used application believe many useful heuristics travel domain lead retrieval strategies using query plan statistics could used effective language strategy overview dialog manager dialog manager interaction system user also language understanding database via reports dialog manager query message containing information make database call dialog manager two presents answer user using information query format answer generate answer data structure representing discourse context makes possible system handle certain types reference user material answers basic dialog manager responses developed application task expert system english sentences responses processed discourse context answers mechanisms data form context previous user queries previous system responses next section dialog management reference resolution time ability resolve various kinds including reference one noun capability used application present also made major capability tabular responses user entries responses different kind reference instance code used relatively german user means response give give interpretation corresponding use previous response example involves expressions general case several user one also question context user specifically found previous answer previous examples entries previous responses system handle example kind capability plan ability handle future mechanisms handling example table discourse entity representing discourse context without representing individual discourse table also provided table referred find context number also handle searching discourse context whose consistent referred dialog manager also system generation capability based sentence templates provide english instance user know query specify user resolve ambiguity system least user decide example involves queries database contains information ground ground two two query information kind properly system user specifically possible query cannot rather making call database table system issues message ground two evaluation evaluation first experiment using system report evaluation task discourse features discussed previous section task involves testing system requests within domain sentences thus tion expressions reference previous answer requests evaluation furthermore answers evaluation sentences context available evaluation report evaluation sentences context time following section present results evaluation task along analysis data task data queries system obtained correct answers remainder resulted obtained information resulted call consider incorrect answers even answers greater rate task acceptable rate errors queries successfully processed follows items lexicon either parse obtain parse either obtained analysis one given complete interpretation input could create call incorrect call times results summarized table show error source incorrect answers questions table well directly lexicon parsing call table evaluation task results nearly half cases input query processed correctly even among queries system obtained correct answer cases input processed correctly cases two material handling material could well resulted error example query category ground system redundant category ground example type query system process since number correct answer obtained speaker rate table rate speaker much different task data systems rate table evaluation analysis handling half input queries queries system way operational system however data gathered therefore application method input data rate system since nearly giving user change user using system lack answers might well led exploration alternative ways queries result would processed correctly next section however see etc system yet good enough adaptation users bottom line system yet achieved satisfactory level performance hard first system development results task simply measure far sense measure level system fully developed fact test attention queries development data available us achieved rate many new previously unseen utterances believe evidence development work general domain ad make specific system system correctly process training input could achieved greater rate answer involves wide range expressions different people use make requests domain later section vocabulary grammar domain domain return may significant data domain collected using speech recognition component also automated natural language understanding component case experiment widely different different task data supports large number different ways ask questions really case means natural language understanding system trained much data domain domain train sentences rate system could achieve new sentence coverage open question many sentences necessary domain currently less sentences achieved effort coverage training corpus coverage corpus would train coverage coverage test data individual examples system task data general report given co sentences corpus figure incremental grammar domains current limits system however even experiments developed system work domain task level well sentence level even system present state development experiments along discuss next section data evaluation order explore issues evaluation particularly users designed data task using system tool data users seven subjects use system travel given subjects addition order measure user subjects also score response system five total typed processed correctly user although data time complete task subjects actually task development system data one question address factors user spoken language system example coverage user coverage clearly important component user although completely determine user queries data available authors upon found rating queries rating queries relatively high score users error messages useful example query error message could rating user query completely relatively rating user information presented example query much cost correctly score presented associated specific response time independent coverage also important component user nearly subjects system subjects also system using data lead us believe may important coverage error messages speed lead increased user system system function training data one ability lack data terms grammar rules terms lexicon starting application developed techniques system data collected making available us sentences corpus figure incremental lexicon domains function training data recorded rate terms grammar rules lexical items measure assistance versions rate level training seen significant coverage figure shows incremental grammar domains figure shows incremental lexicon sentences domain rate grammar vocabulary indicating amount training data enough provide good sample kinds constructions used domain see sentences set data required provide good sample constructions needed important future evaluations develop better methods amount training data needed given application since vocabulary similar grammar applications may simple vocabulary would measure amount training data needed beginning data terms training data multiple applications applications illustrate two similar kinds applications different characteristics perhaps actual data carried spoken language applications ability make training data improve
abstract air travel information system naturallanguage evaluation report describes system used evaluation results makes changes database structure data system used future evaluations system naturallanguage processing system used evaluation language engine developed research present main processing system taken grammar semantic interpretation rules lexicon substantially new system query processing following lexical syntactic parsing semantic interpretation selectional filtering database query generation query database retrieval syntactic semantic rules used parsing interpretation expressed unificationbased parser based parsing algorithm contextfree grammar unification grammar unification dealing category expressions feature constraints provided grammar compiled ordinary term structures assigning major category position feature occur category grammatical unification implemented simply term unification
presented number papers wide range topics concerning speech recognition two papers robust signal processing algorithms one approaches large vocabulary speech recognition two papers algorithms computation time one adding new words vocabulary one issues concerning vocabulary independent recognition first presented presented algorithm using linear algorithm called stochastic problems work results presented determining single using algorithm discussion following issue evaluate improvement speech recognition accuracy used metric second presented new algorithm presented algorithm uses em algorithm finding using data characteristics recognition presented number using different discussion although characteristics relative transfer function independently utterance presented described
one problems speech input head fixed position would problem techniques best promise system development robust algorithm determine fundamental issue system algorithm step rather conventional method high accuracy using novel data using fact source best obtained using method directly far less robust algorithm space efficient technique stochastic highly efficient results
discuss recent results efforts make speaker independent recognition system robust changes environment deal differences level desktop describe two novel methods based domain first algorithm correction signal second technique em techniques used best input utterances entries representing standard use algorithms improves recognition accuracy system tested one
describes algorithm speech makes possible sentences word vocabulary desktop computer real time algorithm combination linear segmentation together word total computation required vocabulary appear algorithm described related one used commercial word utterance recognizer
basic recognition units large vocabulary speech recognition systems base forms usually vocabulary chosen however many applications speech recognition fixed vocabulary require user able new words vocabulary least one base form must new word properly integrate word recognition system dictionary often determining new words often names also substantial words describes series experiments automatically new words actual utterances new word conjunction set automatically derived rules evaluated recognition performance new words spoken two different base forms extracted via approach error new words found better derived thus basic approach
widely linguistic theory speech recognition natural spoken messages basis intermediate representation acoustic signal terms small number symbols traditional linguistic theory several first provides natural way process spoken language distinct acoustic lexical syntactic second provides reduction successive process finally seems development written language thus formed basis several early speech recognition report offer believe direct linguistic theory speech recognition system present system experiments conducted past three years method acoustic mapping described results application speaker dependent recognition spoken given next new method lexical access applied problem recognition words large vocabulary sentences attention used early account speaker independent recognition speech
algorithm acoustic language model matching speech recognizer tree search language find best language model speech describes method search find likely recognized sentence number entries tree search however exponential number words second algorithm presented search cost
speech recognition system described detail exploration system provides user help various system limited database objects provide information objects eg numbers type well providing assistance spoken typed input form text speech since made impact system describe report evaluation results changes incorporated system two key speech natural language implementation processing time approximately times real time approximately times real time also discuss number incremental improvements grammar networks end capabilities initial implementation speech natural language obtaining best word sequence recognizer word sequence natural language system modifying speech recognition component produce list top word provides convenient means increasing level speech recognition natural language way natural language system word find highest sequence natural language constraints twostage search previously produce top word sequence speech recognition system used viterbi search algorithm provides efficient search top word sequence directly provide top word others chosen modify search track top word search also use modification viterbi search produce top word algorithm first use viterbi search best paths lexical time algorithm extracts next best complete searching paths find highest yet extracted extract highest paths paths twostage search fact new must either contain new given lexical given time must combination paths found far search must keep track best sum scores best paths computed viterbi search must also keep track complete paths found far next highest found taking highest either new combination previous paths computation paths either lexical time needed viterbi search top word sequence therefore total computation needed algorithm two times viterbi search amount computation extract paths pre computed measured computation time memory use implementation algorithm function number sentence hypotheses use open symbols figure experiment utterances test set vocabulary words algorithm different frame algorithm described previously number advantages important advantage search system able word string produced recognizer system one sentences natural language constraints also least based system algorithm efficient efficiency advantage may systems described necessary keep track pointers paths large problem system since nodes level rather frame level furthermore needed keep track pointers viterbi search memory increase two approach least implemented per described search cannot end utterance reached therefore part processing cannot speech search top word natural language system improvement single best sequence goal make better use natural language constraints early search search algorithm provide flexible mechanism making use natural language constraints paths based evaluation function natural language constraints used hypotheses either capability natural language system used propose ways paths finally probabilities paths provided natural language system incorporated evaluation function search evaluation function defined estimated score best containing score beginning utterance end best end utterance search upper actual best end efficiently search spoken language systems important possible since results increased computation use viterbi search upper searching end utterance find best score end lexical time constraints use viterbi search best score end full natural language constraints best score end upper best score end given full constraints search allows large amount flexibility natural language constraints example sentence hypotheses full natural language constraints turns search algorithm allows us compare directly algorithms computed processing time memory use implementation algorithm figure top word sequence algorithm requires amount implementation viterbi search figure figure compares memory usage search twostage algorithm function relative use implementation viterbi search top word sequence amount increases approximately least small perform experiments determine natural language constraints search cost constraint amount computation application constraint since able constraints small cost lexical network constraints levels experiments word constraints initial implementation search constrained language model obtained directly training utterances language model coverage however language model obtained without constraints therefore capabilities full system utterances could accept language model speech natural language dependent constraints simple language model however possible automatically extract local constraints natural language system computation making use even tightly integrated speech natural language system possible constraints directly lexical network overall accuracy twostage time twostage memory usage time memory usage constraints local language model full constraints useful facility recognizer constraints natural language system would mechanism extract language model automatically grammar end number two word allowed resulting language models coverage development set sentences approach generate directly contextfree rules without semantic syntactic constraints tried approach coverage test set high reduce tried method first rules show set training sentences resulted loss coverage test sentences second allow nodes within showed training set resulted reduction coverage approach tried make use generation capability generate sentences use resulting word language model approach language model however local syntactic semantic constraints semantic mechanism sentence would mechanism generation since constraints generally language model necessary semantic matches required generation usually constraint paths may show language model method generate sentences resulting word language model single test set therefore incorporate language model recognizer increased coverage described previously generation component translates natural language parse functional form evaluated system component made flexible part due developing system capabilities functions handle complex changes training data cases framework could handle commonly used database query systems conjunction even used subjects natural language processing background result system capable handling queries show japanese central know main networks networks expansion rules result increased amount training data effort made modify networks rules possible dictionary consistent terms corpus unusual new transcriptions new dictionary lexical rules corpus whole current implementation initial implementation system ran using ii four system approximately times real time utterance since time developed implementation new set figure using four signal processing made four memory operates independently others configuration using may read memory may write combination four speech input using ad made signal processing inc high speed serial interface serial one currently using memory natural language response generation parts system written fairly large memory would processing speech recognition system also system could easily single memory processing realtime single require model frequency data natural language recognition response generation lexical access figure figure shows current configuration system therefore current representation could different computation difficult among real time single computation acoustic done basis could necessary implemented computation input output processes input output input output full intermediate representations input output data become available used general mechanism part system allowing us easily change various parts system new algorithms developed parts system natural language processing written small number functions lexical access component using version search described rather using viterbi search best paths search search use viterbi search find best beginning use search find best end allows us viterbi search speech still process code final configuration currently using one data one input model two additional representations one one acoustic two current implementation parts system times real time combine lexical access total processing time times real time code believe processing real time present configuration combined lexical access system approximately times real time approximately times real time evaluations presented number evaluations initial version used test set measure effects changes made since time measure effects multiple sentence hypotheses allowed system evaluated produce top word rather highest word sequence performance function figure utterance figure figure shows overall performance test set function number word produced speech recognition component shows utterances correct word string found shows correct response generated see text correct shows utterances produces response line shows utterances response would produced correct word string found speech recognition component finally shows utterances either response produced top word recognition response would produced given correct word string highest word string natural language component lower shows identical expanding speech ad utterance next shows produce produced correct word string utterances correct functional level next shows utterances produced response number incorrect responses incorrect utterance produces different response one would produced correct word string utterances produce im response utterances found number would produced response system given correct word string line shows utterances produce given correct word string line utterances produce response given speech input produce response given correct word string responses either correct incorrect system number learn figure search either increasing natural language constraints search still increase number utterances produce correct response incorrect responses shows number utterances produce response find correct word string search increasing search although since possible find word string parses produces correct response even correct word string parse previous results computed using word grammar discussed previously produced word grammar better matches constraints natural language system comparison two sets constraints seen figure figure upper three figure grammar grammar seen grammar lower performance increases would even less constraint speech recognition component performance better constraints search since constraints natural language constraints much better plans evaluations show compared top word string natural language system performance overall system much increasing degree speech recognition natural language systems however evaluations also show much gained system figure figure shows performance two different sets speech recognition constraints upper three figure increasing search either increasing search natural language constraints search since increase number incorrect responses faster increasing number correct responses needed new sources information search natural language system capable providing probabilities yet probabilities reduce least three therefore allow increase search smaller number incorrect responses may also performance form currently utterance based number word produce response upper search used taking account scores top word example may able incorrect response correct responses number speech recognition incorporate system discussed detail would adaptation natural language constraints example would increase objects database much complete set current implementation would increase speech recognition result performance however vocabulary based discourse likely make large increases domain without significant increases since improving performance interactive use system implemented mechanism automatically generating tasks user help system allowed us testing system compare results obtained results obtained data collected would help made described
describes results spoken language application finding directions spoken language system consists speech recognition system language understanding system providing top candidates based acoustic score system finding capability provided expert system also part system one major goal research issues training coverage language understanding system new domain specifically determine much data takes train spoken language system given level performance new domain use answer question process data tasks decide much data address related question system function training explore relationship training coverage developed methodology measure coverage unseen material function training material using successive new material coverage unseen material trained material reached certain level coverage experiment new material system coverage level coverage unseen data sentences training data second goal develop methodology automatically grammar new application domain approach domain independent grammar development work new domain developed method minimal grammar minimal work supported naval research zue making systems available us providing us data also university making services available us evaluation advanced information technology provided assistance design analysis evaluation task lexicon corpus training material application technique corpus described compared coverage performance minimal grammar lexicon test set found parse time achieved small loss coverage second major focus evaluation specific algorithms using natural language system particular compared performance two algorithms reference resolution processing finally major focus evaluate overall coverage accuracy spoken language system using two test corpora collected containing total utterances system evaluated basis first utterance output first candidate utterance reports results word accuracy sentence accuracy application accuracy generating answer finally rate incorrect answers system overview system described detail describe spoken language system finding directions example user ask questions objects provides output form well natural language used sum speech recognition system well finding expert system system architecture system report also largely described processing summarized five major system speech recognition system dialog manager natural language processing system module formats output takes output computed using grammar syntactic semantic analysis first candidate english response well information response processed incorporated discourse context feature allows user general allows user expert system dialog natural language processing system implemented consists parser semantic component system uses based knowledge representation system training training data coverage order measure effect training coverage developed training technique training system set development sentences level application accuracy ran previously unseen sentences system measured accuracy followed development trained system accuracy system given new set unseen sentences testing development approximately sentences performance system unseen data approximately coverage figure coverage coverage measured sentences development taken development coverage coverage system developed sentences final coverage increased coverage achieved development later sentences grammar pruning experiments use syntactic semantic constraints important source constraint spoken language understanding system two approaches constructing grammar given corpus training material one approach build grammar based training data approach constructing basic grammar english domain approach general grammar english cover constructions seen training data approach advantage making available constructions full grammar easily system additional data cases coverage grammar directly amount training data seen developed technique pruning general english grammar based supervised training make use fact provides parse tree set definitions used parsing sentence parse tree also contains word part speech given corpus training sentences correct parses program identify constructions used obtain parse extract associated rules general grammar identify word actually used training data extract minimal lexical words usage context using techniques small set experiments effects pruning grammar lexicon several ways analyze pruning overall system behavior reduction however given contextdependent grammar effects pruning small reduction also effect pruning overall system performance given grammar based training sentences sentences using pruned grammar lexicon average time correct parse also relation coverage amount training data tests much coverage pruning grammar training sentences training sentences coverage pruning lexicon training sentences training sentences largely word problem pruning needed coverage data co co figure coverage data successive sets sentences experiments limited grammar lexicon pruning may offer significant processing time small coverage furthermore although yet pruned grammar spoken input pruned grammar improve ability candidates speech recognizer evaluation several new approaches evaluation including using natural language system tool specific algorithms evaluation accuracy well standard word sentence accuracy reference resolution algorithms using language understanding system compare algorithms tightly controlled comparison two specific approaches problem algorithms case investigated performance two reference resolution algorithms using data set set taken finding utterances processed reference resolution algorithms approach compared object subject object means direct object previous sentence preferred subject current sentence subject means subject preferred approaches literature tested using occurring data ran set accuracy reference resolution significant accuracy found accuracy cases amount time system reference resolution also measured found differ significantly suggest algorithms perform well domain fact subject object competing candidates data additional system evaluation used measure word sentence accuracy evaluate system whole evaluation allows us evaluate performance queries number acceptable answers example evaluate queries require dialog information application end also ask questions human cannot automatic evaluation technique whether answer correct whether error message although question human used provided human judgements methodology system evaluated level word sentence application accuracy word sentence level accuracy measured using evaluation software order evaluate system application level designed evaluation task using human score dialog system user five university one system evaluation task similar one queries responses queries categorized whether given capabilities application also categorized three represents query query represents query responses categorized first whether answers error messages answers correct correct incorrect error messages categorized either incorrect test set containing original query systems response three due time constraints test set also containing reference utterance systems response one presented via interactive program including intermediate dialog responses category results word accuracy filter computed basis first candidate syntactic semantic candidate first candidate word accuracy without computed basis first candidate ie candidate highest acoustic score table shows results test set word sentence application accuracy table results test set application accuracy correct response means either correct answer error message providing query system word accuracy sentence accuracy application accuracy correct error correct filter filter table word sentence application accuracy without filter test set utterance cases include correct responses incorrect responses incorrect error messages natural language component current system plays two roles filter speech recognizer recognized utterances roles using filter means utterance recognized spoken language system candidate using filter means utterance recognized spoken language system first candidate using utterance means candidate whatever means interpretation translation function finding expert system analysis using human evaluation requires must able approach useful measured evaluation using analysis technique described whether answer correct correct incorrect standard test set since one test set data score new set tasks would new judgements value high correctness since fairly objective judgements make less correctness example judgements test data believe could additional training although may among expert evaluation task system show filter provide large improvement word accuracy provide fairly large improvement sentence accuracy application accuracy tion accuracy test set test set improvement results ability candidates set candidates candidates interpretation also word accuracy application accuracy completely two first possible candidate semantically equivalent reference answer natural language system answer correct example would case reference utterance natural language system would correct score application accuracy lower score word accuracy possible reference candidate natural language system give incorrect response means word accuracy good even application accuracy reference reference overall table performance test set whether reference query occurred reference reference overall table performance test set whether reference query occurred summary scores performance state example reference query reference query word accuracy sentence accuracy application accuracy correct error correct filter filter table word sentence application accuracy without filter test set utterance cases natural language system find find semantically equivalent candidate give correct answer reference query either find semantically equivalent candidate give correct answer candidates table shows often criteria test set table shows similar results test set also performance system function reference answer question candidates increases probability reference utterance semantic equivalent found time increases probability natural language system finding acceptable candidate semantically reference utterance crucial ways could relationships among rate correct responses rate would give us technique accuracy spoken language system given particular speech recognizer particular language understanding figure show correct answers function reference utterance finding data test set test set order determine system correct responses function reference utterance figure shows correct responses general fact applications cost three times benefit correct response performance system obtained test set test set answer found top candidates cost benefit increased correct responses important component course time since would normally result increased processing time conclusions described several approaches training evaluation spoken language systems training described approach performance system previously unseen data increasing training data used experiment demonstrated level coverage unseen data reached system trained sentences also described general coverage grammar lexicon automatically pruned specific application thus effort building grammars application also described several approaches evaluation used system tool evaluate alternative algorithms reference resolution also evaluated system word sentence application accuracy application accuracy evaluated using technique system developers found used task relatively improvements training would improve overall application accuracy test data performance spoken language system found time test data finally demonstrated new technique determining output speech recognizer system given speech recognizer language understanding system application reference answer figure reference query test set test set reference answer figure reference query test set test set
evaluation spoken language interfaces must based input presents empirical users computer two different ways correcting spoken input also using either analyses determine aspects interface task results show speech require results emphasize speech recognition also demonstrate error correction input crucial speech interface although performance speech recognizers significantly recent years application programs using technology built based speech recognition performance spoken language application clearly accuracy speech recognition component key spoken language system however factors consider recognition system context use example system response time direct system various amount system significantly characteristics task well human performance choice task
speech recognition systems systems effective applications efforts construction systems effort new system implemented describe initial implementation general spoken language interface spoken language provides interface services number applications computer also present system built using manager provides user access database speech interfaces provide services particular speech either due speech due characteristics current recognition technology identifying services understanding integrated computer interface ultimately goal make speech conventional form input computer well integrated interface speech interface must four fundamental rules interface design applications different applications must requests similar content certain standard requests help allows user much possible single spoken interaction application application allow users requests simple forms providing natural language processing capabilities one allowing user use variety expressions including minimal forms system user must able easily model system state recognizer available example providing recognition result ability realtime natural system able user acceptable interaction otherwise user approach developing language task one dialogues exploration issues developed system provides spoken language interface services describe design system provide motivation various design interface good interface design functional system implementation allows independent development different particular design far useful able implement number different recognition systems maintaining design presented recognition system believe independent units corresponding necessary function speech interface novel elements functions implicit existing recognition systems typically identified recognized interface present provides identification functions exploration issues component figure shows functional spoken language interface attention manager recognition engine manager task manager following sections provide descriptions component attention manager humans speech environment computer systems degree lack ability spoken language systems ability order users burden system input current system function module independent development signal processing component spoken language system produces speech form vector attention manager segments units utterances recognizer implementation attention manager range complexity attention manager system uses detection utterance advantage operation lack control utterance extraneous speech recognition engine recognition engine recognition engine transforms utterance string corresponding input present implementation functions server allows multiple recognition recognition high computational often process computer several applications substantial recognition engine would implemented specialized within computer current implementation knowledge bases speech application control attention manager information task manager allows recognition engine select correct knowledge base utterance context information utterance event course use constraint provided particular application based individual current design information utterance utterance basis attribute recognition engine ability speech realtime realtime response rather response within end utterance necessary interaction response times users system instead task believe times real time metric system performance figure times real time performance four parallel implementation algorithm standard set management utterances using grammar search time component using conventional method might system response better real time since search time times real time however would system actually real time time users view recognizer least time addition due signal processing since impact users believe realtime measure relevant spoken language system performance simple response time current recognizer real time management task manager task manager figure spoken language interface one user signal process indicating system end utterance complex level function system determines automatic detection attention manager capable determining whether user addressing computer environment using speech environment current version selection attention allowing individual users select one one best particular user state form level form following supported user done user complete control interaction utterance include perform two acts utterance use mouse increasing users actions user may end even beginning user system utterance detection one act user cannot include utterance user must also coordinate beginning utterance times time figure system response time recognition system manager speech recognition
presents recent natural language work spoken language system system system speech recognition component natural language system consists bottomup parser integrated unification grammar discourse module database questionanswering focuses syntactic semantic analyses made
unification grammars based complex feature structures theoretically declarative facilitates exploration various parsing strategies however implementation parsers lists advantage search control methods parsers context nl system efficiency without advantages unificationbased cfgs one changes introduce structure control one kind achieved automatically combining similar grammar rules used parser resulted limited form grammar could use reduce number rules grammar changes elements parsing algorithm increase speed major change adding based grammar features choice features base allowed substantially space needed also use computation techniques certain computation approaches unification significantly faster still integrated overall unification framework together changes discussed resulted
abstract automatic speech recognition technology allow users describes approach improve human interface speech recognition describes research benefits spoken language research program describes research results merging hidden markov models hmm neural techniques hmm recognizers show recognized speech hmm superior using alone hybrid systems hmm processing theory advantages presented along preliminary results improving human interface speech recognition approach conversational distinct control speech recognition top believe speech recognition impact integrated mouse dialog perhaps speech output integrated systems approach similar notions speech language differences use task domain constraints provided particular application
problem parsing natural language parsing sentences natural variety nl applications extensively particular sort tasks would include ability tag word partofspeech category name syntactic phrase able adapt different types source material years research tasks high degree accuracy text still problem conventional approach grammar usually manually linguistic many grammars substantial contextfree component equivalent computational power standard parsing algorithm used obtain analyses given sentence discussion relevant concepts parsing cfgs given algorithm first chart parsing techniques described recent example grammar cfg power phrase structure grammar given simple contextfree grammars systems derived practical grammars full natural languages large algorithms parsing grammars expensive grammars often usually highly method alone
within two years approaches using stochastic techniques lexical ambiguity resolution rules less error rate trained word corpora english text eg techniques suggests much grammatical structure language may derived automatically analysis approach describe two experiments see far purely techniques automatically provide set part speech tags english grammatical analysis free english text also discuss state tagged nl corpus research million words partofspeech tagging experiment described section developed boundary parsing algorithm given text annotated part speech input method based hypothesis boundaries extracted given partofspeech ngram analyzing information within ngram new information measure information hypothesis supported performance implementation parsing algorithm determines sentence structure error rate boundaries test sentences words five boundaries sentences
machine translation world knowledge many existing approaches machine translation information presented output found input information expressed single level terms parse trees semantic languages however equivalent information different linguistic means also often expressed example japanese english often necessary noun phrases general cannot done without understanding source text english japanese english implicit ways example use must japanese machine translation therefore requires text recently approach discourse interpretation developed number eg et al based explore potential application machine translation argue approach provides reasoning mapping languages variety levels interpretation best way
describe statistical technique assigning senses words instance word sense question context word question constructed high information words
machine translation eg brown et al bilingual eg recently become parallel texts also known bilingual corpora text available multiple languages french english much current parallel texts brown et al outline method using parallel texts build machine translation system brown et al parallel texts sentence level english sentences exactly one french sentence especially two sentences matching one one matching two recent work sentence alignment eg brown appear use method described makes use fact text characters ii translation probabilistic score proposed based two simple distributions two probabilistic score used framework find maximum alignment sentences sentences aligned second step identify word
speech recognition first two papers effects real users final two papers technologies namely representations acoustic information summary discussion first field test evaluations speaker independent speech recognition telephone applications presented discussed various ways improving system performance dialog recognition technology within constraints realtime implementation techniques discussed use field data training increasing number parameters automatic hmm structure better discussion rate versus error rate good data make one rate keep error rate second analysis data real users speech recognition understanding systems speech group concentrated analyzing user response characteristics function used user versus speech characteristics effects recognition performance since good data including data telephone network discussion data data telephone services data issues problem telephone services data since possible systems natural speech recognizers university presented recent automatic source demonstrated single speaker using showed used system relative filters discussed may actually much useful technique combined final signal representation attribute extraction use features zue computer science presented presentation results experimental different representations eg etc various ways acoustic features context based model rate representations best end especially cases significant computational possible output simple acoustic loss accuracy small using features provide better loss accuracy features followed second significant discussion followed possible model well primarily due information supported data since model almost
presents first part results several field evaluations speaker independent speech recognition system context general french public telephone analysis users incorrect input major problem gap recognition real use tests remains large second part describes current improvements system better recognition resulting
performance given speech systems typically based users ways similar behavior includes characteristics speech produce well ability constrain input according since speech recognition often perform well field analyses real user behavior results several field suggest real user particular user significant amount real user speech data collected utterances data speech databases described along results experiment performance speech recognition system real user
abstract describe advanced text processing system information retrieval natural language document collections use syntactic processing well statistical term obtain representation documents would obtained traditional keyword methods parser developed allows processing large text precise identification types phrases statistical analysis two statistical computed measure contribution words phrases similarity measure words parsing tagged text parser top english parser specifically designed processing large text parser operates tagged input word tag indicating syntactic category part speech morphological features number case degree example consider following sentence article number system many advantages representation computer sentence tagged follows show noun plural noun present tagging input text substantially reduces search space parser since many
really two two different topics two papers might called building spoken language system first zue domain authors state seems obvious system project time kinds interaction dialogue beginning project system yet fully designed discusses examples kinds information exchange handle second practical describes actual natural language improvements system merging acoustic grammatical evidence part recognition algorithm simple new already provided improvement recognition score discussion aims expressed questions architecture actual implementation algorithms discussed papers final three papers prosody prosody might used automatic speech understanding
describes present discourse dialogue models within system support discourse model includes resolution also direct information direct reference entry previously table reference following system table containing objects semantic frames well previously previously system state user making information complete user allowing may even database provide additional information collected several dialogues subjects using system make learning design better dialogue
part development spoken language system domain effort speech data procedure one used many important existing system rather data past collected generated sentences subjects documents data process makes comparative analyses data collected advantages well method data
abstract describes several experiments combining natural language acoustic constraints improve overall performance spoken language system system speech recognition system language understanding system answer spoken queries assistance overall goal research combine acoustic syntactic semantic knowledge sources first experiment showed improvement combining acoustic score parse probability number results use based parse probabilities use combined score together improvement overall score training test data score defined correct incorrect experiments fully integrated system uses parser predict possible next words recognizer background experiments report represent initial steps combining speech knowledge syntactic semantic knowledge experiments using system provides assistance finding directions various objects eg spoken queries users produces answers form written answers spoken output system vocabulary words questions questions various
prosodic structure syntactic structure identical two could better quality speech synthesis could disambiguation competing syntactic hypotheses speech understanding could lead view human speech processing set experiments similar sentences representing seven types structural evidence shows basis prosodic differences phonological evidence disambiguation primarily boundary although role finally analyses describing phonological importance relative
characteristics utterance features text important speech recognition speech synthesis work techniques phrase boundaries natural speech analyzing utterances air travel information service database statistical tree techniques achieve
experiments prosody used human disambiguate spoken language particular relative prosodic phrase boundaries provides resolving syntactic ambiguity therefore automatically prosodic phrase boundaries provide information useful speech understanding among several candidate parses propose rank candidate parses based method compares prosodic phrase structure structure candidate parse experiments small corpus sentences spoken achieved disambiguation performance close performance human subjects
speech natural language processing research ensure key technology needed wide variety applications research programs aim develop enabling component technology integrated andor rapidly specific applications demonstrate technology limited programs highly emphasize objective performance evaluation describes overall programs following project summaries provide additional detail spoken language spoken language program two major large vocabulary speech recognition many applications spoken language understanding aimed interactive problem deal natural language speech aim realtime speaker independent operation program also includes basic research next generation performance evaluation speech recognition currently conducted using management corpus consists read queries air travel information system corpus consists queries plans corpus corpus one performance evaluation speech understanding conducted corpus collected subjects simulated understanding system contains certain data addition several also developing spoken language technology applications advanced
objective project develop real time spoken language system capable understanding spoken english queries interactive human machine applications management control training complex tasks system also include capability adapt new capability detect user new word allow user word system work requires three technologies speech recognition natural language understanding system work integrated speech recognition technology new natural language understanding component resulting complete spoken language system called speech major project development realtime version implemented completely version see realtime implemented signal processing natural language component also complete system recently military system called analysis tool natural language component uses unification describing english syntactic semantic constraints uses logic representing
project goals goal project use different levels prosodic information speech recognition understanding particular current focus work use prosodic phrase boundary information parsing research involves determining representation prosodic information use speech understanding system developing algorithms detection prosodic speech prosodic parser evaluating potential improvements prosody context spoken language system research recent results investigated different levels prosodic different types units eg final finding implemented tree hmm prosodic phrase boundary detection system use multiple analysis new algorithm adapting model parameters also implemented resulting algorithm recognition performance level previous system describing work acoustics speech signal processing article describing phonological analysis relationship prosodic structure syntactic structure version et al volume work
project goals goal project develop acoustic models recognition speech together efficient search algorithms use models current work acoustic stochastic models time sequence feature since use models complex algorithms achieve efficient search furthermore algorithms provide information research recent results demonstrated performance reduction error models developed new model recognition based system representation time since approaches system identification parameter alternative algorithm developed based algorithm results show significant improvement previous approaches time developed methodology recognition systems based sentence hypotheses combining scores sentences demonstrated word recognition performance combining system results model implemented model system using contextdependent models initial results applied techniques stochastic model adapting distributions means alone sentences
objective understanding engineering techniques construction system speech input goal project assumes fixed table often user speech recognizer rather system electronically track particular small sources provide signal quality project focused acoustic algorithms acoustic field systems designed built used approach current approach one many issues systems investigated using version system real data online algorithms time new one design allowing us data numbers use operational difficult acoustics small measured real models ultimately models lead algorithms implemented
project goals goal speech research development spoken language systems integrate speech processing interface way facilitates use performance practical tasks component developed context spoken language systems two domains travel task management task research spoken language currently following speech recognition technologies research directed increasing useful vocabulary speech recognizer using better models vocabulary independent recognition techniques providing configuration new tasks interfaces goal spoken language interface development understanding people interact computer systems specific development systems manager used interaction understanding spoken language actual spoken language grammar analyzing many types speech developing syntactic semantic representations language speech robust fashion dialog goal research identify spoken dialog utterance dialog level constraints based dialog semantic knowledge speech recognition knowledge sources also used learn new
plan demonstrate called current speech recognition systems real time also support increasing computational speech recognition systems next years also useful applications made available approach performance means powerful mechanism makes memory every system single memory prototype example uses memory based research contribution new mechanisms support prototype computer systems means interface interface also perform speech limited signal processing require operating system change nodes testing three system currently system software environment includes
report provides summary recent work describes future work speech recognition research systems spoken language systems project current work systems develop speech recognition capability focus achieving realtime realtime performance environment able recognition using words although recognition substantially therefore work still done improve computational efficiency algorithms recognizer interface allows online adaptation interface beginning step development correction facility speech one would allow user text correcting errors system improving models using users error recent attention management resulted new focus characteristics particular task course improving overall recognition accuracy way benefit general speech recognition applications order use speech first step write software would signal processing done standard would baseline performance assessment could used evaluate new signal processing algorithms plan implement future several development adaptation training algorithms course improving performance development test data still development ability perform experiments large speech data recognizer ibm together possible experiments many recognizer also computer focus improving accuracy recognizer sources error ability sources error developed program known utterances models together variety recognition algorithm future plans plans work management task work goal improvements overall accuracy additional aim based speaker independent strategy one rely based mixture distributions level level word level alternative signal processing algorithms also high move computational constraints us processing strategies based algorithm also work advanced research projects space naval systems
phase project aims develop software package support speech recognition technology transfer among speech recognition lack convenient powerful means programs data new speech recognition package emphasize design exploit advanced software engineering techniques abstract describing objects technology base includes two existing commercial software signal processing system interface phase goals design implement new signal processing system program design implement feature containing acoustic parameters speech recognition applications design implement prototype acoustic feature extraction module including user interface allows acoustic parameters via demonstrate new module design would phase technical furthermore developed software engineering methodology demonstrated methodology testing three modules information error messages user well obtaining
objective goal research develop spoken language system demonstrate usefulness input interactive problem system accept speech handle multiple without speaker combining based speech recognition system probabilistic natural language system achieve speech understanding system demonstrated application domain relevant summary developed procedure determining contextdependent models lexical labels speech recognition system reduced word error rate almost two word management task experiments acoustic evidence improve system performance achieved improvement performance score domain signal representation task demonstrated model signal representations particularly presence developed data procedure within domain collected nearly generated sentences comparative analyses data developed preliminary version system evaluation speech text input plans improve recognition performance complex contextdependent models alternative algorithms provide order exploit
program goals major objective program develop demonstrate robust speech recognizer techniques systems focused application spoken language systems key objective develop techniques natural language processing nlp systems applications techniques based hidden markov model hmm approach efforts focused hmm training recognition high performance advanced include due speech task also new effort comparison development model hmm recognizers effort focused development interface allow effective developing nlp andor systems background program focus improving speaker environment robust hmm word recognition system developed accuracy representing reduction error rate relative baseline hmm system robust system developed integrated simple complete real time task robust hmm recognition system large vocabulary effort development number new recognition techniques including parameter
project goals speech recognition systems operating current based transforms linear coding linear effective speech high levels specifically developing line speech accurately range levels found speech speech line substantial improvement output line compared output conventional linear speech line use speech recognition systems sounds detection analysis system line elements negative developed method variety simple using form corresponding data showed two frequencies interact one others
project goals developing real time implementation spoken language systems goal develop speech recognition algorithms capable speech based word vocabulary word system recent results recent project include designed tested designed tested output distribution hmm state output probabilities hmm designed tested hmm hmm hmm state probabilities developed software support effort includes following software modules system control program different grammar computation current software algorithms machine implementation realtime plans complete construction current design software tools support architecture design high interface interface ad develop large vocabulary recognizer fully use computational capabilities design implement multiple types
project goals project involves speech natural language processing spoken language systems goal project develop interface database developed along two research development one database query full interactive system recent results illustrate combined language system graphical user interfaces development template generating database queries template parameter control much constraint answers answers implementation bottomup parser grammars new parser original parser times faster initial bottomup parser exploration two integrate recognizer current nl recognition statistical grammar recognition probabilistic finite state representation templates evaluation nl speech recognition technologies sentence error rate sentences nl word error rate management speaker independent speech recognition evaluation grammar standard word grammar improvements grammar coverage expressions domain noun
goals objective spoken language systems effort develop demonstrate technology understanding speech spoken language architecture speech recognition systems discourse understanding system language understanding system used variety message understanding applications handle spoken input power processing ability rapidly new task domains open architecture ability handle discourse includes reference resolution module discourse previously
overview four papers various topics speech recognition followed general discussion first two papers computational search techniques two papers issues first training large presented systems described algorithm building models computational efficiency speech recognition technique designed variation model parameters demonstrated provide significant improvement miss rate correct word miss rate remains relatively high however list words vocabulary words discussion question regarding use language model answer word probability used second algorithm large vocabulary speech recognition presented described new search algorithm times expensive word recognition using word vocabulary time required task times real time discussion question regarding manner search answer known independent
describes new algorithm building models use speech recognizer rather single word new procedure directly set trained hidden markov models simulated generate sample word together build new models method us construct models better variation word require extensive adaptation needed original method preliminary report outline new procedure building models report results initial testing recognition task
describe three analyses effects speech speech recognition performance found speech effects significantly recognition performance speech word equivalent read speech using speech training data significantly improve performance speech word accuracy effects recognizer using much speech training data possible read speech training data even within task domain significantly improve performance
phase iii project three evaluating document detection retrieval projects text retrieval work national technology evaluation also many information retrieval project provided discuss system results retrieval tasks done using first four goals work research text retrieval based large test collections increase among open exchange research speed transfer technology research commercial substantial improvements retrieval method realworld problems increase techniques use including development new techniques applicable current sys stateoftheart systems trec provides test set ments questions participants retrieval systems data return list documents results documents correctness
course program evaluation methodology information extraction developed technology multiple task levels multiple languages information extraction automated statistical algorithms developed use systems agreement interface allowed system developers analyze errors improve work software public domain future projects carried based data applications algorithms evaluation methodology tasks original task extract information relevant events texts use scenario template scenario used evaluation including training formal two domains capabilities used english japanese development transition focus limited time developers could know domain scenario template test training test data provided management formal one also task named well template elements used scenario template multilingual extraction task done named entity japanese full evaluation named entity japanese done part template relation task also allow extraction relationships template elements scenario template domain scenario template named template template scenario multilingual entity relation template air formal events table development tasks years tasks defined detail remainder section results evaluations given next section tabular format level entity extraction named ne defined proper names organization names well times annotation within text example new times news service follows base past million task co semantic research tasks needed generating scenario templates evaluations type following example new times news service well function base value million base past million task ne task task template elements name type category template identify entity name level name types template elements substantial used text appear category contains categories dependent military company limited air example template follows air per template relations task relationships template elements task extracted text limited relationships however task easily relations entity types example template relations follows organization air per organization events scenario template built event scenario provided domain allowed high accuracy systems task required rules choice domain dependent evaluation structure template task dependent author task templates also utility information extraction users scenario template generally difficult task systems relatively large effort required produce ground possible required task based data encountered task definitions gained tasks information extraction certain important utility task end users lower level tasks needed higher level tasks relatively processing higher level important task definitions allow agreement well systems also ability text rapidly end product guidelines high quality research development process task required several independent annotation analysis agreement examples required task consistent goal systems could work different sources different evaluations material various sources used articles foreign information service used used articles new times news service multiple news uniform format typically texts per texts chosen using associated domains relations management air events used usually texts relevant provided general training training test formal training test data evaluations annotation accuracy least higher whenever system performance human performance evaluation results final package research use community large evaluation results evaluation results given table terms highest score best system early tasks recall precision usually combined used recall precision scores scenario template ever several multiple tasks levels processing template design issues discussed next section future evaluation methods scores named entity close human performance still significantly different performance due speed applications named entity humans processing large textual data scores template template relations also high enough make technology use template elements extracted articles content article although scores lower template scores enough processed achieve results template multilingual scores scenario template named entity due changes domain training test documents results many developers native languages systems evaluated also differences named template template scenario multilingual entity relation template multilingual recall precision recall precision english japanese languages made processing languages english evaluation algorithms evaluation evaluation used information extraction information retrieval early text template automatically scores based model algorithm minimal number must make answer key system response statistical testing end statistical testing algorithm developed determine results evaluation method computer method called based document comparison performance systems evaluation results sets systems significantly different performance test set method results significant within certain rather characteristics performance systems documents course evaluations method agreement provided software measure error reports development task definitions using training data development training test software designed work domain independently adapt different template ne co configuration needed given score answer key answer key given fashion whether elements allowed answer user interfaces software reports evaluation results languages tools systems errors developers systems results user interfaces designed based input participants issues alignment tree structure scenario templates requires objects score objects given answer key order systems alignment done measure however cases instead missing less score incorrect way negative effect missing future tree structure template greatly alignment problem understanding results development testing effect issue task design problem system multiple places one inherent information especially event descriptions made task design difficult clearly course templates show effect future evaluations still current work currently named entity task used evaluate information extraction systems articles evaluate systems processing data specifically transcriptions done speech recognition systems news purpose form evaluation improvements speech recognition focus elements signal improvements information extraction make systems robust kinds input handle future directions plans future evaluations information extraction news focused event extraction template simple set event type text extracted transcriptions rules upon alignment problem effect program many people many years results would achieved without efforts keep program track participants evaluations given making information extraction technology wider computational linguistics community support work evaluations
present automated method generating summaries variety text documents including articles business reports documents even news approach em much written text certain organization call discourse structure summary therefore given order pro coherent summary select passages source document within template describe automated generate short abstracts useful list documents well full text users informa tion retrieval system quality results search reports even building effective search
research problem phase iii research objective summarization task produce single summary multiple documents search information retrieval system set evaluate performance system available field present research also developing procedure evaluate summaries create useful evaluation variables used others automatic text summarization many different summary may produced results information retrieval system query may independent information summary may represent single document group documents summary may extract sentences sections text source documents may use small even actual source documents summary may provide general overview document may act actual document evaluation methodology must account clearly specify type summary system generating chosen develop query dependent summaries single multiple documents using phrases multiple document summaries final evaluation framework two applications multiple document
abstract consists three parts preliminary summaries general description current modules performance automated multilingual text summarization system built discussion three methods evaluate summaries summaries early early text summarization computer methods developed fairly relying primarily level sentence position word frequency focused extracts passages text rather abstracts text generated presence large online corpora especially automated text summarization natural language processing nlp increases computer memory speed made possible sophisticated techniques results relatively small research us projects including commercial efforts university efforts three four years produced several systems potential well several promise improvement addition several recent several automated text summarization become
method combining query relevance context text retrieval summarization relevance reduce maintaining query relevance ranking documents selecting passages text summarization preliminary results benefits ranking adhoc query single document summarization evaluation summarization systems however advantage demonstrated automated construction large document summaries results clearly superior passage selection also discusses preliminary evaluation summarization methods single documents
automatic summarization information extraction two important services roles next generation focuses automatic summarization proposes two different models extract sentences summary generation two tasks task feature negative feature used construct summaries adhoc task text model based relationship nouns used filter discourse rank relevant sentences generate summaries result shows best summary fixed summary adhoc tasks best summary fixed summary task system outperforms average system task adhoc task
software used variety end annotation system output used three types summarization input system names events document focuses application query summa system system summarization developed text summa technology well task mining whether document relevant query enough document user determine whether document read evaluations summaries relevance nearly well full approach based concept good summary represent topics query selecting sentences document phrases query summary phrase document cover phrase query approach space retained summary minimal software built upon nlp system problem given relative summarization technologies evaluation describe approach detail prob intended important technique produce sentence tion summaries constructed selecting sentences source document addition summaries focused providing relevant information query stateoftheart techniques better produce high quality summaries summaries goal produce summaries allow user de whether document relevant query summary intended document provide answers questions may effect technology terms product see application intermediate step documents output information retrieval engine instead either document user would summaries documents decide whether document approach conducted simple experiment summaries produced summarization queries documents set summaries produced participants retained summaries ie summary relevant full document relevant queries least one six systems produced summary documents although system nearly level existing technology produced correct summary almost every relevant ment hence problem one capabilities system system implicit output based result summarization current strongly design upon query search user de actions andor informa tion retrieval engine find text documents database view summarization additional step process present user sentences document user user overall content document greatly amount document user must read order determine whether document relevant users information retrieval algorithms document various string query text certain query text information relations reference relations phrases us step reasoning level summarization still examples relation query document noun phrase best relations example management query document query main function management level provided document needed act program whether sophisticated information retrieval perhaps process collections data since noun phrases entity world sentences organization would particularly summary include people objects ing restricted proper nouns possible entity using nouns ie pronouns also events query document event query describes best document sentences summary consider following query relevant document provide new document result second find ing belief alone noun phrase refers event one referred document also document relation query document addition relation phrases text parts entity concept query likely provide useful information therefore summary finding relations general scope however ap relations number queries example relation query within document example query document discuss efforts majority document possible sentences sen tences clearly good candidates summary also consider relations events relation events events sentences contain events summaries implementation summarization technique developed within nlp framework system provides integrated environment access many levels linguistic information well world knowledge main include named entity recognition tokenization sentence tion partofspeech tagging morphological parsing detection resolution many techniques used tasks perform state described system produces annotated ments input tion algorithm query document relationships discussed previously via series query ment event query document given three forms query document set forms form morphological corresponding associated least one following criteria probability probability occur document based frequencies gathered articles measure information two used occurring make allows associated additional context available important since queries contain forms relationships proper nouns made basis string matches matching dictionary either table tion occurring document specific proper noun proper noun query associated proper noun document matches string proper noun ment proper noun document dictionary often allows associated query noun associated matches morphological part speech occur document using criteria query dictionary dictionary likely use proper noun used document less likely case query selecting sentence discussed previous section used rank select sentences every document query sentence contains given cover following scores computed sen tence document number query sentence previously sentence number noun query sentence number terms sentence query number head line sentence previously sentence number noun sentence number terms sentence number sentence previously sentence number noun sentence index sentence document sen tences sentences based scores criteria case criteria less scores ranked order score ranked order sen tence scores order select next sentence selection query summary contains least sentences scores used select sentences related query scores documents sentences appear related query presented alone would give con document thus sentences related presented provide additional ground consider following example query evidence us summary used first time three units sentence contains query however alone ambiguity resolved ing sentence well associated summary may ac one two hidden provides enough background information reader taking us thus document query scores act documents contain found particularly important ments often state product com name beginning document names times document generating summary sentences pre order occurred document pronouns pre sentence summary string whenever space prepositional phrases nouns noun phrases relative removed provided contain associated query head line since determining selection subject er pronouns removed reader original text example summary example summary demonstrates many features system constrained approximately original document tive summaries used evaluation contains examples sentence summary first sentence term associated tion also sentence next object document query finally first sentence chosen name document summary one generated con higher ranked sentences passed since would query data available suggest summary end line keep would create five new sentence even occur people evaluation order evaluate summarization algorithm unseen queries text trec document summaries generated documents per query make based summaries relevant information query believed full document would likely contain information relevance compared made trec using full document comparison places summary one following categories relevant full document relevant relevant full document full document relevant full document precision recall accuracy computed follows precision recall accuracy computed number characters summary original document defined author making ments documents queries document summary results experiment following table precision recall accuracy second evaluation documents per formed results appear significantly initial however analysis provided discussion section shows fact similar results previous evaluation precision recall accuracy discussion view results first evaluation compare consistency using ment reports relevance three documents figure two agreement figure using summaries average original ment matched trec documents second evaluation much lower call figure precision however also case full documents compared trec results follows precision recall accuracy view well since accuracy using document average compared accuracy using en document two evaluations based second evaluation using criteria relevance used previous tions trec first evaluation criteria relevance trec many documents due different tions relevance summary provide material base correct decision tion summary system use ap since user determining documents relevance previously approach balance methods query sentences document nearly recall summaries us even used output summaries pro evaluating summaries al aspects systems directly final algorithm basic approaches systems redundant information summaries sentences according relevance text according one summaries produced sentences increasing summary one view coverage terms query sentences instead use fact sentence contain phrases query highly ranked sentence individual sentence algorithm approach includes scores string document position sentence document however advantage summary sen tences summary conclusion use information generating summary many systems form word ex query document however fact ex proper nouns found limited set relations text query well also within framework relations consider relations com nouns practice good results overgeneration domain next section discuss novel technology document summa system discussed takes within annotated text produces sum similar form based similarity summaries produced event concept discussed one text source computer recognition important helps document boundary allowing user examine information particular entity multiple text sources time resolving allows user identify documents also used central tool summaries multiple documents information sion identified advanced research phase iii pro gram also one potential tasks message understanding formal task describe highly resolution algorithm uses vector space model resolve people name addition also describe algorithm evaluating produced system compare algo rithm algorithm used within document task problem distinct named entity recognizers textract attempts determine whether name matches actually individual textract keep distinct different people also sub ways within document certain amount consistency cannot ments addition problems encountered ing within document documents linguistics discourse context ments distinct novel approaches architecture methodology figure shows architecture document system developed system built upon university within system message understanding con within document task system takes input pro documents output documents module extracts document sentences relevant particular entity module uses vector space model algorithm sentences extracted documents main steps document algorithm given first article produces article example consider two extracts figures output two extracts figures next within article example contains sentence ex module extracts sentences contain noun phrases form words module produces summary entity summaries case query sen techniques developed using therefore figure since least one three noun phrases three sen tences extract summary produced extract summary produced sentence tion two years relationship association figure extract figure first sentence extract sentence article mod uses summary extracted sentence similarity summaries extracted summaries similarity regarding entity university system university system within document several different including pronouns proper names ranked among top systems task evaluations output us information entity article information entity gathered module used module disambiguation consider extract figure able include fact association recognized second sentence first fact actually helps decide university system disambiguate figure architecture system association future two years lot changes changes head module vector terms terms vector form words information content two summaries extracted documents similarity computed figure extract terms figure two vector space model vector space model used documents standard vector space model used widely information retrieval model summary extracted association term present term term vector summary given frequency term sum total number documents number documents term tion vector module sum similarity summary summaries similar ity computed entity two summaries con experiments system tested highly test set articles new times criteria including article test set presence string article matched regular words articles either name variation system use new times data training regarding manually completely automated analysis data different articles one articles regarding background num ber articles greatly descriptions general track main character results figure shows precision recall precision recall using algorithm space model case constructed space terms summaries extracted comparison figure shows results using algorithm vector space model constructed space terms articles input system still used summaries importance using extract summaries highest achieved system two cases highest case highest case comparison task figure precision recall using algorithm training summaries figure precision recall using algorithm training articles tools textract would performance using algorithm precision recall figures show precision recall using al also baseline case precision recall high initial precision mainly due fact algorithm assumes errors also tested system names events experiments found precision recall precision recall figure precision recall using algorithm training sum figure precision recall using algorithm training conclusions phase iii program allowed us explore potential application annotation results summarization system system names text summarization system nearly effective full text documents determining whether document relevant query system uses limited relations query document select sentences represent events concepts query novel research problem document provides different related named entity recognition within document system takes summaries entity uses various information retrieval rank similarity summaries found metric good system output developed algorithm improvement data within document ing algorithms results potential performance good future goals central future research program software system software better relations dependent aspects system currently interfaces within believe provide motivation im annotation free text data bases addition generating summaries based similar within document summarization sys tem precision recall precision recall
investigated english adhoc information retrieval ir part use term concept level evidence either combination improve retrieval accuracy short queries five term level techniques together lead improvements standard adhoc retrieval experiments queries linguistic phrases evidence term level retrieval small improvements experiments also investigated output documents term level retrieval aim relevant documents different rank output list based query matching still ir many results example word segmentation important first segmentation phrase simple representation give good retrieval list necessary presence terms evaluation results much one statistical high frequency character indexing useful best results obtained combining character representation ir returns better precision english
information retrieval value combining multiple retrieval systems relevance scores set documents improve retrieval performance however recently consider score method users topic initial results explores value multiple retrieval systems scores manner semantic syntactic features users natural language query various systems short documents scores produced multiple systems statistically independent previous work ability improve retrieval performance using multiple retrieval systems extensively eg recently however attention manner results combined specific query using initial relevance way results combined also using distribution relevance scores multiple among predict combine results multiple systems purpose current research explore use distribution relevance scores semantic syntactic features queries documents predict combine results several retrieval systems definitions research questions query natural language users query documents possible human attribute relevance document query retrieval system machine query full texts documents produces document relevance score measure retrieval system query precision documents highest relevance scores relevant using multiple retrieval systems produces multiple retrieval scores function scores produces single relevance score output static function relevance scores single function following two questions allow query static function achieve higher precision queries static function achieve higher precision allowing query static function features would us construct function query documents retrieval systems distribution scores produced retrieval systems data queries documents relevance used queries including trec training queries queries developed business internal use applied queries trec trec queries used trec relevance relevance queries made mapped used trec several retrieval systems described used document segmentation compound documents resulting systems retrieval scores compound documents taking maximum component score thus mapping original document space retrieval systems used five retrieval systems generate relevance scores fb system translates query single terms compound proper nouns documents applies resolve relevance score probabilistic system applies term frequencies query terms document terms document frequencies document applied vocabulary single terms subject field code system applies vector similarity metric query document representations subject field code space obtain relevance scores ngram system applies vector similarity metric query document representations obtained characters semantic system query document representations translation single terms compound proper nouns obtained translation value single terms sample used vector similarity metric obtain relevance scores query document representations used following process queries documents forms application matching produce relevance scores document segmentation used either original document segmentation trec data segmentation compound documents word one retrieval system removed various retrieval systems used xerox obtained word constructing phrase retrieval systems used set rules detect compound phrases proper nouns retrieval systems proper nouns multiple expressions proper noun entity form term documents frequency terms document number documents terms table features retrieval systems retrieval systems feature fb segmentation standard word xerox xerox xerox phrase recognition proper nouns term ity reduction probabilistic vector vector vector query average number senses query term wordnet reduction used single words translate feature space using subject field feature space using semantic indexing table query representations document representations matching used five function input features addition five relevance score function used following query features several items information might available query independently particular retrieval approach representation query documents similarity query number natural language query query terms average document frequency terms highest number proper nouns number compound query terms terms query average number words correct sense query term wordnet wordnet semantic knowledge base words senses synsets query terms terms document features currently one document feature query retrieval system documents system average number top documents system score distributions following features retrieval system query maximum score approach scores approach following input function retrieval systems se documents two approaches documents ranked top retrieval systems query documents systems research question improving retrieval sample queries found query static function found single static function best precision queries table shows precision queries using retrieval systems table precision five systems overall static functions functions training testing data query single retrieval systems static functions single overall fb prob fb overall using single overall static function using different query specific static functions first results suggest allowing functions substantially improves retrieval instance using query specific static functions achieved precision compared static function queries however comparison since allows functions trained evaluated exactly data overall function trained large set data evaluated small data provide comparison data queries training test sets trained query specific function training data evaluated test data although goal improve retrieval trec scenario table shows still improvement due using functions instance achieved precision allowing query static function compared queries use function relevance scores set constructed score test document relevance test documents training documents tried function test document training document also tried contribution metric corresponding precision experiments produced functions better linear function least part performance function probability distribution relevance training documents query probability distribution relevance documents query sort linear model robust may selection training set would result performance functions linear function found vector coefficients selecting coefficients produce precision table precision five systems overall static functions functions training testing different data query single retrieval systems static functions single overall fb prob fb overall constrained functions linear five retrieval scores complex models exploration use selecting single retrieval system use relevance scores approach training documents relevance space whose five documents relevant found vector using search set whose elements whose elements sum tried using find coefficients coefficients found manner lower precision found using search method sum selection retrieval systems potential improving retrieval one way exploit use documents single overall static function although tried several ways updating function coefficients relevance exploit potential improve retrieval performance way distribution retrieval systems retrieval scores query currently building function function architecture implement function hybrid mixture expert static linear models used research question mixture expert attempts predict best coefficients use linear function figure shows relationship mixture expert query document figure functions query document features features relevance scores score research question function far coefficients query using full knowledge relevance documents query retrieval relevance available thus cannot used model query construct function way systems relevance scores using additional include features query features documents features linear model individual retrieval systems training evaluation use queries training queries used documents linear static models constitute target mixture expert trained also single linear static function training queries using data queries performance static function documents test queries baseline second research question answer research question compare performance function test queries baseline discussion far results suggest choice retrieval systems improve retrieval performance using functions instead using single static function queries one possible results linear form static models may result baseline retrieval single overall static function technique context data made difficult whether form model necessary preferred implementation mixture expert function neural network output nodes corresponding linear linear function however given real goal precision rather exactly application train network target linear likely precision change precision response large changes linear currently alternative ways training mixture expert
goal phase iii project develop techniques improve efficiency information retrieval ir systems focused four related research high precision information retrieval goal research increase set documents given user detection goal work detection develop methods removing set documents information user already seen contextdependent document summarization goal research provide document short summary includes document relevant query contextdependent goal research provide short summary group related documents includes taken whole research aims increase efficiency tasks text user must order useful information task combination linguistic approaches proposed statistical approaches existing methods ir perform ing statistical within context query document proposed linguistic approaches build existing work information extraction rely new technique
information extraction ie systems com based pattern matching patterns regular expressions edge base adapting ie system new subject domain entails construction new pattern base expensive task describe strategy building patterns examples adapt ie system new domain quickly user set examples training text example form entries example system transforms examples patterns applies patterns
reports development japanese information extraction system japanese information extraction tool systems based ing english systems information ex system extraction tool developed particular describe differences japanese systems english systems japanese ie system figure shows overall structure japanese ie system system consists modules edge bases input text document passed modules document japanese sentences first morphological order sentence although alternative use input sequence characters may problem patterns first module morphological analysis sentence used et al purpose also provides speech information used next module second module extracting named organization names time expressions expressions different english system uses pattern matching mechanism named entity detection japanese system done
task must accurately analyze large information variety sources domains complexity task variety information access extraction tools technology able provide phase iii project focused two major development tools ac providing overview information extraction ie sys tem describe efforts two concerning future directions overview processes natural language produces representations information relevant application typically form database templates example consider task message understanding con identify information business news describes highlevel within et al passage example named extract information position company consists three major first pattern recognition module consists
definitions goals information extraction involves types information natural language text recent message understanding developed tasks two named entity task involves identifying names scenario template task involves extracting information participants etc events course performance build systems close human accuracy least perform accuracy practical value addition ability adapt systems new events new domains even new languages want create systems easily possible people know internal system way systems new tasks enough widely used systems based rules annotated training corpora become available methods learning corpora become better focused systems knowledge rules approach taken use methods also world knowledge rules user interaction cases allowed us
phase iii research program focused improving information extraction ie accuracy phase ii research linguistic approaches data extraction time efforts complicated rules enabling users generate automatically new domain patterns one step development phase ii language greater facility generating modifying syntactic semantic patterns necessary identifying data pattern language group devoted order different ie systems could pattern open domain system central goal open domain work allow users develop ie systems called different topics analyzed large corpus business news developed basic concepts provides basis patterns wide range business news applications overall concepts patterns cover patterns currently implemented ie system material information authors developing
overall objective university project improve efficiency information retrieval systems amount text user must process project focuses high precision ir detection contextdependent summarization two main research version smart system information retrieval system natural language processing smart implementation model information retrieval ir purpose provide framework ir research current make system use non system uses machine learning methods quickly perform parsing sentences integrated approach uses statistical linguistic sources first identify relationships among important terms query text integrated system uses extracted relationships texts ir redundant information document detection generate summaries technical description research found university technical high precision information retrieval goal effort give users capability search user material information authors system
purpose group inc pa develop automatic text summarization using relevance metric generate summaries documents directly information individual user university per form linguistic research metric use ranking documents according combined criteria query relevance novel information previously documents sub documents analysis testing context named ir system modification also metric support ranking sub documents parts one source document finally provided two text summarization system prototype operational prototype prototype pro ability query using specific free text document provided list documents ing query ir system summarized sentences original text operational prototype capabilities user interface keyword context index feature first real end users interact
purpose project develop information extraction text summarization application resolution part systems text sum first two years effort university two parallel tasks greater part effort design tation engine second task independent effort automatically detect discourse segments university developing engine work recognized summarization effort result university making software known available research community world wide web potential importance work whole automatic text tion effort course first two years university almost efforts ing resolution engine making available research community rather ing engine problems text summarization results resolution development work results application effort text
recognition proper nouns japanese text part general problem morphological analysis japanese text processing also framework japanese information extraction recent years approach multilingual evaluation task japanese text consider given task morphological analysis problem japanese morphological analyzer done necessary work recognition proper names expressions ie named entity ne items japanese text analyzer called rec ne items two dictionary application first uses several kinds tag japanese character second based information resulting dictionary set rules applied order identify ne items found ne item information used generate final output system description system overview main processes system follows basic morphological analysis carried input text using simple dictionary partofspeech information text since proper noun one parts speech nouns tagged simply noun three proper noun organization
japanese used multilingual entity task evaluation initial japanese system based pattern tion language describe system architecture strengths weaknesses contribution full information extraction system japanese first japanese system developed en japanese systems used graphical user interface called recognized relationships among company performance japanese together japanese systems demonstrated basic information extraction ie technology lan guage different english japanese us character input morphological developed university second japanese called japanese summarized dialogues developed also input character words dictionary domain english number changes significant transition declarative pattern language called testing develop ment developed support japanese
task identifying named entity expressions entity expressions entity expressions news articles analysis data suggests high frequency expressions results higher report primarily expressions nearly data difficult tagging since accounts many expressions makes sense one performance identification sample analysis test results recall rec rec context num ber correct tags divided number possible tags test results average rec expressions expressions scores repre average participants scores correct tags divided total possible tags total overall rec expressions would found total correct tags total possible tags identification enough obtain rec change overall average rec would increase example shows relatively small improvement
data analysis performance information extraction systems errors made circumstances however correct incorrect missing applied data based structural language semantic ne types organization time example score extraction foreign names names obvious practical ing criteria limited measured without access systems generate applied human taggers answer new tions might become available represent limited number ways ne data might particular applications capabilities yet among possible entity names would likely names names likely appear desktop list called
goals program aims technology access information large text collections particular technology developed document detection information retrieval data extraction free text architecture provide efficiently detection extraction technology architecture also providing convenient efficient environment research document detection data extraction architecture designed provide document detection data extraction associated document management functions support monolingual multilingual applications allow modules different wide range software wide range document document support application response time support detection extraction exchange information access linguistic concepts architecture described set object set functions associated objects addition functional section data typically functions object object name set named set operations otherwise operation property function associated property value property followed operations provided writing property property followed functions provided writing property property value may object one several sequence objects sequence string characters value type one operations include return value functions procedure type type function type type type result particular position may contain name type type operations abstract intended intended include operations whose name form type ie includes type operation name facility provided allow operations create new objects functions required must implemented system architecture objects functions must standard allows us example linguistic without systems generate interface document provides abstract architecture terms operations architecture implemented number languages currently implementations developed section describes set operations described document implementations architecture languages operations defined implementation architecture follows normally case name property operation first name property operation property function form becomes form name becomes keyword keyword name lists name property function formed name property name eg property property function acts set eg operation defined function name abstract architecture implementation names abstract architecture used property accessed function also set function set abstract architecture operations operation name may different support implementations various well sets structure allow function determine actual including various functions operation names lists shall implementation addition operation document required implementation architecture may provide keyword operations operation must able complete perform function even required given use may provide performance greater range functionality implementation architecture includes sequence type one possible operation value property describing implementation architecture necessary specify representation set operations basic data types since could structures called procedure language interface types corresponding sequence attribute sequence sequence sequence sequence sequence string referred may attribute etc operation ie one operations etc following operations returns first sequence index adds end sequence returns returns addition operation free described applies types objects including management free operation must provided every object memory associated object well perform necessary implementation specific operations error handling number operations architecture describe error generally phrase error errors implemented error rather error value could using function error function implementation provides utility use purpose annotation sets defined architecture operations designed parallel sets basic number list feature names arbitrary number types attribute name string value operations name string value attribute value string sequence operations sequence attribute value one string sequence returns type indicating type made languages without type identification multiple types including types would use structure implementations languages must provide type value attribute may reference document annotation attribute abstract type string operations implementation languages cannot determine type time operation requires two additional first two type one string sequence type second value document reference type string string operations document type string string string operations document string type string string string operations document annotation names collections documents etc object etc therefore possible documents collections currently open even possible documents variety objects architecture provide single must done application using property document annotation document etc abstract objects defined abstract sequence attribute operations name string value assign value current value attribute name object value attribute name string attribute name object value operation return value return name string attribute whose name property name attribute otherwise objects architecture assumes name space objects object name string architecture operating environment name name name abstract object objects abstract name string operations name string new object returns object error name name existing object name string name name object operation object name close object changes made object local memory associated object architecture assumes objects automatically system object changes made object name string instance object error name name object architecture require us identify object names names may way initial implementations present architecture collections documents objects part decision representation sequence document hidden applications minimal implementation architecture able obtain string operations returns number string string fact implementation string operation implementations may additional operations two applications large documents implementation may provide ability directly access document may done operations retrieve operations allow read write operations documents processing within architecture large collections already data system data base may highly create without copying document text implementation support capability allowing reference data example implementation could end support operations application based data base could operation data base field documents collections documents document central object architecture information several basic functions within architecture information text form although general documents atomic building collections atomic retrieval detection operations document part one collections see section document accessed document given property operations also new document retrieval operations document type document string internal document automatically new document within system system implementation may include name part string document application document processing may include representing text multiple languages well material information document information document whole document property type object operations string sequence attribute document new document within assigns document new document document makes document including internal places original document operation document document makes document including internal places document string annotation procedure document see section document sequence string string document together set format list annotation types used resolve two cover tag corresponding annotation type first list written first resulting document end tags string string document string end tags generates document containing one annotation text input text input constraints eg tags eg within tags error new sources data application collections documents processed within architecture functions perform specific type data source hence application required provide operations new type data source used collections documents gathered collections may level well individual documents collections provide documents within architecture collections general hence names however architecture also provides collections type string sequence document operations name string sequence attribute named sequence attribute operation subject based using representations applications operation subject based using representations applications returns number documents string document document present string document returns document given document document returns first document within data structures internal used documents returns documents found document returns next document within normally used documents returns documents found must well presence means using must documents called documents documents called may may encountered string document returns document given several documents returns one returns string annotation procedure see section information document general structure along provide means information document recorded module module within system general structure issues arise annotated annotation provides information document including document document set consists starting document first document end operations end current design intended text documents may contain additional types information graphical retained would processed architecture documents contain text form sequence characters instance compressed information sequence frames cannot using starting graphical document natural likely data even aligned type needed associated single text hence single however set provided order able text example event might described beginning article later article text using set allows us annotation event two passages would also allow linguistic elements code sets character terms rather characters necessary may contain data sounds character addressing would however text text text segments different character possible provide operations character level ie operations different characters different segmentation using different character code sets recorded architecture document see section application determine code set specific position document hence character position information used implement operations extract single character next character position work required multilingual design architecture operations incorporated architecture modification text allow modify text particular characters way text see text original text necessary require representation document allows eg using original string elements current architecture allow changes text must recorded text elements accessed processes application create new document new property information associated annotation annotation type document examples possible types sentence addition one may annotation annotation type string annotation annotation set annotation document value among document type string sequence operations type string sequence sequence attribute annotation examples simple whose single include attribute name might company etc pos part speech attribute might tree attribute would form example attribute whose value annotation would even complex attribute value would template object may contain pointers several text elements various template object central architecture applications frequent access search select document architecture number operations operating sets particular operations provided support document support extraction certain criteria although sets could implemented sets eg lists provided implementations may implementation list tree one order implement operations efficiently document includes one property document operations also applied documents case operation property document sequence annotation individual set operations document annotation string adds annotation document annotation operation new annotation document assigns field annotation field annotation existing annotation document new annotation existing annotation field annotation document string annotation document error document annotation document string annotation returns annotation whose value error annotation returns number annotation returns annotation first annotation index document type string constraint sequence attribute returns set document type type constraint constraint sequence attribute name value annotation constraint attribute annotation value constraint sequence constraint given type type types attribute constraints document type string constraint sequence attribute document type type constraint document position returns set document position document position returns set document starting greater position returns two annotation type
summary architecture architecture software architecture providing document detection ie information retrieval message information extraction functions text handling applications high level architecture described architecture design document may initial architecture design complete interface control document provided form content modules purpose architecture architecture intended advanced document detection information extraction software provides component module design developed significant number advanced software type addition design number us architecture developed us similar text handling software modules knowledge sources use architecture also development process new text handling applications basis design already customer finally architecture allow systems fashion new text handling technology becomes available research community advantage architecture testing new advanced text handling scope architecture architecture designed large number text handling dia however document detection information extraction functions functions machine translation character recognition must architecture addition user interface architecture tools analysis tools showing document part user interface application tools architecture use information document relationships documents phrase lists name lists object data base functionality within architecture architecture overview detection extraction component component document data manager base document document figure architecture scope architecture four detection extraction annotation document management detection technology text message text retrieval extraction technology identifies specific relationships free text annotation allows two information level primarily present method information developed modules extraction component items specific types names places organization names example text modules text data types passed component part application processing document management component function existing document standard addition architecture architecture basic functionality modules however interfaces yet defined level detail required goals software reuse ie may may architecture tested use number applications learned architecture purpose interfaces may changes configuration control process program circumstances architecture cannot defined architecture testing may defined follows applications engineering produce architecture assessment document ways design architecture regarding places within design issue architecture design allowed configuration control form program process result architecture gained specific implementations well information modules community background architecture describes framework development text processing applications interfaces development operational research applications well transfer new text processing technology field purpose architecture concept
architecture program software program shows architecture goals supports document detection information extraction document management allows different uses standard allows document detection information extraction work together using linguistic supports foreign language text processing program two versions known current basic object program way different could work together architecture participants produced text extraction software document detection text extraction extraction database new state university document manager text extraction document detection output university document detection program allows various manner similar actual application variety document collections english available document manager support various use document manager lists document lists documents detection graphical users part architecture use one component
abstract architecture providing document management document retrieval information extraction services one major phase ii program architecture developed architecture group past two years developed systems motivation phase ii program sion technology document tion information retrieval informa tion extraction free text also technology could technology proposed approach identify ing set services needed range text analysis applications standard set functions interfaces services functions interfaces would constitute architecture creation architecture could help many ways could speed initial application devel providing mod could system well defined internal interfaces modules could support system advantage technology making much module module ing combine language
use formation extraction technology patterns represent ones informa tion much work done ii project directed background basic structure system present specifically discuss declarative pattern language adapting rules examples addition developed basic capabilities describe efforts one resolution use improving document also described structure finitestate one five build ing structures input phase takes input output objects produced previous phase name recognition basic phrase recognition complex phrase recognition event recognition event merging describing system given input following management domain co years informa tion information services operation become ing research
abstract conducted number experiments evaluate various building integrated system experiments using smart system baseline goal determine advanced information extraction methods improve recall precision document detection identified following two extraction detection extraction extraction step identify concepts indexing detection step recall high initial precision detection step automatic relevance using top documents recall ii detection extraction extraction step high recall precision step learn concepts query step increase precision effort concentrated following issues shallow nlp phrase disambiguation full syntactic parser existing extraction capabilities index retrieval retrieval model algorithm learning arbitrary concepts pattern matching shallow nlp pattern matching method allows word text using simple pattern language compiled set finite automata represents single within language several related rules package result matching input series variables within lexical elements text
multilingual text retrieval basic detection task include retrieving relevant languages query language task therefore efforts machine translation efforts text retrieval machine translation com may substantially due basic design implementation text retrieval systems text retrieval systems regard queries documents words translation set terms therefore approximately translation terms although elements languages many terms becomes increasingly sentence level second multilingual text retrieval translation done possible translate every document index time example substantially higher query retrieval time benefit ing query queries applied terms queries available natural language text retrieval system range translation techniques able query translation system greater machine translation systems previously translated document corpora made available domainspecific terminology direct comparison retrieval results query target document languages heuristics needed using examplebased translation approach query adding terms target language retrieval results approximately source language retrieval results lexical transfer techniques also used context providing wide coverage term senses evaluated five methods query translation ii results evaluated trec trec monolingual english automatic query translation methods produce new queries work improving query translation techniques expanding techniques work new languages search including search services trec starting trec corpora query sets available evaluating text retrieval queries corpus monolingual ever testing multilingual system possible query set corpus translated different language translate queries since short translated queries query transla tion system produces queries translated english versions original queries compared original queries differences two results able measure translation pro characteristics original query retrieval several trec queries versions table query translation methods applied produce new queries two major types methods used lexicon methods used parallel training corpus lexicon produce translations shallow possible senses term limited range produced term corpus methods produce translations domain related senses terminology tion comparative approaches often case parallel corpus domain trec document evaluation corpus extremely large however would using different type text corpus english translations containing pro documents documents automatically aligned sentence level using procedure estimated accuracy document documents produced parallel corpus aligned sentence lexical transfer first method perform translation bilingual dictionary individual terms english query reduced morphological resulting set terms query terms resulting queries senses term used disambiguate usage english terms example query economic business relations expansion com mar result simple relations sense queries approach produced queries rapidly simple database procedure process figure terms parallel text text terms occur highest statistical often redundant yet terms occur frequency order evaluate corpusbased methods establish baseline queries formed frequency term sets using text retrieval system term english queries translated english side corpus sentences top documents filtering terms top frequent terms next terms create new query pro figure several resulting queries given table documents queries terms queries first two queries table statistically significant terms terms extracted previous method provide baseline methods terms best terms significant features text retrieval approach extract terms significant segments parallel text comparison corpus whole various possible testing statistical method applied based test assumes distribution model term distributions text method begins extracting terms sentences top english sentences terms compared training corpus evaluate statistical top terms extracted become new query figure process resulting queries table queries could make set derived queries retrieve documents manner similar english queries training corpus query could produce similar results novel corpus one way change queries terms number possible word query large however making direct possible queries applied approach modify queries approach initial queries needed along strategy modify queries evaluating comparative queries tion queries produce queries num ber passed approach con comparative evaluation document score objective measure relative query process figure initial queries test queries strategy discussed previously used lexicon generate initial queries strategy applied one modification operations queries per generation collected best queries next generation resulting wide range changes query types queries produced system showed key terminology com terms query based comparative retrieval results using training corpus aligned sentences table shows two resulting queries method value translation final query translation method others derived work method approach derive translation parallel texts effort applied reduce complexity value resulting query translation generated queries given table process overview results resulting queries given university ran trec document using original trec queries also evaluated establish reference baseline results follows average queries produced performance reference queries queries produced performance reference higher recall levels better method queries methods even least two queries performance lexical methods good better reference queries two queries performance approach good reference queries although better precision higher recall results demonstrate lexical corpus methods applied query translation largescale multilingual text retrieval scenario although performance methods limited simple possible however improvement average precision recall queries figure recent work current work improving methods methods new languages making use new retrieval example figure query interface takes queries english translates sub resulting queries search directly figure shows search documents uses bilingual dictionary combined several heuristics expansion input query query important search query characters overgeneration translation process using terms character although cases may error automatic query terms search engine reduce terms many might second motivation terms precise short terms con words precise possible may accessed english corpus economic business en tions con sus general al con se en de economic business tions con de sus en general al con se en de table several trec queries english translations english queries economic business en tions con al con con de en se university version economic business en al tions con de en mar se version table examples queries english queries economic business en relations sus al en se general al en economic business sus en relations al con en en con de de general en con table queries english corpus economic business relations con ex decision economic business relations de particular programs states table generated queries english query lexicon query text retrieval engine queries query text retrieval engine figure approaches query translation lexical corpus corpus approaches systems average queries original lexicon recall figure average methods queries figure world wide web interface english queries mixture english english documents figure results search search results way find want related topics world computer software software software software software software software results best score de de en see also similar de en de en en see also similar software software software en en see also similar de de see also similar pro com de
phase ii program focused development integrated architecture architecture improving data extraction applications enabling users tailor information architecture support architecture group design testing implementation document manager architecture input basic documents text segments ways information extraction modules modules order allow extraction detection modules work together design work made information extraction system architecture integrated new state university implementation architecture demonstrated may also incorporated three processing modules system name phrase table recognizer system information extraction ie systems identify text basic names places performance information extraction technology becomes widely real world main systems must material information authors improve users developers computational linguists research efforts developing domain tools necessary users ie previously text evaluation provided good framework testing tools results approach track named entity resolution tasks system one top scenario template task provided even test domain strategy since participants achieve high level performance support two key elements support major research first research support user development pattern language language allows one patterns system convenient way also time impact development time domainspecific applications test management one pattern language second key research support implementation time transformations allow user specify simple patterns system linguistic semantic content including relative eg generated automatically simple pattern implementation system high level performance evaluation work future directions constitute basis efforts improve system developing architecture learning rules example highly developed grammar constrained version generated users relatively grammars simple patterns recognized corresponding variant patterns generated short goal system users learn rules maximum number
information age new handling electronically available information intelligence community program new technologies developed problems information retrieval information extraction multilingual information processing neural network based technologies important role successfully approaches problem information retrieval including multilingual information retrieval purpose research make approach information retrieval based context high vector space relative directions context information neural network based training used fashion basic context vector methodology implemented system called alone information retrieval application well upon additional context vector applications built one problem system large computation learning order reduce problem developed one step learning behavior original learning computational cost preliminary performance results learning
research grammar focused largely current generally technical linguistic available suggest strategies grammar context uniform constraint goal present current practice computational linguistics believe necessary achieving goal application typed feature logic propose system prosodic types next taking hpsg grammar show attribute phonological representations finally approach detail morphology french approach taken particularly well phonological terms highlevel prosodic constraints grammar within set standard grammar based rules external intermediate structures much recent work new model described terms constraints
presents algorithm identifying noun phrase pronouns lexical algorithm applies syntactic representations generated grammar parser derived syntactic structure simple model state parser algorithm implemented authors tested extensively computer manual texts conducted test manual text containing algorithm successfully identifies relative algorithms overall rate test experiments conducted algorithm statistically information concerning semantic realworld relations algorithms decision procedure improves algorithms performance algorithm compared approaches resolution proposed literature particular search procedure algorithm implemented grammar framework applied sentences test set authors algorithm higher rate algorithm relation algorithm approach discussed well models resolution variety factors ranking candidates
grammars grammars defined terms logic makes describe left constituents important feature natural language
transition network writing parsing grammars much used intelligence computational linguistics also used writing grammars generating sentences previously however either generation parsing required auxiliary mechanism determine syntactic structure sentence generated reports allows grammars written parse directed graphs specifically grammar written parse semantic network generate string analysis example given combined grammar parses sentences queries semantic network knowledge representation generates sentences response
describe approach parsing translation work contextfree grammar english grammar consists syntactic part acceptable parse tree semantic part corresponding constituents combined however semantic rules obtain less conventional translations english sentences interpretation property sets use certain semantic rules often using semantically preliminary translations account scope sentences without multiple semantic rules able disambiguation process operation implemented simple parsers demonstrate approach
representation far extensively investigated regard language existing computational linguistic systems text analysis generation complete lexical knowledge elements encountered processing text turns however well word require thus existence complete lexicon especially word three new problems regarding structure lexicon arise first encountered text information must extracted existence thus lexical patterns must initial hypothesis specific patterns second senses single words must new phrases thus lexicon must contain information single words pattern analysis application semantic must used new syntactic patterns thus lexical entries must integrate lexicon three features lexical entries given phrases single words lexical entries grammar rules grammar within lexical language model program uses new lexical entries examples context process hypothesis formation error correction show proposed lexicon supports language
question answering program providing access large amount data useful tailor answers individual user particular users level knowledge domain discourse important answer provided user research address issue users domain knowledge answer texts found users level domain knowledge kind information provided amount information previously users domain knowledge description either thus users level domain system knowledge base include answer propose two distinct strategies used question answering program show mixed include information knowledge base given users domain knowledge implemented strategies tailor computer system generates descriptions tailor uses one two discourse strategies identified texts construct description either expert strategies automatically produce wide range different descriptions users expert without priori set user
grammars sample languages english german french russian korean japanese derived machine learning corpora sentences key concepts learning theory probabilistic association words grammatical form grammar value word
design template information extraction application task therefore information text addresses template design general template design template design template results learned template effort discussed case section general design template balance number often goals primarily templates see also templates well good database design others particular information extraction case section template represent information necessary task application times one type information requires information example require units relations require ability represent information template information computer applications without application ambiguity text may result either representation ambiguity
three information extraction system evaluations using data conducted context phase text program evaluations conducted final evaluation conducted final evaluation information extraction participants well evaluation topic message understanding particular research development tasks goal evaluations terms development systems work english japanese andor domains methodology associated evaluations development since series message understanding evaluations technology handle language problems found text evaluations information extraction application text processing technology made possible discuss nlp techniques practical level capabilities complex systems however evaluation application differ important real application thus evaluation results system system performance task operational fairly large number defined variety inherent information extraction evaluation evaluations measure coverage accuracy error independently system may tested language domain task phase especially hard issues tools language domain independent algorithms system efficiency aspects software directly evaluated although information concerning may found papers evaluation participants evaluation process allowed access training corpus articles templates given associated software lexical course phase articles corresponding templates test corpus use evaluation new test sets used evaluation description training test corpora evaluation participants allowed access training major resulting made evaluation participants use articles obtained table identifies evaluation participants systems evaluated system textract language sys inc inc table evaluation participants also provided evaluation software via help performance benefits alternative software research evaluation software corpora primarily electronic electronic transfer every item times final testing lexical research new state university analyses roles making available electronic transfer test evaluation participants electronically test sets articles testing testing conducted participants test systems processed texts produced extracted information template format participants electronically templates using evaluation software may score templates fully automatically interactive since interactive produces performance evaluation formal evaluations usually done way templates written guidelines interactive conducted statistical tests final test scores overall performance table phase evaluations terms test sets evaluation since template especially complex testing done two ways evaluation template including identification relationships within full template first test conducted test small corpora available first evaluation conducted using objects test sets used evaluation used one certain articles test set participants use articles obtained use two fact time phase also phase evaluated domain even beginning research development domains sources obtained time final test performance course phase discussed test test test final test test sets en full en full full en full full full full full full full full full error error table phase extraction system evaluations evaluation criteria performance information extraction systems errors made circumstances errors made also performance applications terms completeness accuracy database generated system criteria limited measured without access templates systems generated using criteria current state measure relative previous evaluations compare task performance humans software extracted information one following categories correct incorrect missing systems information information actually otherwise extracted information order information circumstances performance software scores following levels template object type template overall template test set object type test set overall test set two sets first set based error rate includes overall metric error per response three overgeneration three situations described error per response metric together referred second set completeness recall accuracy precision extracted information overgeneration systems recall due systems precision due overgeneration recall precision combined overall measure called recall precision together referred refers set template entity entity name type means object part evaluation en test set articles evaluation due use articles sources yet evaluation work english en one domain two languages one japanese english see table evaluation ranking systems overall performance would done basis error per response rather measure however statistical tests showed system basis error per response consistent made basis see discussion sets important roles discussion found volume contains summary scores systems contain scores contain top contain summary statistics object bottom contain overall statistics see information score reports test design data evaluations resulted significant evaluation design test evaluation software used object templates issues tests include template especially japanese template performance probability alternative precision version recall object alignment evaluation well alignment alignment based score rather number correct evaluation software support human performance one set templates versus made regarding evaluation decision recall precision error rate metric experimental usage metric named error per response ie systems according number generated also answer allow number error per response measure performance however less error rate metric also implemented metric termed error changes significant evaluation software addition decision made template objects complex resulted significant evaluation software corpora decision resulting object alignment criteria largely valid given sparseness many objects answer key conducted final test two later made evaluation software including way complex template new method scores part rather giving one score complex whole implementation limited object alignment strategy results object information among present objects reference aligned evaluation criteria effort however made end made time result number performance increased since still answer single performance information extraction task good news error per response alignment implemented discussed next section evaluation evaluation evaluation referred simply evaluation three parts template template rather object two provide consistent relative performance systems therefore technology may use set resulted useful information well object alignment approaches template design among alignment response templates must aligned key templates alignment takes levels one response instance given kind andor one key instance levels include template level object level level case find alignment provide best content key response object level also determine whether response object alignment show substantial degree key object alignment template level done basis matching template key response level one key andor response given instance type alignment done basis degree key response alignment program may alignment object level complicated alignment takes normally done fully automatically would time criteria whether object allowed defined external alignment process criteria given object type however difficult specify criteria manner since many contain base comparison various object alignment minimal alignment criteria also called minimal mapping tried alignment called used alignment criteria used allows nearly matching given object type object alignment concerns certain eg alignment process content response object key object alignment criteria response object cases objects alignment termed object key object could mapped minimal alignment criteria object method see response corresponding key corresponding key whether correct incorrect given object type template may one possible alignment object alignment criteria objects aligned basis degree alignment program program determines error per response score actual process following alignment alignment objects one results object types especially entity template advantage cannot taken useful information dependency entity implemented objects two object types however advantages alignment believed adopted results object done single alignment problem problem relatively minor task new technology deal variety texts one ways previous evaluations increased task greater variety data extraction translation extracted information entries standard reference sources standard industrial code manual etc template structure however feature phase extraction handle one language one domain generated language domain task generated task coverage time effort major changes made evaluation design years issue assessment alignment algorithms new extraction tasks defined first two tasks naval domain next two domain evaluation conducted domains one could compare tasks terms human performance however performance data one could also measure relative way terms number semantic patterns rules etc required task practical one preliminary compare different extraction tasks quantitative criteria developed support comparison terms features texts template template rules comparison complexity task naval task criteria shows least increase several criteria made changes methods evaluation results results top systems evaluation system performance represents significant extraction systems group previous evaluation text corpus complexity text corpus template characteristics task table task compared task criteria allow relative tasks compared task template template table comparison using comparison summarized data task difficult task task along three four major measure following terms text corpus complexity terms coverage language features may encountered testing takes following statistics training corpus account number text types vocabulary average sentence average number sentences per text text corpus terms volume material processed order achieve coverage system takes following statistics training corpus account number number sentences total number words template characteristics terms features template structure amount information extracted given test set takes following statistics training corpus account number object number overall types also takes account following statistics test texts average number relevant events per relevant text average number per task terms extraction task general rules system must incorporate order template rules including relevance rules template object level level takes account following statistics training corpus test set texts also takes following statistics task account number relevance rules number template template rules corresponding table represents average factors component criteria identified inherent approach relative sentences processed less accurately ones relevant texts greater amount relevant information present error greater variety extraction makes task extraction information set task two criteria following vocabulary average number sentences per text number template one types among ways task following sentences corpus average words versus words texts relevance filtering plays role versus amount information templates per versus per tasks concerns text corpus volume text measure could less issue fact increasing statistical techniques large training data required making effective use text increases text since large amount text domain kinds domain knowledge cannot currently using automated training methods one used naval tasks number template types used comparison way templates designed template objects data act target act human target act act four referred statistics could used two tasks number objects per template average number per used comparison formal object types template texts figures two based view systems performance would text filtering document detection task texts approximately training corpus test sets system almost text filtering without performance system generating even information text task relevant texts conclusion either task places extremely text filtering task places extremely high text filtering less difficult one task places significant text filtering information extraction within context extraction independent text filtering information extracted difficult task texts present miss information information one item difficult comparison make concerns template characteristics template furthermore overall several features based number distribution various types possible possible includes case names case require extraction task task regard particular summary may task task terms template number volume text vocabulary discourse number sentences per text terms sentence relevant information relevant texts number per small texts overall results discussion evaluation results presented various using case presents general results results individual summarized papers volume evaluation participants assessment since metric metric measure obtained metric using task purpose comparison whether field nlp whole terms overall performance extraction tasks end systems comparison namely one top two statistically according four systems top two test sets three top two test set systems average score systems average systems one system average average greater level task fact scores close high scores performance top systems least performance top systems important systems achieving level performance also domain value used value precision recall cases also japanese regard system top rank language domain scores also achieved scores respectively fact relative task together fact several one task much importance comparison however whether factors evaluation design changes taken account least one task performance namely task two systems achieved score test range corresponding error per response system error per response test textract system top performance test relatively high performance task may relative task compared task also relative texts compared texts language differences discussed later section taken tasks terms scores performance comparison machine performance human performance application combination recall precision recall precision give system performance relative application goals extracting information extracted fact humans subject human factors performance performance limits humans information extraction task represent good target automated systems well since human performance due human factors also factors task human performance machine performance articles test set measured part performance four top three systems compared four human able extract information recall metric information extracted best correct precision metric performance top systems far human performance three systems used comparison able extract information information extracted best correct terms performance human performance recall measure short human performance precision measure increasing system recall precision may difficult task since systems obtain score test also task may increase recall precision amount relatively difficult task since system extract information ie likely extract information reduced texts texts see section handling two languages task task comparison task overall recall precision scores fact human performance relatively also human performance relatively measured degree human machine performance test set authors general conclusion well may keyword analysis category relatively list examples include type speed systems showed advantage humans terms speed average time required human template using software tools tasks template template information collected system system system shows average time required process article test set speed english average time required process article test set error frequent type error nearly systems miss information error metric test results show performance metric good performance overall metric error per response effect relation overgeneration well error per response metric seen figures graph results systems tests graphs generally overall metric error per response overgeneration sub limited figure error overall error per figure error overall error per response systems response systems source error overgeneration even overgeneration data objects templates fixed number one allowing one others highly number one allowing thus highly number number system could generate means overgeneration could high errors key response response incorrect thus score upper number key extraction relatively target information overall performance extraction relatively much information good overall performance systems form overall metric data show generating data obtaining relatively good ie error per response score seen number generated system number called actual act total number termed possible pos overall error per response score figure results increasing error per response generated system better error per response score even er con number generated system number ie system clearly generated high figure system relatively high error per response score generated relatively many language systems inc system system figure shows system relatively high overgeneration well relatively high figure system comparison performance error per response metric results comparative performance systems humans part task show far short human performance performance humans compared systems since evaluations designed research technology well show practical use technology would information extraction system evaluation would perform level close humans participants humans development goal may evaluation data help support likely would systems could developed make figure systems errors result missing information result types error figure shows generating data generally terms improving overall performance fact systems overall performance close fact differences among three statistically provides evidence relatively good performance high therefore greater task coverage could make human performance evidence left improvement systems found fact systems final even case systems account total number performance systems different levels object answer key may fully corresponding text may provide information object type cases system systems overgeneration score matching system error per response system overgeneration close balance evaluation four systems required field three better balance recall one better precision overgeneration ie systems actual key ie possible example system made template accounts total missing system made total missing system made en case accounts total missing template correctly left system evaluation software standard performance research applications question whether systems normally knowledge whether lack knowledge highly systems either many type system evaluation could metric correct especially since many key templates effect correct give performance least systems relatively large also potential effect giving view since systems could end ranked higher effect however relatively large number answer compared potential effect evaluation object structure since templates objects aligned impact object minimal alignment criteria limited one object object contains amount correct alignment given correct thus even object alignment criteria still objects systems correct information may object alignment template alignment template alignment criteria fairly thus although would gained correct template amount would obtained aligned template would fairly high average since template structure objects template figure system scores figure system scores two error per response two error per response figures provide examples treatment category make results show error per response scores systems using two metric standard applied systems standard error per response results significant systems includes would result systems changes would systems whose number categories response differences alignment process role since correct alignment far method two evaluations different used method called alternative correct alternative standard provide consistent performance discussed alternative results terms impact actual scores two alternative scores systems greatly likely systems often actual performance systems may estimated two standard value developed systems alternative value highly developed systems error alternative error per response described may provide better standard potential performance level systems miss relatively information texts error either standard alternative may provide better error per response potential performance level systems generate relatively information ie relatively overgeneration score metric documents data according number error metric close metric responses number responses greatly one system since overgeneration significant problem systems measure systems relatively relatively large measure appear offer useful way test results however may useful performance systems evaluation higher handling two languages four five evaluated japanese english see table least well japanese english systems error per response better better two domains japanese presented analyzed system performance differences two languages domain largely differences text corpora terms overall text structure analysis japanese text characteristics impact extraction performance presented corpus nearly texts sentences reduces discourse generally facilitates extraction domain differences scores two languages may largely fact less information extract average per template per template including one capability per template less data extraction speech recognition speech data extraction information document word speech key templates known words spoken sentences small amount system remains key templates textual ambiguity representing alternative correct answers may include alternative number objects particular instance may arise speech well words many words statistics based results english number relatively systems evaluated english statistics limited languages five three still japanese english two per template thus problem object merging template effects discussion subject showing performance differences relation key templates contain multiple process objects handling two domains four five systems including test using textract system evaluated extraction domains although time work system performance domains overall error per response scores system system better two languages system four languages results system mixed better english five japanese two test would appear results achieved systems primarily factors performance parts template many changes may less development parts may also parts small overall task terms number training corpus especially andor objects addition fact testing conducted template well full template may focus less development effort non template effect factors reduced task errors missing relatively information although systems among systems english system textract japanese system japanese system statistics average degree task reduction found results limited task overall performance english japanese testing conducted two one configuration template template see table figures graph error per response together overgeneration systems two systems error per response scores test range seven better lower test systems error per response scores test range lower test source error per response number better scores test range systems lower lower differences ie differences five overgeneration score systems lower template test seven lower overgeneration scores using textract system overgeneration lower template test seven lower thus systems score among two test score scores two japanese english best error per response scores whole evaluation system test textract system test scores respectively tests error per response scores range reference error per response score system test recall precision figure system scores figure system scores test test figure system scores figure system scores test test performance template includes many full template yet test account nearly total distribution fact cover less task since test set fairly data seen training corpus participants would development effort template would able previous work applicable range tasks therefore scores relatively good compared template least one four systems error per response score less six five six part template least one systems part template scores obtained many statistics system best average systems summarized table total since key test best average ran score score table performance best average score range error per response numbers fact performance relatively good template divided categories according type set string complex template contains following types set string systems generally case performance given type better performance type thus example performance systems four set better performance four set position three minor exceptions systems two exceptions show performance better two system four string however addition minor exceptions two represent major exceptions four systems entity object system least one many five system better two furthermore gap scores two scores least many performance good require making role among found texts less frequent two entity roles case relationship object entity entity object results formation company often case case object entity object relationship type relationship lower scores therefore part relative identifying specific roles restricted use template constrained contain either one entity must contain least one may contain two system must decide also whether thus system likely found evidence order generating data result type performance problem namely missing relevant information appear relatively performance four systems compared entity two three template although systems better two one fact systems relative two may practical selecting correct entry name large english well linguistic determining whether association entity however problem relatively performance four discussion determining correct role entity problem lower performance may also fact less account least test six range five range thus even among development efforts focused lower performance may relative also impact total evaluation summary evaluations conducted phase extraction program measured completeness accuracy systems used role missing otherwise output means state set performance state information extraction evaluation results least good level performance comparison takes account differences task task however even comparison task hard make change design templates design templates comparison also made difficult many changes made alignment processes performance therefore useful view performance systems terms rather comparison previous evaluations independent results systems tasks error per response scores test using textract system system obtained test error per response scores range achieved humans tested task however machine performance test half good human performance thus template test results show machine performance constrained test high results show similar level machine performance extensive task could achieved least relatively short development allowed results test show well approaches information extraction work tasks also show languages english crosslanguage comparison results showed fairly consistent advantage japanese english comparison results domains show advantage one domain likely differences texts extraction tasks amount time allowed development impact results variety material systems trained tested presented far evaluations scope evaluations enough parts extraction task especially types information appear relatively corpus since type information evaluation distribution relevant information text corpus result natural handling tasks tasks ones less therefore important development generally useful technology four many account less total account less account six account total four account two account results volume shows systems generating system generating substantial number analysis level individual templates corresponding texts would provide particular circumstances system extracted correct incorrect information words quantitative performance may information aspects performance analysis include actual actual texts discussion performance task far discussion based frequency definitions analysis carried authors systems analysis would circumstances correct incorrect system behavior seen strengths particular algorithms modules system author would extensive support phase would also assistance program management
evaluating state technology extracting information natural language text machine compare performance machine extraction systems achieved humans task purpose present results comparative human machine performance one information extraction tasks used evaluation help technology program analyses several us produced corpus templates information extracted text corpus used development machine extraction systems evaluation developed systems templates human extracting data text using set rules templates computer software made information rather extensive effort create templates possible performance humans task detail develop methods performance evaluation texts templates technical articles either business technology topic domain used text two languages english japanese discusses templates presents results human machine performance english presents additional experimental results motivation provide data would allow machine extraction performance compared humans programs extensive efforts develop evaluate performance different machine systems however although capable performance different machine systems useful evaluating technology providing performance used applications human performance providing human performance task used evaluation present provides human data evaluation produced relatively controlled methods statistical data second motivation value produce better quality templates allow system development evaluation quality consistency templates produced trained gained made particular efforts identify causes errors develop strategies error increasing consistency motivation human performance better extraction task relative performance humans compared different aspects task understanding particularly help construction integrated systems designed make best use present time rather different humans follows begins discussion templates particular strategies used errors consistency including rules one code given template use software tools error detection capabilities next describes results template made different roles particular template resulting key provides quality control strategies used template process results experimental test different methods human performance presented goal selecting method statistically characteristics data overall levels human performance task among data presented results development presented significant question whether performance levels measured high level performance humans information extraction compared machine systems terms errors two different aspects performance recall precision final section discusses results extraction technology templates development templates english corpus developed basic template structure relatively two project could training work two two project template structure template number objects template building related information object could either containing specific information pointers objects either set one defined field string text original article cases ambiguity could provide alternative given addition could include unusual problems particular coding primarily used compared two given article determine correct information template design see also see discussion corpora selection data discussion different extraction tasks domains languages previous english japanese corpus made templates high degree quality consistency difficult task make best use learned effort templates english quality consistency project available quality refers level actual error error includes following missing information article word making error error mouse making error constructing structure create object reference object providing incorrect reference object extraneous object consistency refers level differences among different differences include following different language article differences able information article directly different applied ability applies improve quality consistency three steps taken first set relatively rules extracting information articles object template developed rules english document rules group discuss problems handle particular cases via general one one maintaining rules highly technical topic domain expert also resolved many problems required technical knowledge second step development procedure two coding nearly half articles articles high quality development set articles test set following procedure followed two first independently article resulting provided one produced final version key development templates one four coding articles purpose two procedure correct errors initial coding consistency allowing final change coding independent coding different procedure also consistency providing examples made could see given problem also improve rules allowing detect problems could discussed lead change rules step development software tools errors detect certain kinds errors support process initial one tool tool developed new state university known version designed english tool uses graphical user interface provided interface allowed easily relationships among objects thus errors objects together tool also allowed text original article selecting mouse template thus eliminating errors addition tool allowed detect problems missing objects second tool program developed provided making possible errors differences initial program written final four templates substantial us cases making particular coding often could often identify coding particular article template coding number alternative although investigated correct identification addition templates development test sets described small number made purpose human performance extraction task time evaluation set templates development set purpose templates test set made two would normally coding articles resulting articles different roles key procedure making used english intended efficient using single procedure used english two would independently make provide would make key know whether form achieving intended improving quality consistency templates level different roles different key produced question also seen next understanding characteristics different methods human performance data set templates analyzed based role key particular coding figure shows relationship different produces based original article called coding article produces independently coding article provided produces key also produce article effect key plays particular role templates coding coding coding coding figure procedure coding templates making articles uses making final coding key natural coding primarily coding also making key typically create key tool coding use coding significant figure shows results analysis expressed terms error per response ii methodology described implemented program objects template done key key allowed contain see error scores statistical parameters tests coding coding coding key key key figure error coding compared key upon role coding making key data three accuracy terms error coding particular role role key error coding measured key bar error coding measured key bar error measured key bar also form error standard error small sample different sample likely value standard error show range within error time also later made key used making key used making key used making key figure characteristics different coding roles figure makes role different coding made also later made key made made used used making key used result figure coding compared key shows error substantially change coding initial version key results finding errors ways coding means quality consistency final version differences statistically result coding compared key shows error substantially coding original coding fact key strongly coding produced time coding substantially key since error coding substantially less provided making key thus provides good evidence making use information coding substantial results improvement quality consistency templates would case single even used although improvement methods human performance human performance information extraction compared machine performance necessary develop method responses human problem machine performance case evaluations providing answer produced manner described previous section methodology associated computer program additional problem measure performance humans extraction correct answer case english four whose performance measure substantial training source task knowledge often others made especially difficult measure performance particular problem determining best method humans compared four different methods human general criteria statistical perhaps making different human humans evaluating different methods templates test set four used described previous section template set made one using done independently making key one made templates also independent providing coding making different set templates addition templates made second key made four figure shows data four methods four data terms error objects key response used key response alternative allowed key coding since data collected normally alternative since goal make removed first alternative likely one thus others purpose using resulting data could directly compared data machine systems produced one done human used interactive cases completely made key au figure comparison methods human performance templates made using made including templates made used templates templates independent templates made key produced coding used input making key used resulted templates upon made answer templates code templates maintaining rules overall management english template coding effort showed consistent performance means nearly consistent independent much less consistent respectively high independent however resulted performance small sample templates left becomes high could result either small sample likely code articles manner similar especially others especially english generally level consistent data english example data others among however making differences among consider example case key made likely correct responses incorrectly may incorrect responses correct however patterns different methods show evidence differences similar levels effect scores minimal figure shows data methods previous figure figure data combined show means combining allows overall differences among different methods seen clearly addition combining data way increases overall made key figure comparison methods using figure shows summary characteristics different methods independent methods use method certain statistical due making key high substantial high high high high high high high figure characteristics methods make key method uses much less time actual coding articles method substantial error scores method produce less independent method kind independent methods particular control method coding similar others finally independent methods relatively high statistical method much less figure shows four four figure method method independent method method upper graph performance expressed terms recall precision information retrieval allow assessment two independent aspects performance recall measure relevant information article extracted precision measure information template correct method scores evaluation found recall figure recall versus precision scores human different methods development levels performance extraction task particularly human performance important know compared might additional training practice machine performance humans less fully would result comparative performance four used template coding professional one years years years years native english compared two different development analyzing two sets templates different time first set early time machine evaluation coding second set machine evaluation end template coding process rules developed highest level two since one work although initial work primarily coding templates discuss template design rules code large numbers templates second work coding templates first data produced first code articles set development set provided set articles make articles data produced described previously using templates test set making templates making used making used key key used used determining differences template figure shows data terms error two based work early starting beginning work project later starting early make errors although statistically significant figure performance early later least part method making key key results scores terms errors compared based data figure estimated thus early improve tests however later appear learn substantially error scores amount learning later method making differences methods small sample results alternative approach development require compares pattern among tests pattern constructed program given set templates key key measure two four figure shows patterns tests along far scores one resulting measure consistency particular scores indicating consistency made early starting later starting increased figure tests differences two figure shows scores three specific cases early starting far left consistency two increased one even test already maximum level later starting however far consistency two increased indicating still developing case ac ad bar consistency increased average indicating increased consistency general finding tests later time test later starting much practice coding templates early starting time test increase early part learning test reached level early starting early later starting ac ad early starting figure improvement consistency tests evidence literature development humans suggests develop years even simple tasks practice information extraction would increase level however appear highly end level comparison machine performance comparison human machine performance question evaluation performance machine extraction systems compares humans task figure shows performance error human using independent discussed previous section figure articles english test set also corresponding machine performance articles three machine systems evaluation best scores english figure comparison human machine performance differences error human half machine scores human machine scores highly standard error figure shows data expressed terms recall precision data rather high error rate human rate high suggests even similar performance humans either recall precision one achieve machine performance likely least better real system since constraints developers systems example information humans independent made made encountered human best recall figure comparison human machine performance using recall precision scores performance data figure data accounts individual support general conclusion group level information extraction similar uses method recall precision scores individual particularly otherwise independent see figure recall precision scores conclusion present english extraction task best machine system performs error rate less error produced highly human level performance suggests machine extraction systems still far achieving high quality extraction difficult texts extraction problems however machine performance close enough human level suggest practical extraction systems could built selection text extraction task perhaps making use integrated systems humans extraction rather upon system following effort resulting human performance english material made allow comparison technical various ways particularly program used also provided statistical also problem approaches early work human performance national science machine translation evaluation provided human performance work project management overall template effort made al also provided statistical tests performance expressed terms error per response using methodology described implemented program error defined methodology following incorrect missing error correct incorrect missing represents number responses category correct response response particular matches exactly key response response similar key according certain rules used incorrect response key response response key missing response response key program typically given set templates provides error score based templates data usually means terms error score however statistical parameters describing estimated program generate scores template even means data set templates templates produce independent score templates used statistical parameters thus many cases two given number number templates smaller number number individual template scores used standard error confidence statistical tests remainder provided data presented figure figure templates templates statistically different level standard error confidence indicating time found within templates score templates could independently thus used statistical tests standard error confidence means statistically different level standard error confidence means significantly different figure standard error respectively follows independent figure standard error confidence standard error confidence analysis independent standard error confidence standard error confidence significantly different significantly different independent figure recall precision scores respectively recall precision scores independent recall precision scores respectively recall precision scores respectively figure standard error human confidence error system standard error confidence error system standard error confidence error system standard error confidence human scores best machine statistically significant figure human recall precision scores three best recall precision scores respectively data differ machine performance use article full article test set addition used interactive human allowed give answers done use machine human data could result humans might better providing fully correct answers key likely
information extraction system modules step structure often information rules acquired manually andor automatically thus describe information extraction system answer following questions modules input output specifically structure information form rules rules applied rules acquired example consider parsing module parser input sequence words lexical items constitute sentence output parse tree sentence adds information modification relations generally information rules might form unification grammar applied chart parser rules generally acquired manually system set modules generally following set systems perform functions modules text turns text set text segments turns text text sequence sentences sequence lexical items lexical item word together lexical filter turns set sentences smaller set sentences filtering ones takes sequence lexical items identify various structures parser whose input sequence lexical items perhaps structures phrases whose output set parse tree complete set parse tree form parse tree form whole sentence semantic generates semantic structure form parse tree parse tree lexical disambiguation turns semantic structure general semantic structure specific resolution discourse processing turns structure structure identifying different descriptions entity different parts text template templates semantic structures modules text module parses text text segments would systems may text topic either discourse statistical means texts module systems source information entry template used processing information often systems treatment text ad code developed manually module takes text character sequence sentence boundaries produces sentence sequence lexical items lexical items generally words together lexical lexicon module determines possible parts speech word may single part speech makes lexical lexicon available processing certain basic types occur times company names words generally morphology context much information possible spelling correction done module well methods used lexical perhaps conjunction morphological analysis perhaps statistical partofspeech tagging finitestate basic standard spelling correction techniques variety heuristics handling words lexicon might developed manually already existing automatically statistical techniques operating key templates andor corpus filter module uses techniques filter sentences likely thus text text processed quickly two methods used module particular application modules patterns words signal relevant events sentence words process module may sentence set may developed manually ever generated automatically patterns statistical may generated automatically words relevant sentences current sentence evaluated measure processed systems recently parse sentence directly string words full parse tree certain structures recognized high module structures task sentence parser systems noun noun phrases head noun level well together head nouns high prepositional phrases perhaps prepositional phrases often recognized conjunction done process level information found level age example many applications module generally structures phrases finitestate ad heuristics acquired manually parser module takes sequence lexical items perhaps phrases normally produce parse tree sentence systems parsing usually represent rules either phrase structure grammar constraints application rules transition networks unification grammars constraints frequent parsing algorithm chart parsing sentence bottomup constraints applied parsing becomes constraints cannot used much similar structures string words order processing exponential time time recently systems parsing information extraction applications systems although using standard methods parsing grammar limited coverage systems parser applies finitestate techniques rather complex processing within sentence various patterns application grammars parsing module either developed manually time work statistical grammar rules grammar combination complex real world sentences sort found parser existence find full parses sentences therefore systems ways combining parse tree obtain module may applied parse tree translated form module combine form one method combination simply form whole sentence conjunction form technique roles methods far operation ad real theory methods developed manually semantic interpretation module translates parse tree parse tree semantic structure form event frame representations modification relations implicit sentence often lexical disambiguation takes level well systems two levels form one general form intended information sentence specifically representation often information relevant application process translates one method semantic interpretation function application equivalent process matches rules acquired manually number processing modules may system may group words phrases phrases sentences translate sentences form traditional approach first steps directly words sentences forms recently many systems parsing group words phrases translate phrases forms discourse processing categorial grammar framework one directly words forms lexical disambiguation module translates semantic structure general semantic structure specific fact lexical disambiguation often levels example ambiguity types types types may resolved syntactic processing partofspeech tagging ambiguity form may resolved pattern found fact pattern ambiguity generally lexical disambiguation usually interpretation context word perhaps together priori probabilities word senses rules many cases developed manually although statistical methods perhaps computational linguistics especially partofspeech tagging resolution module turns semantic structure may nodes single entity structure nodes module basic pronouns noun phrases one also reference complex events event described text may identified event found previously may previously found event may role previous event three criteria used determining whether two first semantic consistency usually sort thus japanese pronouns semantic consistency consists agreement number perhaps whatever pronouns context example refers company second generally various example merging two events may sets known well types metric example may want two events occur within sentences times metric may simply number words sentences items text example resolving pronouns subject object previous sentence simply along different rules developed manually manually sort used consistency usually developed manually although would know use wordnet sort development use statistical means sort term discourse processing used almost means simply resolution events attempts use structure text simple basis discourse use resolution template generation module takes semantic structures generated natural language processing modules produces templates form required rules events defined rules labels removed company names automatic methods developing rules module method available hard work final word overview information extraction system described methods used systems reader may find systems
